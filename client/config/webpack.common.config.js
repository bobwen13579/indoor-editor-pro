const path = require('path');
const tsImportPluginFactory = require('ts-import-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');

const baseCSSLoaderConfigs = [
  {
    loader: MiniCssExtractPlugin.loader,
    options: {
      // only enable hot in development
      hmr: true,
      // if hmr does not work, this is a forceful method.
      // reloadAll: true,
    },
  },
  {
    // generate d.ts file for css/less/sass
    loader: require.resolve('@teamsupercell/typings-for-css-modules-loader'),
    options: {
      banner: '// autogenerated by typings-for-css-modules-loader. \n// Please do not change this file!',
    },
  },
  {
    loader: 'css-loader',
    options: {
      modules: {
        localIdentName: '[name]__[local]--[hash:base64:5]',
      },
    },
  },
  {
    loader: 'postcss-loader',
    options: {
      config: {
        path: 'postcss.config.js',
      },
    },
  },
];

module.exports = {
  // only in production mode, tree shaking is worked
  // 注意：如果你想看bundle analysis，请设置成production。并忽略报告中的socket-client。
  // mode: 'production',
  entry: {
    app: './App.tsx',
    framework: ['react','react-dom'],
  },
  output: {
    filename: 'js/bundle.js',
    path: path.resolve(__dirname, '../dist'),
    publicPath: '/',
  },
  module: {
    rules: [
      {
        test: /\.(jsx|tsx|js|ts)$/,
        use: [
          {
            loader: 'ts-loader',
            options: {
              transpileOnly: true,
              getCustomTransformers: () => ({
                before: [tsImportPluginFactory({
                  libraryName: 'antd',
                  libraryDirectory: 'es',
                  style: true,
                })],
              }),
              compilerOptions: {
                module: 'es2015',
              },
            },
          },
        ],
        exclude: /node_modules/,
      },
      {
        test: /\.css$/,
        use: baseCSSLoaderConfigs,
      },
      {
        test: /\.less$/,
        use: [
          'style-loader',
          {
            loader: MiniCssExtractPlugin.loader,
          },
          'css-loader',
          {
            loader: 'less-loader',
            options: {
              javascriptEnabled: true,
            },
          },
        ],
        include: /node_modules/,
      },
      {
        test: /\.less$/,
        use: [
          ...baseCSSLoaderConfigs,
          'less-loader',
        ],
        exclude: /node_modules/,
      },
      {
        // load images
        test: /\.(png|svg|jpg|gif)$/,
        use: [
          {
            loader: 'file-loader',
            options: {
              publicPath:  '',
            },
          },
        ],
      },
      {
        // load font files
        test: /\.(woff|woff2|eot|ttf|otf)$/,
        use: [
          'file-loader',
        ],
      },
      {
        test: /\.(csv|tsv)$/,
        use: [
          'csv-loader',
        ],
      },
      {
        test: /\.xml$/,
        use: [
          'xml-loader',
        ],
      },
    ],
  }
};
