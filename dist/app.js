/*! For license information please see app.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"+QaA":function(e,t,n){e.exports=function(){"use strict";var e,t=/(\[[^[]*\])|([-:/.()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\d\d/,r=/\d\d?/,o=/\d*[^\s\d-:/()]+/,i=function(e){return function(t){this[e]=+t}},a=[/[+-]\d\d:?\d\d/,function(e){var t,n;(this.zone||(this.zone={})).offset=0==(n=60*(t=e.match(/([+-]|\d\d)/g))[1]+ +t[2])?0:"+"===t[0]?-n:n}],l=function(t){var n=e[t];return n&&(n.indexOf?n:n.s.concat(n.f))},u={A:[/[AP]M/,function(e){this.afternoon="PM"===e}],a:[/[ap]m/,function(e){this.afternoon="pm"===e}],S:[/\d/,function(e){this.milliseconds=100*+e}],SS:[n,function(e){this.milliseconds=10*+e}],SSS:[/\d{3}/,function(e){this.milliseconds=+e}],s:[r,i("seconds")],ss:[r,i("seconds")],m:[r,i("minutes")],mm:[r,i("minutes")],H:[r,i("hours")],h:[r,i("hours")],HH:[r,i("hours")],hh:[r,i("hours")],D:[r,i("day")],DD:[n,i("day")],Do:[o,function(t){var n=e.ordinal,r=t.match(/\d+/);if(this.day=r[0],n)for(var o=1;o<=31;o+=1)n(o).replace(/\[|\]/g,"")===t&&(this.day=o)}],M:[r,i("month")],MM:[n,i("month")],MMM:[o,function(e){var t=l("months"),n=(l("monthsShort")||t.map((function(e){return e.substr(0,3)}))).indexOf(e)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[o,function(e){var t=l("months").indexOf(e)+1;if(t<1)throw new Error;this.month=t%12||t}],Y:[/[+-]?\d+/,i("year")],YY:[n,function(e){e=+e,this.year=e+(e>68?1900:2e3)}],YYYY:[/\d{4}/,i("year")],Z:a,ZZ:a},c=function(e,n,r){try{var o=function(e){for(var n=e.match(t),r=n.length,o=0;o<r;o+=1){var i=n[o],a=u[i],l=a&&a[0],c=a&&a[1];n[o]=c?{regex:l,parser:c}:i.replace(/^\[|\]$/g,"")}return function(e){for(var t={},o=0,i=0;o<r;o+=1){var a=n[o];if("string"==typeof a)i+=a.length;else{var l=a.regex,u=a.parser,c=e.substr(i),s=l.exec(c)[0];u.call(t,s),e=e.replace(s,"")}}return function(e){var t=e.afternoon;if(void 0!==t){var n=e.hours;t?n<12&&(e.hours+=12):12===n&&(e.hours=0),delete e.afternoon}}(t),t}}(n)(e),i=o.year,a=o.month,l=o.day,c=o.hours,s=o.minutes,f=o.seconds,d=o.milliseconds,p=o.zone,h=new Date,m=l||(i||a?1:h.getDate()),v=i||h.getFullYear(),g=0;i&&!a||(g=a>0?a-1:h.getMonth());var y=c||0,b=s||0,w=f||0,x=d||0;return p?new Date(Date.UTC(v,g,m,y,b,w,x+60*p.offset*1e3)):r?new Date(Date.UTC(v,g,m,y,b,w,x)):new Date(v,g,m,y,b,w,x)}catch(e){return new Date("")}};return function(t,n,r){var o=n.prototype,i=o.parse;o.parse=function(t){var n=t.date,o=t.utc,a=t.args;this.$u=o;var l=a[1];if("string"==typeof l){var u=!0===a[2],s=!0===a[3],f=u||s,d=a[2];s&&(d=a[2]),u||(e=d?r.Ls[d]:this.$locale()),this.$d=c(n,l,o),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),f&&n!==this.format(l)&&(this.$d=new Date(""))}else if(l instanceof Array)for(var p=l.length,h=1;h<=p;h+=1){a[1]=l[h-1];var m=r.apply(this,a);if(m.isValid()){this.$d=m.$d,this.$L=m.$L,this.init();break}h===p&&(this.$d=new Date(""))}else i.call(this,t)}}}()},"+wdc":function(e,t,n){"use strict";var r,o,i,a,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,s=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},o=function(e,t){c=setTimeout(e,t)},i=function(){clearTimeout(c)},a=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,h=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var g=p.now();t.unstable_now=function(){return p.now()-g}}var y=!1,b=null,w=-1,x=5,k=0;a=function(){return t.unstable_now()>=k},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):x=0<e?Math.floor(1e3/e):5};var S=new MessageChannel,E=S.port2;S.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();k=e+x;try{b(!0,e)?E.postMessage(null):(y=!1,b=null)}catch(e){throw E.postMessage(null),e}}else y=!1},r=function(e){b=e,y||(y=!0,E.postMessage(null))},o=function(e,n){w=h((function(){e(t.unstable_now())}),n)},i=function(){m(w),w=-1}}function T(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<P(o,t)))break e;e[r]=t,e[n]=o,n=r}}function C(e){return void 0===(e=e[0])?null:e}function _(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],l=i+1,u=e[l];if(void 0!==a&&0>P(a,n))void 0!==u&&0>P(u,a)?(e[r]=u,e[l]=n,r=l):(e[r]=a,e[i]=n,r=i);else{if(!(void 0!==u&&0>P(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function P(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var O=[],M=[],N=1,A=null,D=3,R=!1,I=!1,j=!1;function L(e){for(var t=C(M);null!==t;){if(null===t.callback)_(M);else{if(!(t.startTime<=e))break;_(M),t.sortIndex=t.expirationTime,T(O,t)}t=C(M)}}function z(e){if(j=!1,L(e),!I)if(null!==C(O))I=!0,r($);else{var t=C(M);null!==t&&o(z,t.startTime-e)}}function $(e,n){I=!1,j&&(j=!1,i()),R=!0;var r=D;try{for(L(n),A=C(O);null!==A&&(!(A.expirationTime>n)||e&&!a());){var l=A.callback;if(null!==l){A.callback=null,D=A.priorityLevel;var u=l(A.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?A.callback=u:A===C(O)&&_(O),L(n)}else _(O);A=C(O)}if(null!==A)var c=!0;else{var s=C(M);null!==s&&o(z,s.startTime-n),c=!1}return c}finally{A=null,D=r,R=!1}}function F(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var H=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){I||R||(I=!0,r($))},t.unstable_getCurrentPriorityLevel=function(){return D},t.unstable_getFirstCallbackNode=function(){return C(O)},t.unstable_next=function(e){switch(D){case 1:case 2:case 3:var t=3;break;default:t=D}var n=D;D=t;try{return e()}finally{D=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=H,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=D;D=e;try{return t()}finally{D=n}},t.unstable_scheduleCallback=function(e,n,a){var l=t.unstable_now();if("object"==typeof a&&null!==a){var u=a.delay;u="number"==typeof u&&0<u?l+u:l,a="number"==typeof a.timeout?a.timeout:F(e)}else a=F(e),u=l;return e={id:N++,callback:n,priorityLevel:e,startTime:u,expirationTime:a=u+a,sortIndex:-1},u>l?(e.sortIndex=u,T(M,e),null===C(O)&&e===C(M)&&(j?i():j=!0,o(z,u-l))):(e.sortIndex=a,T(O,e),I||R||(I=!0,r($))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();L(e);var n=C(O);return n!==A&&null!==A&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<A.expirationTime||a()},t.unstable_wrapCallback=function(e){var t=D;return function(){var n=D;D=t;try{return e.apply(this,arguments)}finally{D=n}}}},"/qSt":function(e,t,n){"use strict";var r=n("TqRt");Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=r(n("QILm")),i=r(n("3tO9")),a=n("vmBS"),l={primaryColor:"#333",secondaryColor:"#E6E6E6",calculated:!1};var u=function(e){var t=e.icon,n=e.className,r=e.onClick,u=e.style,c=e.primaryColor,s=e.secondaryColor,f=(0,o.default)(e,["icon","className","onClick","style","primaryColor","secondaryColor"]),d=l;if(c&&(d={primaryColor:c,secondaryColor:s||(0,a.getSecondaryColor)(c)}),(0,a.useInsertStyles)(),(0,a.warning)((0,a.isIconDefinition)(t),"icon should be icon definiton, but got ".concat(t)),!(0,a.isIconDefinition)(t))return null;var p=t;return p&&"function"==typeof p.icon&&(p=(0,i.default)((0,i.default)({},p),{},{icon:p.icon(d.primaryColor,d.secondaryColor)})),(0,a.generate)(p.icon,"svg-".concat(p.name),(0,i.default)({className:n,onClick:r,style:u,"data-icon":p.name,width:"1em",height:"1em",fill:"currentColor","aria-hidden":"true"},f))};u.displayName="IconReact",u.getTwoToneColors=function(){return(0,i.default)({},l)},u.setTwoToneColors=function(e){var t=e.primaryColor,n=e.secondaryColor;l.primaryColor=t,l.secondaryColor=n||(0,a.getSecondaryColor)(t),l.calculated=!!n};var c=u;t.default=c},0:function(e,t,n){n("u+rH"),e.exports=n("I7Sd")},"03hy":function(e,t,n){"use strict";var r=n("TqRt");Object.defineProperty(t,"__esModule",{value:!0}),t.setTwoToneColor=function(e){var t=(0,a.normalizeTwoToneColors)(e),n=(0,o.default)(t,2),r=n[0],l=n[1];return i.default.setTwoToneColors({primaryColor:r,secondaryColor:l})},t.getTwoToneColor=function(){var e=i.default.getTwoToneColors();if(!e.calculated)return e.primaryColor;return[e.primaryColor,e.secondaryColor]};var o=r(n("J4zp")),i=r(n("/qSt")),a=n("vmBS")},"0XgM":function(e,t,n){var r=n("LboF"),o=n("XPvl");"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},"11iF":function(e,t,n){e.exports=function(){"use strict";return function(e,t){t.prototype.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)}}}()},"16Al":function(e,t,n){"use strict";var r=n("WbBG");function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},"17x9":function(e,t,n){e.exports=n("16Al")()},"284h":function(e,t,n){var r=n("cDf5");function o(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}e.exports=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==r(e)&&"function"!=typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var n={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var l=i?Object.getOwnPropertyDescriptor(e,a):null;l&&(l.get||l.set)?Object.defineProperty(n,a,l):n[a]=e[a]}return n.default=e,t&&t.set(e,n),n}},"2mql":function(e,t,n){"use strict";var r=n("TOwV"),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var a=s(n);f&&(a=a.concat(f(n)));for(var l=u(t),m=u(n),v=0;v<a.length;++v){var g=a[v];if(!(i[g]||r&&r[g]||m&&m[g]||l&&l[g])){var y=d(n,g);try{c(t,g,y)}catch(e){}}}}return t}},"3UD+":function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},"3tO9":function(e,t,n){var r=n("lSNA");function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}e.exports=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}},"49sm":function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},"7W2i":function(e,t,n){var r=n("SksO");e.exports=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)}},"8OQS":function(e,t){e.exports=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}},"9Odx":function(e,t,n){"use strict";var r=n("TqRt"),o=n("284h");Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=o(n("q1tI")),a=r(n("FhTr")),l=r(n("KQxl")),u=function(e,t){return i.createElement(l.default,Object.assign({},e,{ref:t,icon:a.default}))};u.displayName="RightOutlined";var c=i.forwardRef(u);t.default=c},ANjH:function(e,t,n){"use strict";n.d(t,"a",(function(){return v})),n.d(t,"b",(function(){return f})),n.d(t,"c",(function(){return c})),n.d(t,"d",(function(){return m})),n.d(t,"e",(function(){return l}));var r=n("bCCX"),o=function(){return Math.random().toString(36).substring(7).split("").join(".")},i={INIT:"@@redux/INIT"+o(),REPLACE:"@@redux/REPLACE"+o(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+o()}};function a(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function l(e,t,n){var o;if("function"==typeof t&&"function"==typeof n||"function"==typeof n&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(l)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var u=e,c=t,s=[],f=s,d=!1;function p(){f===s&&(f=s.slice())}function h(){if(d)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return c}function m(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(d)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");var t=!0;return p(),f.push(e),function(){if(t){if(d)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");t=!1,p();var n=f.indexOf(e);f.splice(n,1),s=null}}}function v(e){if(!a(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(d)throw new Error("Reducers may not dispatch actions.");try{d=!0,c=u(c,e)}finally{d=!1}for(var t=s=f,n=0;n<t.length;n++){(0,t[n])()}return e}function g(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");u=e,v({type:i.REPLACE})}function y(){var e,t=m;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(h())}return n(),{unsubscribe:t(n)}}})[r.a]=function(){return this},e}return v({type:i.INIT}),(o={dispatch:v,subscribe:m,getState:h,replaceReducer:g})[r.a]=y,o}function u(e,t){var n=t&&t.type;return"Given "+(n&&'action "'+String(n)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function c(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++){var o=t[r];0,"function"==typeof e[o]&&(n[o]=e[o])}var a,l=Object.keys(n);try{!function(e){Object.keys(e).forEach((function(t){var n=e[t];if(void 0===n(void 0,{type:i.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===n(void 0,{type:i.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+i.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')}))}(n)}catch(e){a=e}return function(e,t){if(void 0===e&&(e={}),a)throw a;for(var r=!1,o={},i=0;i<l.length;i++){var c=l[i],s=n[c],f=e[c],d=s(f,t);if(void 0===d){var p=u(c,t);throw new Error(p)}o[c]=d,r=r||d!==f}return(r=r||l.length!==Object.keys(e).length)?o:e}}function s(e,t){return function(){return t(e.apply(this,arguments))}}function f(e,t){if("function"==typeof e)return s(e,t);if("object"!=typeof e||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":typeof e)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');var n={};for(var r in e){var o=e[r];"function"==typeof o&&(n[r]=s(o,t))}return n}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);return Object.getOwnPropertySymbols&&n.push.apply(n,Object.getOwnPropertySymbols(e)),t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(n,!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce((function(e,t){return function(){return e(t.apply(void 0,arguments))}}))}function v(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(){var n=e.apply(void 0,arguments),r=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},o={getState:n.getState,dispatch:function(){return r.apply(void 0,arguments)}},i=t.map((function(e){return e(o)}));return h({},n,{dispatch:r=m.apply(void 0,i)(n.dispatch)})}}}},AYN6:function(e,t,n){var r={"./configureStore.dev":["RDbm",0],"./configureStore.dev.ts":["RDbm",0],"./configureStore.prod":["9WeJ",1],"./configureStore.prod.ts":["9WeJ",1]};function o(e){if(!n.o(r,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=r[e],o=t[0];return n.e(t[1]).then((function(){return n(o)}))}o.keys=function(){return Object.keys(r)},o.id="AYN6",e.exports=o},Bnag:function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},DFhj:function(e,t,n){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=(r=n("GGyF"))&&r.__esModule?r:{default:r};t.default=o,e.exports=o},EbDI:function(e,t){e.exports=function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}},FMfr:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n("Zss7"));function i(e,t,n){var r;return(r=Math.round(e.h)>=60&&Math.round(e.h)<=240?n?Math.round(e.h)-2*t:Math.round(e.h)+2*t:n?Math.round(e.h)+2*t:Math.round(e.h)-2*t)<0?r+=360:r>=360&&(r-=360),r}function a(e,t,n){return 0===e.h&&0===e.s?e.s:((r=n?Math.round(100*e.s)-16*t:4===t?Math.round(100*e.s)+16:Math.round(100*e.s)+5*t)>100&&(r=100),n&&5===t&&r>10&&(r=10),r<6&&(r=6),r);var r}function l(e,t,n){return n?Math.round(100*e.v)+5*t:Math.round(100*e.v)-15*t}t.default=function(e){for(var t=[],n=o.default(e),r=5;r>0;r-=1){var u=n.toHsv(),c=o.default({h:i(u,r,!0),s:a(u,r,!0),v:l(u,r,!0)}).toHexString();t.push(c)}for(t.push(n.toHexString()),r=1;r<=4;r+=1){u=n.toHsv(),c=o.default({h:i(u,r),s:a(u,r),v:l(u,r)}).toHexString();t.push(c)}return t}},FhTr:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"}}]},name:"right",theme:"outlined"}},GGyF:function(e,t,n){"use strict";var r=n("TqRt"),o=n("284h");Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=o(n("q1tI")),a=r(n("wgjA")),l=r(n("KQxl")),u=function(e,t){return i.createElement(l.default,Object.assign({},e,{ref:t,icon:a.default}))};u.displayName="LeftOutlined";var c=i.forwardRef(u);t.default=c},Gshj:function(e,t,n){e.exports=function(){"use strict";return function(e,t){t.prototype.weekYear=function(){var e=this.month(),t=this.week(),n=this.year();return 1===t&&11===e?n+1:n}}}()},"Gu+u":function(e,t){var n=[],r=[];function o(e,t){if(t=t||{},void 0===e)throw new Error("insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).");var o,i=!0===t.prepend?"prepend":"append",a=void 0!==t.container?t.container:document.querySelector("head"),l=n.indexOf(a);return-1===l&&(l=n.push(a)-1,r[l]={}),void 0!==r[l]&&void 0!==r[l][i]?o=r[l][i]:(o=r[l][i]=function(){var e=document.createElement("style");return e.setAttribute("type","text/css"),e}(),"prepend"===i?a.insertBefore(o,a.childNodes[0]):a.appendChild(o)),65279===e.charCodeAt(0)&&(e=e.substr(1,e.length)),o.styleSheet?o.styleSheet.cssText+=e:o.textContent+=e,o}e.exports=o,e.exports.insertCss=o},I631:function(e,t,n){e.exports=function(){"use strict";return function(e,t,n){var r=t.prototype,o=r.format,i={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"};n.en.formats=i,r.format=function(e){void 0===e&&(e="YYYY-MM-DDTHH:mm:ssZ");var t=this.$locale().formats,n=void 0===t?{}:t,r=e.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(e,t,r){var o=r&&r.toUpperCase();return t||n[r]||i[r]||n[o].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,(function(e,t,n){return t||n.slice(1)}))}));return o.call(this,r)}}}()},I7Sd:function(e,t,n){"use strict";n.r(t);var r=n("q1tI"),o=n.n(r),i=n("i8i4"),a=(n("17x9"),o.a.createContext(null));var l=function(e){e()},u={notify:function(){}};function c(){var e=l,t=null,n=null;return{clear:function(){t=null,n=null},notify:function(){e((function(){for(var e=t;e;)e.callback(),e=e.next}))},get:function(){for(var e=[],n=t;n;)e.push(n),n=n.next;return e},subscribe:function(e){var r=!0,o=n={callback:e,next:null,prev:n};return o.prev?o.prev.next=o:t=o,function(){r&&null!==t&&(r=!1,o.next?o.next.prev=o.prev:n=o.prev,o.prev?o.prev.next=o.next:t=o.next)}}}}var s=function(){function e(e,t){this.store=e,this.parentSub=t,this.unsubscribe=null,this.listeners=u,this.handleChangeWrapper=this.handleChangeWrapper.bind(this)}var t=e.prototype;return t.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},t.notifyNestedSubs=function(){this.listeners.notify()},t.handleChangeWrapper=function(){this.onStateChange&&this.onStateChange()},t.isSubscribed=function(){return Boolean(this.unsubscribe)},t.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.handleChangeWrapper):this.store.subscribe(this.handleChangeWrapper),this.listeners=c())},t.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=u)},e}();var f=function(e){var t=e.store,n=e.context,i=e.children,l=Object(r.useMemo)((function(){var e=new s(t);return e.onStateChange=e.notifyNestedSubs,{store:t,subscription:e}}),[t]),u=Object(r.useMemo)((function(){return t.getState()}),[t]);Object(r.useEffect)((function(){var e=l.subscription;return e.trySubscribe(),u!==t.getState()&&e.notifyNestedSubs(),function(){e.tryUnsubscribe(),e.onStateChange=null}}),[l,u]);var c=n||a;return o.a.createElement(c.Provider,{value:l},i)};function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var p=n("zLVn");n("2mql"),n("TOwV"),"undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?r.useLayoutEffect:r.useEffect;n("ANjH");var h;h=i.unstable_batchedUpdates,l=h;var m=n("RIqP"),v=n.n(m),g=n("lSNA"),y=n.n(g),b=n("pVnL"),w=n.n(b),x=n("lwsE"),k=n.n(x),S=n("W8MJ"),E=n.n(S),T=n("7W2i"),C=n.n(T),_=n("LQ03"),P=n.n(_),O=n("TSYQ"),M=n.n(O),N={locale:"en_US",today:"Today",now:"Now",backToToday:"Back to today",ok:"Ok",clear:"Clear",month:"Month",year:"Year",timeSelect:"select time",dateSelect:"select date",weekSelect:"Choose a week",monthSelect:"Choose a month",yearSelect:"Choose a year",decadeSelect:"Choose a decade",yearFormat:"YYYY",dateFormat:"M/D/YYYY",dayFormat:"D",dateTimeFormat:"M/D/YYYY HH:mm:ss",monthBeforeYear:!0,previousMonth:"Previous month (PageUp)",nextMonth:"Next month (PageDown)",previousYear:"Last year (Control + left)",nextYear:"Next year (Control + right)",previousDecade:"Last decade",nextDecade:"Next decade",previousCentury:"Last century",nextCentury:"Next century"},A={placeholder:"Select time",rangePlaceholder:["Start time","End time"]},D={lang:w()({placeholder:"Select date",yearPlaceholder:"Select year",quarterPlaceholder:"Select quarter",monthPlaceholder:"Select month",weekPlaceholder:"Select week",rangePlaceholder:["Start date","End date"],rangeYearPlaceholder:["Start year","End year"],rangeMonthPlaceholder:["Start month","End month"],rangeWeekPlaceholder:["Start week","End week"]},N),timePickerLocale:w()({},A)},R="${label} is not a valid ${type}",I={locale:"en",Pagination:{items_per_page:"/ page",jump_to:"Go to",jump_to_confirm:"confirm",page:"",prev_page:"Previous Page",next_page:"Next Page",prev_5:"Previous 5 Pages",next_5:"Next 5 Pages",prev_3:"Previous 3 Pages",next_3:"Next 3 Pages"},DatePicker:D,TimePicker:A,Calendar:D,global:{placeholder:"Please select"},Table:{filterTitle:"Filter menu",filterConfirm:"OK",filterReset:"Reset",filterEmptyText:"No filters",emptyText:"No data",selectAll:"Select current page",selectInvert:"Invert current page",selectionAll:"Select all data",sortTitle:"Sort",expand:"Expand row",collapse:"Collapse row",triggerDesc:"Click sort by descend",triggerAsc:"Click sort by ascend",cancelSort:"Click to cancel sort"},Modal:{okText:"OK",cancelText:"Cancel",justOkText:"OK"},Popconfirm:{okText:"OK",cancelText:"Cancel"},Transfer:{titles:["",""],searchPlaceholder:"Search here",itemUnit:"item",itemsUnit:"items",remove:"Remove",selectCurrent:"Select current page",removeCurrent:"Remove current page",selectAll:"Select all data",removeAll:"Remove all data",selectInvert:"Invert current page"},Upload:{uploading:"Uploading...",removeFile:"Remove file",uploadError:"Upload error",previewFile:"Preview file",downloadFile:"Download file"},Empty:{description:"No Data"},Icon:{icon:"icon"},Text:{edit:"Edit",copy:"Copy",copied:"Copied",expand:"Expand"},PageHeader:{back:"Back"},Form:{optional:"(optional)",defaultValidateMessages:{default:"Field validation error ${label}",required:"Please enter ${label}",enum:"${label} must be one of [${enum}]",whitespace:"${label} cannot be a blank character",date:{format:"${label} date format is invalid",parse:"${label} cannot be converted to a date",invalid:"${label} is an invalid date"},types:{string:R,method:R,array:R,object:R,number:R,date:R,boolean:R,integer:R,float:R,regexp:R,email:R,url:R,hex:R},string:{len:"${label} must be ${len} characters",min:"${label} at least ${min} characters",max:"${label} up to ${max} characters",range:"${label} must be between ${min}-${max} characters"},number:{len:"${label} must be equal to ${len}",min:"${label} minimum value is ${min}",max:"${label} maximum value is ${max}",range:"${label} must be between ${min}-${max}"},array:{len:"Must be ${len} ${label}",min:"At least ${min} ${label}",max:"At most ${max} ${label}",range:"The amount of ${label} must be between ${min}-${max}"},pattern:{mismatch:"${label} does not match the pattern ${pattern}"}}}},j=Object(r.createContext)(void 0),L=function(e){C()(n,e);var t=P()(n);function n(){return k()(this,n),t.apply(this,arguments)}return E()(n,[{key:"getLocale",value:function(){var e=this.props,t=e.componentName,n=e.defaultLocale||I[t||"global"],r=this.context,o=t&&r?r[t]:{};return w()(w()({},"function"==typeof n?n():n),o||{})}},{key:"getLocaleCode",value:function(){var e=this.context,t=e&&e.locale;return e&&e.exist&&!t?I.locale:t}},{key:"render",value:function(){return this.props.children(this.getLocale(),this.getLocaleCode(),this.context)}}]),n}(r.Component);L.defaultProps={componentName:"global"},L.contextType=j;var z=function(){var e=(0,r.useContext(Y).getPrefixCls)("empty-img-default");return r.createElement("svg",{className:e,width:"184",height:"152",viewBox:"0 0 184 152",xmlns:"http://www.w3.org/2000/svg"},r.createElement("g",{fill:"none",fillRule:"evenodd"},r.createElement("g",{transform:"translate(24 31.67)"},r.createElement("ellipse",{className:"".concat(e,"-ellipse"),cx:"67.797",cy:"106.89",rx:"67.797",ry:"12.668"}),r.createElement("path",{className:"".concat(e,"-path-1"),d:"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z"}),r.createElement("path",{className:"".concat(e,"-path-2"),d:"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z",transform:"translate(13.56)"}),r.createElement("path",{className:"".concat(e,"-path-3"),d:"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z"}),r.createElement("path",{className:"".concat(e,"-path-4"),d:"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z"})),r.createElement("path",{className:"".concat(e,"-path-5"),d:"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z"}),r.createElement("g",{className:"".concat(e,"-g"),transform:"translate(149.65 15.383)"},r.createElement("ellipse",{cx:"20.654",cy:"3.167",rx:"2.849",ry:"2.815"}),r.createElement("path",{d:"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z"}))))},$=function(){var e=(0,r.useContext(Y).getPrefixCls)("empty-img-simple");return r.createElement("svg",{className:e,width:"64",height:"41",viewBox:"0 0 64 41",xmlns:"http://www.w3.org/2000/svg"},r.createElement("g",{transform:"translate(0 1)",fill:"none",fillRule:"evenodd"},r.createElement("ellipse",{className:"".concat(e,"-ellipse"),cx:"32",cy:"33",rx:"32",ry:"7"}),r.createElement("g",{className:"".concat(e,"-g"),fillRule:"nonzero"},r.createElement("path",{d:"M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"}),r.createElement("path",{d:"M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z",className:"".concat(e,"-path")}))))},F=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]])}return n},H=r.createElement(z,null),U=r.createElement($,null),W=function(e){return r.createElement(Q,null,(function(t){var n=t.getPrefixCls,o=t.direction,i=e.className,a=e.prefixCls,l=e.image,u=void 0===l?H:l,c=e.description,s=e.children,f=e.imageStyle,d=F(e,["className","prefixCls","image","description","children","imageStyle"]);return r.createElement(L,{componentName:"Empty"},(function(e){var t,l=n("empty",a),p=void 0!==c?c:e.description,h="string"==typeof p?p:"empty",m=null;return m="string"==typeof u?r.createElement("img",{alt:h,src:u}):u,r.createElement("div",w()({className:M()(l,(t={},y()(t,"".concat(l,"-normal"),u===U),y()(t,"".concat(l,"-rtl"),"rtl"===o),t),i)},d),r.createElement("div",{className:"".concat(l,"-image"),style:f},m),p&&r.createElement("p",{className:"".concat(l,"-description")},p),s&&r.createElement("div",{className:"".concat(l,"-footer")},s))}))}))};W.PRESENTED_IMAGE_DEFAULT=H,W.PRESENTED_IMAGE_SIMPLE=U;var B=W,V=function(e){return r.createElement(Q,null,(function(t){var n=(0,t.getPrefixCls)("empty");switch(e){case"Table":case"List":return r.createElement(B,{image:B.PRESENTED_IMAGE_SIMPLE});case"Select":case"TreeSelect":case"Cascader":case"Transfer":case"Mentions":return r.createElement(B,{image:B.PRESENTED_IMAGE_SIMPLE,className:"".concat(n,"-small")});default:return r.createElement(B,null)}}))},Y=r.createContext({getPrefixCls:function(e,t){return t||(e?"ant-".concat(e):"ant")},renderEmpty:V}),Q=Y.Consumer;var q=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]])}return n},K=r.createContext({siderHook:{addSider:function(){return null},removeSider:function(){return null}}});function G(e){var t=e.suffixCls,n=e.tagName,o=e.displayName;return function(e){var i;return(i=function(o){C()(a,o);var i=P()(a);function a(){var o;return k()(this,a),(o=i.apply(this,arguments)).renderComponent=function(i){var a=i.getPrefixCls,l=o.props.prefixCls,u=a(t,l);return r.createElement(e,w()({prefixCls:u,tagName:n},o.props))},o}return E()(a,[{key:"render",value:function(){return r.createElement(Q,null,this.renderComponent)}}]),a}(r.Component)).displayName=o,i}}var X=function(e){var t=e.prefixCls,n=e.className,o=e.children,i=e.tagName,a=q(e,["prefixCls","className","children","tagName"]),l=M()(t,n);return r.createElement(i,w()({className:l},a),o)},Z=function(e){C()(n,e);var t=P()(n);function n(){var e;return k()(this,n),(e=t.apply(this,arguments)).state={siders:[]},e.renderComponent=function(t){var n,o=t.direction,i=e.props,a=i.prefixCls,l=i.className,u=i.children,c=i.hasSider,s=i.tagName,f=q(i,["prefixCls","className","children","hasSider","tagName"]),d=M()(a,(n={},y()(n,"".concat(a,"-has-sider"),"boolean"==typeof c?c:e.state.siders.length>0),y()(n,"".concat(a,"-rtl"),"rtl"===o),n),l);return r.createElement(K.Provider,{value:{siderHook:e.getSiderHook()}},r.createElement(s,w()({className:d},f),u))},e}return E()(n,[{key:"getSiderHook",value:function(){var e=this;return{addSider:function(t){e.setState((function(e){return{siders:[].concat(v()(e.siders),[t])}}))},removeSider:function(t){e.setState((function(e){return{siders:e.siders.filter((function(e){return e!==t}))}}))}}}},{key:"render",value:function(){return r.createElement(Q,null,this.renderComponent)}}]),n}(r.Component),J=G({suffixCls:"layout",tagName:"section",displayName:"Layout"})(Z),ee=G({suffixCls:"layout-header",tagName:"header",displayName:"Header"})(X),te=G({suffixCls:"layout-footer",tagName:"footer",displayName:"Footer"})(X),ne=G({suffixCls:"layout-content",tagName:"main",displayName:"Content"})(X);J.Header=ee,J.Footer=te,J.Content=ne;var re=J;var oe,ie=function(e,t){for(var n=Object.assign({},e),r=0;r<t.length;r+=1){delete n[t[r]]}return n},ae=n("T1rO"),le=n.n(ae),ue=n("fEPi"),ce=n.n(ue),se=n("DFhj"),fe=n.n(se),de=function(e){return!isNaN(parseFloat(e))&&isFinite(e)},pe=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]])}return n},he={xs:"479.98px",sm:"575.98px",md:"767.98px",lg:"991.98px",xl:"1199.98px",xxl:"1599.98px"},me=r.createContext({}),ve=(oe=0,function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return oe+=1,"".concat(e).concat(oe)}),ge=function(e){C()(n,e);var t=P()(n);function n(e){var o,i,a;return k()(this,n),(o=t.call(this,e)).responsiveHandler=function(e){o.setState({below:e.matches});var t=o.props.onBreakpoint,n=o.state.collapsed;t&&t(e.matches),n!==e.matches&&o.setCollapsed(e.matches,"responsive")},o.setCollapsed=function(e,t){"collapsed"in o.props||o.setState({collapsed:e});var n=o.props.onCollapse;n&&n(e,t)},o.toggle=function(){var e=!o.state.collapsed;o.setCollapsed(e,"clickTrigger")},o.renderSider=function(e){var t,n=e.getPrefixCls,i=o.props,a=i.prefixCls,l=i.className,u=i.theme,c=i.collapsible,s=i.reverseArrow,f=i.trigger,d=i.style,p=i.width,h=i.collapsedWidth,m=i.zeroWidthTriggerStyle,v=i.children,g=pe(i,["prefixCls","className","theme","collapsible","reverseArrow","trigger","style","width","collapsedWidth","zeroWidthTriggerStyle","children"]),b=o.state,x=b.collapsed,k=b.below,S=n("layout-sider",a),E=ie(g,["collapsed","defaultCollapsed","onCollapse","breakpoint","onBreakpoint","siderHook","zeroWidthTriggerStyle"]),T=x?h:p,C=de(T)?"".concat(T,"px"):String(T),_=0===parseFloat(String(h||0))?r.createElement("span",{onClick:o.toggle,className:M()("".concat(S,"-zero-width-trigger"),"".concat(S,"-zero-width-trigger-").concat(s?"right":"left")),style:m},f||r.createElement(le.a,null)):null,P={expanded:s?r.createElement(ce.a,null):r.createElement(fe.a,null),collapsed:s?r.createElement(fe.a,null):r.createElement(ce.a,null)}[x?"collapsed":"expanded"],O=null!==f?_||r.createElement("div",{className:"".concat(S,"-trigger"),onClick:o.toggle,style:{width:C}},f||P):null,N=w()(w()({},d),{flex:"0 0 ".concat(C),maxWidth:C,minWidth:C,width:C}),A=M()(S,"".concat(S,"-").concat(u),(t={},y()(t,"".concat(S,"-collapsed"),!!x),y()(t,"".concat(S,"-has-trigger"),c&&null!==f&&!_),y()(t,"".concat(S,"-below"),!!k),y()(t,"".concat(S,"-zero-width"),0===parseFloat(C)),t),l);return r.createElement("aside",w()({className:A},E,{style:N}),r.createElement("div",{className:"".concat(S,"-children")},v),c||k&&_?O:null)},o.uniqueId=ve("ant-sider-"),"undefined"!=typeof window&&(i=window.matchMedia),i&&e.breakpoint&&e.breakpoint in he&&(o.mql=i("(max-width: ".concat(he[e.breakpoint],")"))),a="collapsed"in e?e.collapsed:e.defaultCollapsed,o.state={collapsed:a,below:!1},o}return E()(n,[{key:"componentDidMount",value:function(){var e;this.mql&&(this.mql.addListener(this.responsiveHandler),this.responsiveHandler(this.mql)),null===(e=this.props)||void 0===e||e.siderHook.addSider(this.uniqueId)}},{key:"componentWillUnmount",value:function(){var e,t;null===(e=null==this?void 0:this.mql)||void 0===e||e.removeListener(this.responsiveHandler),null===(t=this.props)||void 0===t||t.siderHook.removeSider(this.uniqueId)}},{key:"render",value:function(){var e=this.state.collapsed,t=this.props.collapsedWidth;return r.createElement(me.Provider,{value:{siderCollapsed:e,collapsedWidth:t}},r.createElement(Q,null,this.renderSider))}}],[{key:"getDerivedStateFromProps",value:function(e){return"collapsed"in e?{collapsed:e.collapsed}:null}}]),n}(r.Component);ge.defaultProps={collapsible:!1,defaultCollapsed:!1,reverseArrow:!1,width:200,collapsedWidth:80,style:{},theme:"dark"};var ye=function(e){C()(n,e);var t=P()(n);function n(){return k()(this,n),t.apply(this,arguments)}return E()(n,[{key:"render",value:function(){var e=this;return r.createElement(K.Consumer,null,(function(t){return r.createElement(ge,w()({},t,e.props))}))}}]),n}(r.Component);re.Sider=ye;var be=re,we=(n("cIOH"),n("0XgM"),n("dI71"));function xe(e){return"/"===e.charAt(0)}function ke(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var Se=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],i=e&&xe(e),a=t&&xe(t),l=i||a;if(e&&xe(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var u=o[o.length-1];n="."===u||".."===u||""===u}else n=!1;for(var c=0,s=o.length;s>=0;s--){var f=o[s];"."===f?ke(o,s):".."===f?(ke(o,s),c++):c&&(ke(o,s),c--)}if(!l)for(;c--;c)o.unshift("..");!l||""===o[0]||o[0]&&xe(o[0])||o.unshift("");var d=o.join("/");return n&&"/"!==d.substr(-1)&&(d+="/"),d};var Ee="Invariant failed";var Te=function(e,t){if(!e)throw new Error(Ee)};function Ce(e){return"/"===e.charAt(0)?e:"/"+e}function _e(e){return"/"===e.charAt(0)?e.substr(1):e}function Pe(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function Oe(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function Me(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function Ne(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=d({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=Se(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function Ae(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var De=!("undefined"==typeof window||!window.document||!window.document.createElement);function Re(e,t){t(window.confirm(e))}var Ie="popstate",je="hashchange";function Le(){try{return window.history.state||{}}catch(e){return{}}}function ze(e){void 0===e&&(e={}),De||Te(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,a=i.forceRefresh,l=void 0!==a&&a,u=i.getUserConfirmation,c=void 0===u?Re:u,s=i.keyLength,f=void 0===s?6:s,p=e.basename?Oe(Ce(e.basename)):"";function h(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return p&&(i=Pe(i,p)),Ne(i,r,n)}function m(){return Math.random().toString(36).substr(2,f)}var v=Ae();function g(e){d(O,e),O.length=n.length,v.notifyListeners(O.location,O.action)}function y(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||x(h(e.state))}function b(){x(h(Le()))}var w=!1;function x(e){if(w)w=!1,g();else{v.confirmTransitionTo(e,"POP",c,(function(t){t?g({action:"POP",location:e}):function(e){var t=O.location,n=S.indexOf(t.key);-1===n&&(n=0);var r=S.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(w=!0,T(o))}(e)}))}}var k=h(Le()),S=[k.key];function E(e){return p+Me(e)}function T(e){n.go(e)}var C=0;function _(e){1===(C+=e)&&1===e?(window.addEventListener(Ie,y),o&&window.addEventListener(je,b)):0===C&&(window.removeEventListener(Ie,y),o&&window.removeEventListener(je,b))}var P=!1;var O={length:n.length,action:"POP",location:k,createHref:E,push:function(e,t){var o="PUSH",i=Ne(e,t,m(),O.location);v.confirmTransitionTo(i,o,c,(function(e){if(e){var t=E(i),a=i.key,u=i.state;if(r)if(n.pushState({key:a,state:u},null,t),l)window.location.href=t;else{var c=S.indexOf(O.location.key),s=S.slice(0,c+1);s.push(i.key),S=s,g({action:o,location:i})}else window.location.href=t}}))},replace:function(e,t){var o="REPLACE",i=Ne(e,t,m(),O.location);v.confirmTransitionTo(i,o,c,(function(e){if(e){var t=E(i),a=i.key,u=i.state;if(r)if(n.replaceState({key:a,state:u},null,t),l)window.location.replace(t);else{var c=S.indexOf(O.location.key);-1!==c&&(S[c]=i.key),g({action:o,location:i})}else window.location.replace(t)}}))},go:T,goBack:function(){T(-1)},goForward:function(){T(1)},block:function(e){void 0===e&&(e=!1);var t=v.setPrompt(e);return P||(_(1),P=!0),function(){return P&&(P=!1,_(-1)),t()}},listen:function(e){var t=v.appendListener(e);return _(1),function(){_(-1),t()}}};return O}var $e="hashchange",Fe={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+_e(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:_e,decodePath:Ce},slash:{encodePath:Ce,decodePath:Ce}};function He(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function Ue(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function We(e){window.location.replace(He(window.location.href)+"#"+e)}function Be(e){void 0===e&&(e={}),De||Te(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?Re:r,i=n.hashType,a=void 0===i?"slash":i,l=e.basename?Oe(Ce(e.basename)):"",u=Fe[a],c=u.encodePath,s=u.decodePath;function f(){var e=s(Ue());return l&&(e=Pe(e,l)),Ne(e)}var p=Ae();function h(e){d(C,e),C.length=t.length,p.notifyListeners(C.location,C.action)}var m=!1,v=null;function g(){var e,t,n=Ue(),r=c(n);if(n!==r)We(r);else{var i=f(),a=C.location;if(!m&&(t=i,(e=a).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(v===Me(i))return;v=null,function(e){if(m)m=!1,h();else{var t="POP";p.confirmTransitionTo(e,t,o,(function(n){n?h({action:t,location:e}):function(e){var t=C.location,n=x.lastIndexOf(Me(t));-1===n&&(n=0);var r=x.lastIndexOf(Me(e));-1===r&&(r=0);var o=n-r;o&&(m=!0,k(o))}(e)}))}}(i)}}var y=Ue(),b=c(y);y!==b&&We(b);var w=f(),x=[Me(w)];function k(e){t.go(e)}var S=0;function E(e){1===(S+=e)&&1===e?window.addEventListener($e,g):0===S&&window.removeEventListener($e,g)}var T=!1;var C={length:t.length,action:"POP",location:w,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=He(window.location.href)),n+"#"+c(l+Me(e))},push:function(e,t){var n="PUSH",r=Ne(e,void 0,void 0,C.location);p.confirmTransitionTo(r,n,o,(function(e){if(e){var t=Me(r),o=c(l+t);if(Ue()!==o){v=t,function(e){window.location.hash=e}(o);var i=x.lastIndexOf(Me(C.location)),a=x.slice(0,i+1);a.push(t),x=a,h({action:n,location:r})}else h()}}))},replace:function(e,t){var n="REPLACE",r=Ne(e,void 0,void 0,C.location);p.confirmTransitionTo(r,n,o,(function(e){if(e){var t=Me(r),o=c(l+t);Ue()!==o&&(v=t,We(o));var i=x.indexOf(Me(C.location));-1!==i&&(x[i]=t),h({action:n,location:r})}}))},go:k,goBack:function(){k(-1)},goForward:function(){k(1)},block:function(e){void 0===e&&(e=!1);var t=p.setPrompt(e);return T||(E(1),T=!0),function(){return T&&(T=!1,E(-1)),t()}},listen:function(e){var t=p.appendListener(e);return E(1),function(){E(-1),t()}}};return C}function Ve(e,t,n){return Math.min(Math.max(e,t),n)}function Ye(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,o=void 0===r?["/"]:r,i=t.initialIndex,a=void 0===i?0:i,l=t.keyLength,u=void 0===l?6:l,c=Ae();function s(e){d(g,e),g.length=g.entries.length,c.notifyListeners(g.location,g.action)}function f(){return Math.random().toString(36).substr(2,u)}var p=Ve(a,0,o.length-1),h=o.map((function(e){return Ne(e,void 0,"string"==typeof e?f():e.key||f())})),m=Me;function v(e){var t=Ve(g.index+e,0,g.entries.length-1),r=g.entries[t];c.confirmTransitionTo(r,"POP",n,(function(e){e?s({action:"POP",location:r,index:t}):s()}))}var g={length:h.length,action:"POP",location:h[p],index:p,entries:h,createHref:m,push:function(e,t){var r="PUSH",o=Ne(e,t,f(),g.location);c.confirmTransitionTo(o,r,n,(function(e){if(e){var t=g.index+1,n=g.entries.slice(0);n.length>t?n.splice(t,n.length-t,o):n.push(o),s({action:r,location:o,index:t,entries:n})}}))},replace:function(e,t){var r="REPLACE",o=Ne(e,t,f(),g.location);c.confirmTransitionTo(o,r,n,(function(e){e&&(g.entries[g.index]=o,s({action:r,location:o}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var t=g.index+e;return t>=0&&t<g.entries.length},block:function(e){return void 0===e&&(e=!1),c.setPrompt(e)},listen:function(e){return c.appendListener(e)}};return g}var Qe=n("tEiQ"),qe=n("vRGJ"),Ke=n.n(qe),Ge=function(e){var t=Object(Qe.a)();return t.displayName=e,t}("Router-History"),Xe=function(e){var t=Object(Qe.a)();return t.displayName=e,t}("Router"),Ze=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}Object(we.a)(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o.a.createElement(Xe.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},o.a.createElement(Ge.Provider,{children:this.props.children||null,value:this.props.history}))},t}(o.a.Component);o.a.Component;o.a.Component;var Je={},et=0;function tt(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=Je[n]||(Je[n]={});if(r[e])return r[e];var o=[],i={regexp:Ke()(e,o,t),keys:o};return et<1e4&&(r[e]=i,et++),i}(n,{end:i,strict:l,sensitive:c}),o=r.regexp,a=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return i&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:a.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}o.a.Component;function nt(e){return"/"===e.charAt(0)?e:"/"+e}function rt(e,t){if(!e)return t;var n=nt(e);return 0!==t.pathname.indexOf(n)?t:d({},t,{pathname:t.pathname.substr(n.length)})}function ot(e){return"string"==typeof e?e:Me(e)}function it(e){return function(){Te(!1)}}function at(){}o.a.Component;o.a.Component;o.a.useContext;var lt=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=ze(t.props),t}return Object(we.a)(t,e),t.prototype.render=function(){return o.a.createElement(Ze,{history:this.history,children:this.props.children})},t}(o.a.Component);o.a.Component;var ut=function(e,t){return"function"==typeof e?e(t):e},ct=function(e,t){return"string"==typeof e?Ne(e,null,null,t):e},st=function(e){return e},ft=o.a.forwardRef;void 0===ft&&(ft=st);var dt=ft((function(e,t){var n=e.innerRef,r=e.navigate,i=e.onClick,a=Object(p.a)(e,["innerRef","navigate","onClick"]),l=a.target,u=d({},a,{onClick:function(e){try{i&&i(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return u.ref=st!==ft&&t||n,o.a.createElement("a",u)}));var pt=ft((function(e,t){var n=e.component,r=void 0===n?dt:n,i=e.replace,a=e.to,l=e.innerRef,u=Object(p.a)(e,["component","replace","to","innerRef"]);return o.a.createElement(Xe.Consumer,null,(function(e){e||Te(!1);var n=e.history,c=ct(ut(a,e.location),e.location),s=c?n.createHref(c):"",f=d({},u,{href:s,navigate:function(){var t=ut(a,e.location);(i?n.replace:n.push)(t)}});return st!==ft?f.ref=t||l:f.innerRef=l,o.a.createElement(r,f)}))})),ht=function(e){return e},mt=o.a.forwardRef;void 0===mt&&(mt=ht);mt((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,i=e.activeClassName,a=void 0===i?"active":i,l=e.activeStyle,u=e.className,c=e.exact,s=e.isActive,f=e.location,h=e.sensitive,m=e.strict,v=e.style,g=e.to,y=e.innerRef,b=Object(p.a)(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return o.a.createElement(Xe.Consumer,null,(function(e){e||Te(!1);var n=f||e.location,i=ct(ut(g,n),n),p=i.pathname,w=p&&p.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),x=w?tt(n.pathname,{path:w,exact:c,sensitive:h,strict:m}):null,k=!!(s?s(x,n):x),S=k?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(u,a):u,E=k?d({},v,{},l):v,T=d({"aria-current":k&&r||null,className:S,style:E,to:i},b);return ht!==mt?T.ref=t||y:T.innerRef=y,o.a.createElement(pt,T)}))}));var vt=function(){return o.a.createElement(lt,null,o.a.createElement(be,{style:{height:"100vh"}},"123"))};n("AYN6")("./configureStore.prod").then((function(e){var t=e.default;Object(i.render)(r.createElement(f,{store:t()},r.createElement(vt,null)),document.getElementById("app"))}))},Ijbi:function(e,t,n){var r=n("WkPL");e.exports=function(e){if(Array.isArray(e))return r(e)}},J4zp:function(e,t,n){var r=n("wTVA"),o=n("m0LI"),i=n("ZhPi"),a=n("wkBT");e.exports=function(e,t){return r(e)||o(e,t)||i(e,t)||a()}},KQxl:function(e,t,n){"use strict";var r=n("284h"),o=n("TqRt");Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=o(n("J4zp")),a=o(n("lSNA")),l=o(n("QILm")),u=r(n("q1tI")),c=o(n("TSYQ")),s=o(n("/qSt")),f=n("03hy"),d=n("vmBS");(0,f.setTwoToneColor)("#1890ff");var p=u.forwardRef((function(e,t){var n=e.className,r=e.icon,o=e.spin,f=e.rotate,p=e.tabIndex,h=e.onClick,m=e.twoToneColor,v=(0,l.default)(e,["className","icon","spin","rotate","tabIndex","onClick","twoToneColor"]),g=(0,c.default)("anticon",(0,a.default)({},"anticon-".concat(r.name),Boolean(r.name)),n),y=(0,c.default)({"anticon-spin":!!o||"loading"===r.name}),b=p;void 0===b&&h&&(b=-1);var w=f?{msTransform:"rotate(".concat(f,"deg)"),transform:"rotate(".concat(f,"deg)")}:void 0,x=(0,d.normalizeTwoToneColors)(m),k=(0,i.default)(x,2),S=k[0],E=k[1];return u.createElement("span",Object.assign({role:"img","aria-label":r.name},v,{ref:t,tabIndex:b,onClick:h,className:g}),u.createElement(s.default,{className:y,icon:r,primaryColor:S,secondaryColor:E,style:w}))}));p.displayName="AntdIcon",p.getTwoToneColor=f.getTwoToneColor,p.setTwoToneColor=f.setTwoToneColor;var h=p;t.default=h},KgQy:function(e,t,n){e.exports=function(){"use strict";var e="week",t="year";return function(n,r,o){var i=r.prototype;i.week=function(n){if(void 0===n&&(n=null),null!==n)return this.add(7*(n-this.week()),"day");var r=this.$locale().yearStart||1;if(11===this.month()&&this.date()>25){var i=o(this).startOf(t).add(1,t).date(r),a=o(this).endOf(e);if(i.isBefore(a))return 1}var l=o(this).startOf(t).date(r).startOf(e).subtract(1,"millisecond"),u=this.diff(l,e,!0);return u<0?o(this).startOf("week").week():Math.ceil(u)},i.weeks=function(e){return void 0===e&&(e=null),this.week(e)}}}()},LQ03:function(e,t,n){var r=n("Nsbk"),o=n("b48C"),i=n("a1gu");e.exports=function(e){var t=o();return function(){var n,o=r(e);if(t){var a=r(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return i(this,n)}}},LboF:function(e,t,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function l(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function u(e,t){for(var n={},r=[],o=0;o<e.length;o++){var i=e[o],u=t.base?i[0]+t.base:i[0],c=n[u]||0,s="".concat(u," ").concat(c);n[u]=c+1;var f=l(s),d={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(a[f].references++,a[f].updater(d)):a.push({identifier:s,updater:v(d,t),references:1}),r.push(s)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var s,f=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function d(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function p(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var h=null,m=0;function v(e,t){var n,r,o;if(t.singleton){var i=m++;n=h||(h=c(t)),r=d.bind(null,n,i,!1),o=d.bind(null,n,i,!0)}else n=c(t),r=p.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var n=u(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=l(n[r]);a[o].references--}for(var i=u(e,t),c=0;c<n.length;c++){var s=l(n[c]);0===a[s].references&&(a[s].updater(),a.splice(s,1))}n=i}}}},MgzW:function(e,t,n){"use strict";var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=a(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){l=r(n);for(var f=0;f<l.length;f++)i.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},Nsbk:function(e,t){function n(t){return e.exports=n=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},n(t)}e.exports=n},PJYZ:function(e,t){e.exports=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}},PSzr:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={icon:{tag:"svg",attrs:{viewBox:"0 0 1024 1024",focusable:"false"},children:[{tag:"path",attrs:{d:"M912 192H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM104 228a56 56 0 10112 0 56 56 0 10-112 0zm0 284a56 56 0 10112 0 56 56 0 10-112 0zm0 284a56 56 0 10112 0 56 56 0 10-112 0z"}}]},name:"bars",theme:"outlined"}},QCnb:function(e,t,n){"use strict";e.exports=n("+wdc")},QILm:function(e,t,n){var r=n("8OQS");e.exports=function(e,t){if(null==e)return{};var n,o,i=r(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}},RIqP:function(e,t,n){var r=n("Ijbi"),o=n("EbDI"),i=n("ZhPi"),a=n("Bnag");e.exports=function(e){return r(e)||o(e)||i(e)||a()}},Rn6C:function(e,t){const n={en_GB:"en-gb",en_US:"en",zh_CN:"zh-cn",zh_TW:"zh-tw"};e.exports=function(e,t,r){const o=t.prototype.locale;t.prototype.locale=function(e){var t;return"string"==typeof e&&(e=n[t=e]||t.split("_")[0]),o.call(this,e)}}},S96a:function(e,t,n){e.exports=function(){"use strict";return function(e,t,n){n.isMoment=function(e){return n.isDayjs(e)}}}()},SLVX:function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",(function(){return r}))},SksO:function(e,t){function n(t,r){return e.exports=n=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},n(t,r)}e.exports=n},T1rO:function(e,t,n){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=(r=n("zdCA"))&&r.__esModule?r:{default:r};t.default=o,e.exports=o},TOwV:function(e,t,n){"use strict";e.exports=n("qT12")},TSYQ:function(e,t,n){var r;!function(){"use strict";var n={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var i=typeof r;if("string"===i||"number"===i)e.push(r);else if(Array.isArray(r)&&r.length){var a=o.apply(null,r);a&&e.push(a)}else if("object"===i)for(var l in r)n.call(r,l)&&r[l]&&e.push(l)}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(r=function(){return o}.apply(t,[]))||(e.exports=r)}()},TqRt:function(e,t){e.exports=function(e){return e&&e.__esModule?e:{default:e}}},"Upf/":function(e,t,n){},W8MJ:function(e,t){function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}e.exports=function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}},WbBG:function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},Wgwc:function(e,t,n){e.exports=function(){"use strict";var e="millisecond",t="second",n="minute",r="hour",o="day",i="week",a="month",l="quarter",u="year",c="date",s=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?.?(\d+)?$/,f=/\[([^\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,d=function(e,t,n){var r=String(e);return!r||r.length>=t?e:""+Array(t+1-r.length).join(n)+e},p={s:d,z:function(e){var t=-e.utcOffset(),n=Math.abs(t),r=Math.floor(n/60),o=n%60;return(t<=0?"+":"-")+d(r,2,"0")+":"+d(o,2,"0")},m:function e(t,n){if(t.date()<n.date())return-e(n,t);var r=12*(n.year()-t.year())+(n.month()-t.month()),o=t.clone().add(r,a),i=n-o<0,l=t.clone().add(r+(i?-1:1),a);return+(-(r+(n-o)/(i?o-l:l-o))||0)},a:function(e){return e<0?Math.ceil(e)||0:Math.floor(e)},p:function(s){return{M:a,y:u,w:i,d:o,D:c,h:r,m:n,s:t,ms:e,Q:l}[s]||String(s||"").toLowerCase().replace(/s$/,"")},u:function(e){return void 0===e}},h={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},m="en",v={};v[m]=h;var g=function(e){return e instanceof x},y=function(e,t,n){var r;if(!e)return m;if("string"==typeof e)v[e]&&(r=e),t&&(v[e]=t,r=e);else{var o=e.name;v[o]=e,r=o}return!n&&r&&(m=r),r||!n&&m},b=function(e,t){if(g(e))return e.clone();var n="object"==typeof t?t:{};return n.date=e,n.args=arguments,new x(n)},w=p;w.l=y,w.i=g,w.w=function(e,t){return b(e,{locale:t.$L,utc:t.$u,$offset:t.$offset})};var x=function(){function d(e){this.$L=this.$L||y(e.locale,null,!0),this.parse(e)}var p=d.prototype;return p.parse=function(e){this.$d=function(e){var t=e.date,n=e.utc;if(null===t)return new Date(NaN);if(w.u(t))return new Date;if(t instanceof Date)return new Date(t);if("string"==typeof t&&!/Z$/i.test(t)){var r=t.match(s);if(r){var o=r[2]-1||0,i=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],o,r[3]||1,r[4]||0,r[5]||0,r[6]||0,i)):new Date(r[1],o,r[3]||1,r[4]||0,r[5]||0,r[6]||0,i)}}return new Date(t)}(e),this.init()},p.init=function(){var e=this.$d;this.$y=e.getFullYear(),this.$M=e.getMonth(),this.$D=e.getDate(),this.$W=e.getDay(),this.$H=e.getHours(),this.$m=e.getMinutes(),this.$s=e.getSeconds(),this.$ms=e.getMilliseconds()},p.$utils=function(){return w},p.isValid=function(){return!("Invalid Date"===this.$d.toString())},p.isSame=function(e,t){var n=b(e);return this.startOf(t)<=n&&n<=this.endOf(t)},p.isAfter=function(e,t){return b(e)<this.startOf(t)},p.isBefore=function(e,t){return this.endOf(t)<b(e)},p.$g=function(e,t,n){return w.u(e)?this[t]:this.set(n,e)},p.unix=function(){return Math.floor(this.valueOf()/1e3)},p.valueOf=function(){return this.$d.getTime()},p.startOf=function(e,l){var s=this,f=!!w.u(l)||l,d=w.p(e),p=function(e,t){var n=w.w(s.$u?Date.UTC(s.$y,t,e):new Date(s.$y,t,e),s);return f?n:n.endOf(o)},h=function(e,t){return w.w(s.toDate()[e].apply(s.toDate("s"),(f?[0,0,0,0]:[23,59,59,999]).slice(t)),s)},m=this.$W,v=this.$M,g=this.$D,y="set"+(this.$u?"UTC":"");switch(d){case u:return f?p(1,0):p(31,11);case a:return f?p(1,v):p(0,v+1);case i:var b=this.$locale().weekStart||0,x=(m<b?m+7:m)-b;return p(f?g-x:g+(6-x),v);case o:case c:return h(y+"Hours",0);case r:return h(y+"Minutes",1);case n:return h(y+"Seconds",2);case t:return h(y+"Milliseconds",3);default:return this.clone()}},p.endOf=function(e){return this.startOf(e,!1)},p.$set=function(i,l){var s,f=w.p(i),d="set"+(this.$u?"UTC":""),p=(s={},s[o]=d+"Date",s[c]=d+"Date",s[a]=d+"Month",s[u]=d+"FullYear",s[r]=d+"Hours",s[n]=d+"Minutes",s[t]=d+"Seconds",s[e]=d+"Milliseconds",s)[f],h=f===o?this.$D+(l-this.$W):l;if(f===a||f===u){var m=this.clone().set(c,1);m.$d[p](h),m.init(),this.$d=m.set(c,Math.min(this.$D,m.daysInMonth())).$d}else p&&this.$d[p](h);return this.init(),this},p.set=function(e,t){return this.clone().$set(e,t)},p.get=function(e){return this[w.p(e)]()},p.add=function(e,l){var c,s=this;e=Number(e);var f=w.p(l),d=function(t){var n=b(s);return w.w(n.date(n.date()+Math.round(t*e)),s)};if(f===a)return this.set(a,this.$M+e);if(f===u)return this.set(u,this.$y+e);if(f===o)return d(1);if(f===i)return d(7);var p=(c={},c[n]=6e4,c[r]=36e5,c[t]=1e3,c)[f]||1,h=this.$d.getTime()+e*p;return w.w(h,this)},p.subtract=function(e,t){return this.add(-1*e,t)},p.format=function(e){var t=this;if(!this.isValid())return"Invalid Date";var n=e||"YYYY-MM-DDTHH:mm:ssZ",r=w.z(this),o=this.$locale(),i=this.$H,a=this.$m,l=this.$M,u=o.weekdays,c=o.months,s=function(e,r,o,i){return e&&(e[r]||e(t,n))||o[r].substr(0,i)},d=function(e){return w.s(i%12||12,e,"0")},p=o.meridiem||function(e,t,n){var r=e<12?"AM":"PM";return n?r.toLowerCase():r},h={YY:String(this.$y).slice(-2),YYYY:this.$y,M:l+1,MM:w.s(l+1,2,"0"),MMM:s(o.monthsShort,l,c,3),MMMM:s(c,l),D:this.$D,DD:w.s(this.$D,2,"0"),d:String(this.$W),dd:s(o.weekdaysMin,this.$W,u,2),ddd:s(o.weekdaysShort,this.$W,u,3),dddd:u[this.$W],H:String(i),HH:w.s(i,2,"0"),h:d(1),hh:d(2),a:p(i,a,!0),A:p(i,a,!1),m:String(a),mm:w.s(a,2,"0"),s:String(this.$s),ss:w.s(this.$s,2,"0"),SSS:w.s(this.$ms,3,"0"),Z:r};return n.replace(f,(function(e,t){return t||h[e]||r.replace(":","")}))},p.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},p.diff=function(e,c,s){var f,d=w.p(c),p=b(e),h=6e4*(p.utcOffset()-this.utcOffset()),m=this-p,v=w.m(this,p);return v=(f={},f[u]=v/12,f[a]=v,f[l]=v/3,f[i]=(m-h)/6048e5,f[o]=(m-h)/864e5,f[r]=m/36e5,f[n]=m/6e4,f[t]=m/1e3,f)[d]||m,s?v:w.a(v)},p.daysInMonth=function(){return this.endOf(a).$D},p.$locale=function(){return v[this.$L]},p.locale=function(e,t){if(!e)return this.$L;var n=this.clone(),r=y(e,t,!0);return r&&(n.$L=r),n},p.clone=function(){return w.w(this.$d,this)},p.toDate=function(){return new Date(this.valueOf())},p.toJSON=function(){return this.isValid()?this.toISOString():null},p.toISOString=function(){return this.$d.toISOString()},p.toString=function(){return this.$d.toUTCString()},d}(),k=x.prototype;return b.prototype=k,[["$ms",e],["$s",t],["$m",n],["$H",r],["$W",o],["$M",a],["$y",u],["$D",c]].forEach((function(e){k[e[1]]=function(t){return this.$g(t,e[0],e[1])}})),b.extend=function(e,t){return e(t,x,b),b},b.locale=y,b.isDayjs=g,b.unix=function(e){return b(1e3*e)},b.en=v[m],b.Ls=v,b}()},WkPL:function(e,t){e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}},XPvl:function(e,t,n){},Xg9T:function(e,t,n){e.exports=function(){"use strict";return function(e,t,n){var r=function(e){return e&&(e.indexOf?e:e.s)},o=function(e,t,n,o,i){var a=e.name?e:e.$locale(),l=r(a[t]),u=r(a[n]),c=l||u.map((function(e){return e.substr(0,o)}));if(!i)return c;var s=a.weekStart;return c.map((function(e,t){return c[(t+(s||0))%7]}))},i=function(){return n.Ls[n.locale()]};t.prototype.localeData=function(){return function(){var e=this;return{months:function(t){return t?t.format("MMMM"):o(e,"months")},monthsShort:function(t){return t?t.format("MMM"):o(e,"monthsShort","months",3)},firstDayOfWeek:function(){return e.$locale().weekStart||0},weekdays:function(t){return t?t.format("dddd"):o(e,"weekdays")},weekdaysMin:function(t){return t?t.format("dd"):o(e,"weekdaysMin","weekdays",2)},weekdaysShort:function(t){return t?t.format("ddd"):o(e,"weekdaysShort","weekdays",3)},longDateFormat:function(t){return e.$locale().formats[t]}}}.bind(this)()},n.localeData=function(){var e=i();return{firstDayOfWeek:function(){return e.weekStart||0},weekdays:function(){return n.weekdays()},weekdaysShort:function(){return n.weekdaysShort()},weekdaysMin:function(){return n.weekdaysMin()},months:function(){return n.months()},monthsShort:function(){return n.monthsShort()}}},n.months=function(){return o(i(),"months")},n.monthsShort=function(){return o(i(),"monthsShort","months",3)},n.weekdays=function(e){return o(i(),"weekdays",null,null,e)},n.weekdaysShort=function(e){return o(i(),"weekdaysShort","weekdays",3,e)},n.weekdaysMin=function(e){return o(i(),"weekdaysMin","weekdays",2,e)}}}()},ZUlO:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n("FMfr"));t.generate=o.default;var i={red:"#F5222D",volcano:"#FA541C",orange:"#FA8C16",gold:"#FAAD14",yellow:"#FADB14",lime:"#A0D911",green:"#52C41A",cyan:"#13C2C2",blue:"#1890FF",geekblue:"#2F54EB",purple:"#722ED1",magenta:"#EB2F96",grey:"#666666"};t.presetPrimaryColors=i;var a={};t.presetPalettes=a,Object.keys(i).forEach((function(e){a[e]=o.default(i[e]),a[e].primary=a[e][5]}));var l=a.red;t.red=l;var u=a.volcano;t.volcano=u;var c=a.gold;t.gold=c;var s=a.orange;t.orange=s;var f=a.yellow;t.yellow=f;var d=a.lime;t.lime=d;var p=a.green;t.green=p;var h=a.cyan;t.cyan=h;var m=a.blue;t.blue=m;var v=a.geekblue;t.geekblue=v;var g=a.purple;t.purple=g;var y=a.magenta;t.magenta=y;var b=a.grey;t.grey=b},ZhPi:function(e,t,n){var r=n("WkPL");e.exports=function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}},Zss7:function(e,t,n){var r;!function(o){var i=/^\s+/,a=/\s+$/,l=0,u=o.round,c=o.min,s=o.max,f=o.random;function d(e,t){if(t=t||{},(e=e||"")instanceof d)return e;if(!(this instanceof d))return new d(e,t);var n=function(e){var t={r:0,g:0,b:0},n=1,r=null,l=null,u=null,f=!1,d=!1;"string"==typeof e&&(e=function(e){e=e.replace(i,"").replace(a,"").toLowerCase();var t,n=!1;if(M[e])e=M[e],n=!0;else if("transparent"==e)return{r:0,g:0,b:0,a:0,format:"name"};if(t=W.rgb.exec(e))return{r:t[1],g:t[2],b:t[3]};if(t=W.rgba.exec(e))return{r:t[1],g:t[2],b:t[3],a:t[4]};if(t=W.hsl.exec(e))return{h:t[1],s:t[2],l:t[3]};if(t=W.hsla.exec(e))return{h:t[1],s:t[2],l:t[3],a:t[4]};if(t=W.hsv.exec(e))return{h:t[1],s:t[2],v:t[3]};if(t=W.hsva.exec(e))return{h:t[1],s:t[2],v:t[3],a:t[4]};if(t=W.hex8.exec(e))return{r:I(t[1]),g:I(t[2]),b:I(t[3]),a:$(t[4]),format:n?"name":"hex8"};if(t=W.hex6.exec(e))return{r:I(t[1]),g:I(t[2]),b:I(t[3]),format:n?"name":"hex"};if(t=W.hex4.exec(e))return{r:I(t[1]+""+t[1]),g:I(t[2]+""+t[2]),b:I(t[3]+""+t[3]),a:$(t[4]+""+t[4]),format:n?"name":"hex8"};if(t=W.hex3.exec(e))return{r:I(t[1]+""+t[1]),g:I(t[2]+""+t[2]),b:I(t[3]+""+t[3]),format:n?"name":"hex"};return!1}(e));"object"==typeof e&&(B(e.r)&&B(e.g)&&B(e.b)?(p=e.r,h=e.g,m=e.b,t={r:255*D(p,255),g:255*D(h,255),b:255*D(m,255)},f=!0,d="%"===String(e.r).substr(-1)?"prgb":"rgb"):B(e.h)&&B(e.s)&&B(e.v)?(r=L(e.s),l=L(e.v),t=function(e,t,n){e=6*D(e,360),t=D(t,100),n=D(n,100);var r=o.floor(e),i=e-r,a=n*(1-t),l=n*(1-i*t),u=n*(1-(1-i)*t),c=r%6;return{r:255*[n,l,a,a,u,n][c],g:255*[u,n,n,l,a,a][c],b:255*[a,a,u,n,n,l][c]}}(e.h,r,l),f=!0,d="hsv"):B(e.h)&&B(e.s)&&B(e.l)&&(r=L(e.s),u=L(e.l),t=function(e,t,n){var r,o,i;function a(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e}if(e=D(e,360),t=D(t,100),n=D(n,100),0===t)r=o=i=n;else{var l=n<.5?n*(1+t):n+t-n*t,u=2*n-l;r=a(u,l,e+1/3),o=a(u,l,e),i=a(u,l,e-1/3)}return{r:255*r,g:255*o,b:255*i}}(e.h,r,u),f=!0,d="hsl"),e.hasOwnProperty("a")&&(n=e.a));var p,h,m;return n=A(n),{ok:f,format:e.format||d,r:c(255,s(t.r,0)),g:c(255,s(t.g,0)),b:c(255,s(t.b,0)),a:n}}(e);this._originalInput=e,this._r=n.r,this._g=n.g,this._b=n.b,this._a=n.a,this._roundA=u(100*this._a)/100,this._format=t.format||n.format,this._gradientType=t.gradientType,this._r<1&&(this._r=u(this._r)),this._g<1&&(this._g=u(this._g)),this._b<1&&(this._b=u(this._b)),this._ok=n.ok,this._tc_id=l++}function p(e,t,n){e=D(e,255),t=D(t,255),n=D(n,255);var r,o,i=s(e,t,n),a=c(e,t,n),l=(i+a)/2;if(i==a)r=o=0;else{var u=i-a;switch(o=l>.5?u/(2-i-a):u/(i+a),i){case e:r=(t-n)/u+(t<n?6:0);break;case t:r=(n-e)/u+2;break;case n:r=(e-t)/u+4}r/=6}return{h:r,s:o,l:l}}function h(e,t,n){e=D(e,255),t=D(t,255),n=D(n,255);var r,o,i=s(e,t,n),a=c(e,t,n),l=i,u=i-a;if(o=0===i?0:u/i,i==a)r=0;else{switch(i){case e:r=(t-n)/u+(t<n?6:0);break;case t:r=(n-e)/u+2;break;case n:r=(e-t)/u+4}r/=6}return{h:r,s:o,v:l}}function m(e,t,n,r){var o=[j(u(e).toString(16)),j(u(t).toString(16)),j(u(n).toString(16))];return r&&o[0].charAt(0)==o[0].charAt(1)&&o[1].charAt(0)==o[1].charAt(1)&&o[2].charAt(0)==o[2].charAt(1)?o[0].charAt(0)+o[1].charAt(0)+o[2].charAt(0):o.join("")}function v(e,t,n,r){return[j(z(r)),j(u(e).toString(16)),j(u(t).toString(16)),j(u(n).toString(16))].join("")}function g(e,t){t=0===t?0:t||10;var n=d(e).toHsl();return n.s-=t/100,n.s=R(n.s),d(n)}function y(e,t){t=0===t?0:t||10;var n=d(e).toHsl();return n.s+=t/100,n.s=R(n.s),d(n)}function b(e){return d(e).desaturate(100)}function w(e,t){t=0===t?0:t||10;var n=d(e).toHsl();return n.l+=t/100,n.l=R(n.l),d(n)}function x(e,t){t=0===t?0:t||10;var n=d(e).toRgb();return n.r=s(0,c(255,n.r-u(-t/100*255))),n.g=s(0,c(255,n.g-u(-t/100*255))),n.b=s(0,c(255,n.b-u(-t/100*255))),d(n)}function k(e,t){t=0===t?0:t||10;var n=d(e).toHsl();return n.l-=t/100,n.l=R(n.l),d(n)}function S(e,t){var n=d(e).toHsl(),r=(n.h+t)%360;return n.h=r<0?360+r:r,d(n)}function E(e){var t=d(e).toHsl();return t.h=(t.h+180)%360,d(t)}function T(e){var t=d(e).toHsl(),n=t.h;return[d(e),d({h:(n+120)%360,s:t.s,l:t.l}),d({h:(n+240)%360,s:t.s,l:t.l})]}function C(e){var t=d(e).toHsl(),n=t.h;return[d(e),d({h:(n+90)%360,s:t.s,l:t.l}),d({h:(n+180)%360,s:t.s,l:t.l}),d({h:(n+270)%360,s:t.s,l:t.l})]}function _(e){var t=d(e).toHsl(),n=t.h;return[d(e),d({h:(n+72)%360,s:t.s,l:t.l}),d({h:(n+216)%360,s:t.s,l:t.l})]}function P(e,t,n){t=t||6,n=n||30;var r=d(e).toHsl(),o=360/n,i=[d(e)];for(r.h=(r.h-(o*t>>1)+720)%360;--t;)r.h=(r.h+o)%360,i.push(d(r));return i}function O(e,t){t=t||6;for(var n=d(e).toHsv(),r=n.h,o=n.s,i=n.v,a=[],l=1/t;t--;)a.push(d({h:r,s:o,v:i})),i=(i+l)%1;return a}d.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var e=this.toRgb();return(299*e.r+587*e.g+114*e.b)/1e3},getLuminance:function(){var e,t,n,r=this.toRgb();return e=r.r/255,t=r.g/255,n=r.b/255,.2126*(e<=.03928?e/12.92:o.pow((e+.055)/1.055,2.4))+.7152*(t<=.03928?t/12.92:o.pow((t+.055)/1.055,2.4))+.0722*(n<=.03928?n/12.92:o.pow((n+.055)/1.055,2.4))},setAlpha:function(e){return this._a=A(e),this._roundA=u(100*this._a)/100,this},toHsv:function(){var e=h(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=h(this._r,this._g,this._b),t=u(360*e.h),n=u(100*e.s),r=u(100*e.v);return 1==this._a?"hsv("+t+", "+n+"%, "+r+"%)":"hsva("+t+", "+n+"%, "+r+"%, "+this._roundA+")"},toHsl:function(){var e=p(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=p(this._r,this._g,this._b),t=u(360*e.h),n=u(100*e.s),r=u(100*e.l);return 1==this._a?"hsl("+t+", "+n+"%, "+r+"%)":"hsla("+t+", "+n+"%, "+r+"%, "+this._roundA+")"},toHex:function(e){return m(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(e){return function(e,t,n,r,o){var i=[j(u(e).toString(16)),j(u(t).toString(16)),j(u(n).toString(16)),j(z(r))];if(o&&i[0].charAt(0)==i[0].charAt(1)&&i[1].charAt(0)==i[1].charAt(1)&&i[2].charAt(0)==i[2].charAt(1)&&i[3].charAt(0)==i[3].charAt(1))return i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0)+i[3].charAt(0);return i.join("")}(this._r,this._g,this._b,this._a,e)},toHex8String:function(e){return"#"+this.toHex8(e)},toRgb:function(){return{r:u(this._r),g:u(this._g),b:u(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+u(this._r)+", "+u(this._g)+", "+u(this._b)+")":"rgba("+u(this._r)+", "+u(this._g)+", "+u(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:u(100*D(this._r,255))+"%",g:u(100*D(this._g,255))+"%",b:u(100*D(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+u(100*D(this._r,255))+"%, "+u(100*D(this._g,255))+"%, "+u(100*D(this._b,255))+"%)":"rgba("+u(100*D(this._r,255))+"%, "+u(100*D(this._g,255))+"%, "+u(100*D(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":!(this._a<1)&&(N[m(this._r,this._g,this._b,!0)]||!1)},toFilter:function(e){var t="#"+v(this._r,this._g,this._b,this._a),n=t,r=this._gradientType?"GradientType = 1, ":"";if(e){var o=d(e);n="#"+v(o._r,o._g,o._b,o._a)}return"progid:DXImageTransform.Microsoft.gradient("+r+"startColorstr="+t+",endColorstr="+n+")"},toString:function(e){var t=!!e;e=e||this._format;var n=!1,r=this._a<1&&this._a>=0;return t||!r||"hex"!==e&&"hex6"!==e&&"hex3"!==e&&"hex4"!==e&&"hex8"!==e&&"name"!==e?("rgb"===e&&(n=this.toRgbString()),"prgb"===e&&(n=this.toPercentageRgbString()),"hex"!==e&&"hex6"!==e||(n=this.toHexString()),"hex3"===e&&(n=this.toHexString(!0)),"hex4"===e&&(n=this.toHex8String(!0)),"hex8"===e&&(n=this.toHex8String()),"name"===e&&(n=this.toName()),"hsl"===e&&(n=this.toHslString()),"hsv"===e&&(n=this.toHsvString()),n||this.toHexString()):"name"===e&&0===this._a?this.toName():this.toRgbString()},clone:function(){return d(this.toString())},_applyModification:function(e,t){var n=e.apply(null,[this].concat([].slice.call(t)));return this._r=n._r,this._g=n._g,this._b=n._b,this.setAlpha(n._a),this},lighten:function(){return this._applyModification(w,arguments)},brighten:function(){return this._applyModification(x,arguments)},darken:function(){return this._applyModification(k,arguments)},desaturate:function(){return this._applyModification(g,arguments)},saturate:function(){return this._applyModification(y,arguments)},greyscale:function(){return this._applyModification(b,arguments)},spin:function(){return this._applyModification(S,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(P,arguments)},complement:function(){return this._applyCombination(E,arguments)},monochromatic:function(){return this._applyCombination(O,arguments)},splitcomplement:function(){return this._applyCombination(_,arguments)},triad:function(){return this._applyCombination(T,arguments)},tetrad:function(){return this._applyCombination(C,arguments)}},d.fromRatio=function(e,t){if("object"==typeof e){var n={};for(var r in e)e.hasOwnProperty(r)&&(n[r]="a"===r?e[r]:L(e[r]));e=n}return d(e,t)},d.equals=function(e,t){return!(!e||!t)&&d(e).toRgbString()==d(t).toRgbString()},d.random=function(){return d.fromRatio({r:f(),g:f(),b:f()})},d.mix=function(e,t,n){n=0===n?0:n||50;var r=d(e).toRgb(),o=d(t).toRgb(),i=n/100;return d({r:(o.r-r.r)*i+r.r,g:(o.g-r.g)*i+r.g,b:(o.b-r.b)*i+r.b,a:(o.a-r.a)*i+r.a})},d.readability=function(e,t){var n=d(e),r=d(t);return(o.max(n.getLuminance(),r.getLuminance())+.05)/(o.min(n.getLuminance(),r.getLuminance())+.05)},d.isReadable=function(e,t,n){var r,o,i=d.readability(e,t);switch(o=!1,(r=function(e){var t,n;t=((e=e||{level:"AA",size:"small"}).level||"AA").toUpperCase(),n=(e.size||"small").toLowerCase(),"AA"!==t&&"AAA"!==t&&(t="AA");"small"!==n&&"large"!==n&&(n="small");return{level:t,size:n}}(n)).level+r.size){case"AAsmall":case"AAAlarge":o=i>=4.5;break;case"AAlarge":o=i>=3;break;case"AAAsmall":o=i>=7}return o},d.mostReadable=function(e,t,n){var r,o,i,a,l=null,u=0;o=(n=n||{}).includeFallbackColors,i=n.level,a=n.size;for(var c=0;c<t.length;c++)(r=d.readability(e,t[c]))>u&&(u=r,l=d(t[c]));return d.isReadable(e,l,{level:i,size:a})||!o?l:(n.includeFallbackColors=!1,d.mostReadable(e,["#fff","#000"],n))};var M=d.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},N=d.hexNames=function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[e[n]]=n);return t}(M);function A(e){return e=parseFloat(e),(isNaN(e)||e<0||e>1)&&(e=1),e}function D(e,t){(function(e){return"string"==typeof e&&-1!=e.indexOf(".")&&1===parseFloat(e)})(e)&&(e="100%");var n=function(e){return"string"==typeof e&&-1!=e.indexOf("%")}(e);return e=c(t,s(0,parseFloat(e))),n&&(e=parseInt(e*t,10)/100),o.abs(e-t)<1e-6?1:e%t/parseFloat(t)}function R(e){return c(1,s(0,e))}function I(e){return parseInt(e,16)}function j(e){return 1==e.length?"0"+e:""+e}function L(e){return e<=1&&(e=100*e+"%"),e}function z(e){return o.round(255*parseFloat(e)).toString(16)}function $(e){return I(e)/255}var F,H,U,W=(H="[\\s|\\(]+("+(F="(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)")+")[,|\\s]+("+F+")[,|\\s]+("+F+")\\s*\\)?",U="[\\s|\\(]+("+F+")[,|\\s]+("+F+")[,|\\s]+("+F+")[,|\\s]+("+F+")\\s*\\)?",{CSS_UNIT:new RegExp(F),rgb:new RegExp("rgb"+H),rgba:new RegExp("rgba"+U),hsl:new RegExp("hsl"+H),hsla:new RegExp("hsla"+U),hsv:new RegExp("hsv"+H),hsva:new RegExp("hsva"+U),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/});function B(e){return!!W.CSS_UNIT.exec(e)}e.exports?e.exports=d:void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}(Math)},a1gu:function(e,t,n){var r=n("cDf5"),o=n("PJYZ");e.exports=function(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?o(e):t}},b48C:function(e,t){e.exports=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}},bCCX:function(e,t,n){"use strict";(function(e,r){var o,i=n("SLVX");o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var a=Object(i.a)(o);t.a=a}).call(this,n("yLpj"),n("3UD+")(e))},cDf5:function(e,t){function n(t){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?e.exports=n=function(e){return typeof e}:e.exports=n=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(t)}e.exports=n},cIOH:function(e,t,n){var r=n("LboF"),o=n("Upf/");"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);e.exports=o.locals||{}},cOkC:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.warning=o,t.note=i,t.resetWarned=function(){r={}},t.call=a,t.warningOnce=l,t.noteOnce=function(e,t){a(i,e,t)},t.default=void 0;var r={};function o(e,t){0}function i(e,t){0}function a(e,t,n){t||r[n]||(e(!1,n),r[n]=!0)}function l(e,t){a(o,e,t)}var u=l;t.default=u},dI71:function(e,t,n){"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}n.d(t,"a",(function(){return r}))},fEPi:function(e,t,n){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=(r=n("9Odx"))&&r.__esModule?r:{default:r};t.default=o,e.exports=o},fiEP:function(e,t,n){e.exports=function(){"use strict";return function(e,t){t.prototype.weekday=function(e){var t=this.$locale().weekStart||0,n=this.$W,r=(n<t?n+7:n)-t;return this.$utils().u(e)?r:this.subtract(r,"day").add(e,"day")}}}()},i8i4:function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n("yl30")},jxkT:function(e,t,n){e.exports=function(){"use strict";return function(e,t,n){var r=t.prototype,o=r.format;n.en.ordinal=function(e){var t=["th","st","nd","rd"],n=e%100;return"["+e+(t[(n-20)%10]||t[n]||t[0])+"]"},r.format=function(e){var t=this,n=this.$locale(),r=this.$utils(),i=(e||"YYYY-MM-DDTHH:mm:ssZ").replace(/\[([^\]]+)]|Q|wo|ww|w|gggg|Do|X|x|k{1,2}|S/g,(function(e){switch(e){case"Q":return Math.ceil((t.$M+1)/3);case"Do":return n.ordinal(t.$D);case"gggg":return t.weekYear();case"wo":return n.ordinal(t.week(),"W");case"w":case"ww":return r.s(t.week(),"w"===e?1:2,"0");case"k":case"kk":return r.s(String(0===t.$H?24:t.$H),"k"===e?1:2,"0");case"X":return Math.floor(t.$d.getTime()/1e3);case"x":return t.$d.getTime();default:return e}}));return o.bind(this)(i)}}}()},lSNA:function(e,t){e.exports=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},lwsE:function(e,t){e.exports=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}},m0LI:function(e,t){e.exports=function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw i}}return n}}},pVnL:function(e,t){function n(){return e.exports=n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},n.apply(this,arguments)}e.exports=n},q1tI:function(e,t,n){"use strict";e.exports=n("viRO")},qT12:function(e,t,n){"use strict";var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.suspense_list"):60120,v=r?Symbol.for("react.memo"):60115,g=r?Symbol.for("react.lazy"):60116,y=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,w=r?Symbol.for("react.responder"):60118,x=r?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case a:case u:case l:case h:return e;default:switch(e=e&&e.$$typeof){case s:case p:case g:case v:case c:return e;default:return t}}case i:return t}}}function S(e){return k(e)===d}t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=a,t.Lazy=g,t.Memo=v,t.Portal=i,t.Profiler=u,t.StrictMode=l,t.Suspense=h,t.isAsyncMode=function(e){return S(e)||k(e)===f},t.isConcurrentMode=S,t.isContextConsumer=function(e){return k(e)===s},t.isContextProvider=function(e){return k(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return k(e)===p},t.isFragment=function(e){return k(e)===a},t.isLazy=function(e){return k(e)===g},t.isMemo=function(e){return k(e)===v},t.isPortal=function(e){return k(e)===i},t.isProfiler=function(e){return k(e)===u},t.isStrictMode=function(e){return k(e)===l},t.isSuspense=function(e){return k(e)===h},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===u||e===l||e===h||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===v||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p||e.$$typeof===b||e.$$typeof===w||e.$$typeof===x||e.$$typeof===y)},t.typeOf=k},s3Wo:function(e,t,n){e.exports=function(){"use strict";return function(e,t){t.prototype.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)}}}()},tEiQ:function(e,t,n){"use strict";(function(e){var r=n("q1tI"),o=n.n(r),i=n("dI71"),a=n("17x9"),l=n.n(a),u=1073741823,c="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==e?e:{};function s(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}var f=o.a.createContext||function(e,t){var n,o,a,f="__create-react-context-"+((c[a="__global_unique_id__"]=(c[a]||0)+1)+"__"),d=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=s(t.props.value),t}Object(i.a)(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[f]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof t?t(r,o):u,0!==(n|=0)&&this.emitter.set(e.value,n))}var i,a},r.render=function(){return this.props.children},n}(r.Component);d.childContextTypes=((n={})[f]=l.a.object.isRequired,n);var p=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}Object(i.a)(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?u:t},r.componentDidMount=function(){this.context[f]&&this.context[f].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?u:e},r.componentWillUnmount=function(){this.context[f]&&this.context[f].off(this.onUpdate)},r.getValue=function(){return this.context[f]?this.context[f].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return p.contextTypes=((o={})[f]=l.a.object,o),{Provider:d,Consumer:p}};t.a=f}).call(this,n("yLpj"))},"u+rH":function(e,t,n){var r=n("Wgwc"),o=n("s3Wo"),i=n("11iF"),a=n("jxkT"),l=n("+QaA"),u=n("fiEP"),c=n("Gshj"),s=n("KgQy"),f=n("S96a"),d=n("Xg9T"),p=n("I631");r.extend(o),r.extend(i),r.extend(a),r.extend(l),r.extend(u),r.extend(c),r.extend(s),r.extend(f),r.extend(d),r.extend(p);var h=n("Rn6C");r.extend(h)},vRGJ:function(e,t,n){var r=n("49sm");e.exports=p,e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(l+=e.slice(a,p),a=p+f.length,d)l+=d[1];else{var h=e[a],m=n[2],v=n[3],g=n[4],y=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var x=null!=m&&null!=h&&h!==m,k="+"===b||"*"===b,S="?"===b||"*"===b,E=n[2]||s,T=g||y;r.push({name:v||i++,prefix:m||"",delimiter:E,optional:S,repeat:k,partial:x,asterisk:!!w,pattern:T?c(T):w?".*":"[^"+u(E)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",f(t)));return function(t,o){for(var i="",l=t||{},u=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)a+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),a+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=a.slice(-h.length)===h;return o||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+h+"|$)",s(new RegExp("^"+a,f(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return d(i(e,n),t,n)}(e,t,n)}},viRO:function(e,t,n){"use strict";var r=n("MgzW"),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,m=o?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}function x(){}function k(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=w.prototype;var S=k.prototype=new x;S.constructor=k,r(S,w.prototype),S.isPureReactComponent=!0;var E={current:null},T=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)T.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:E.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var O=/\/+/g,M=[];function N(e,t,n,r){if(M.length){var o=M.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function A(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>M.length&&M.push(e)}function D(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case i:case a:l=!0}}if(l)return n(r,e,""===t?"."+I(e,0):t),1;if(l=0,t=""===t?".":t+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=t+I(o=e[u],u);l+=D(o,c,n,r)}else if(null===e||"object"!=typeof e?c=null:c="function"==typeof(c=v&&e[v]||e["@@iterator"])?c:null,"function"==typeof c)for(e=c.call(e),u=0;!(o=e.next()).done;)l+=D(o=o.value,c=t+I(o,u++),n,r);else if("object"===o)throw n=""+e,Error(g(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return l}function R(e,t,n){return null==e?0:D(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function j(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?z(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function z(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),R(e,L,t=N(t,i,r,o)),A(t)}var $={current:null};function F(){var e=$.current;if(null===e)throw Error(g(321));return e}var H={ReactCurrentDispatcher:$,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:E,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return z(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;R(e,j,t=N(null,null,t,n)),A(t)},count:function(e){return R(e,(function(){return null}),null)},toArray:function(e){var t=[];return z(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw Error(g(143));return e}},t.Component=w,t.Fragment=l,t.Profiler=c,t.PureComponent=k,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=H,t.cloneElement=function(e,t,n){if(null==e)throw Error(g(267,e));var o=r({},e.props),a=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=E.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)T.call(t,s)&&!C.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:a,ref:l,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return F().useCallback(e,t)},t.useContext=function(e,t){return F().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return F().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return F().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return F().useLayoutEffect(e,t)},t.useMemo=function(e,t){return F().useMemo(e,t)},t.useReducer=function(e,t,n){return F().useReducer(e,t,n)},t.useRef=function(e){return F().useRef(e)},t.useState=function(e){return F().useState(e)},t.version="16.13.1"},vmBS:function(e,t,n){"use strict";var r=n("284h"),o=n("TqRt");Object.defineProperty(t,"__esModule",{value:!0}),t.warning=function(e,t){(0,c.default)(e,"[@ant-design/icons] ".concat(t))},t.isIconDefinition=function(e){return"object"===(0,a.default)(e)&&"string"==typeof e.name&&"string"==typeof e.theme&&("object"===(0,a.default)(e.icon)||"function"==typeof e.icon)},t.normalizeAttrs=f,t.generate=function e(t,n,r){if(!r)return u.default.createElement(t.tag,(0,i.default)({key:n},f(t.attrs)),(t.children||[]).map((function(r,o){return e(r,"".concat(n,"-").concat(t.tag,"-").concat(o))})));return u.default.createElement(t.tag,(0,i.default)((0,i.default)({key:n},f(t.attrs)),r),(t.children||[]).map((function(r,o){return e(r,"".concat(n,"-").concat(t.tag,"-").concat(o))})))},t.getSecondaryColor=function(e){return(0,l.generate)(e)[0]},t.normalizeTwoToneColors=function(e){if(!e)return[];return Array.isArray(e)?e:[e]},t.useInsertStyles=t.iconStyles=t.svgBaseProps=void 0;var i=o(n("3tO9")),a=o(n("cDf5")),l=n("ZUlO"),u=r(n("q1tI")),c=o(n("cOkC")),s=n("Gu+u");function f(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return Object.keys(e).reduce((function(t,n){var r=e[n];switch(n){case"class":t.className=r,delete t.class;break;default:t[n]=r}return t}),{})}t.svgBaseProps={width:"1em",height:"1em",fill:"currentColor","aria-hidden":"true",focusable:"false"};var d="\n.anticon {\n  display: inline-block;\n  color: inherit;\n  font-style: normal;\n  line-height: 0;\n  text-align: center;\n  text-transform: none;\n  vertical-align: -0.125em;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.anticon > * {\n  line-height: 1;\n}\n\n.anticon svg {\n  display: inline-block;\n}\n\n.anticon::before {\n  display: none;\n}\n\n.anticon .anticon-icon {\n  display: block;\n}\n\n.anticon[tabindex] {\n  cursor: pointer;\n}\n\n.anticon-spin::before,\n.anticon-spin {\n  display: inline-block;\n  -webkit-animation: loadingCircle 1s infinite linear;\n  animation: loadingCircle 1s infinite linear;\n}\n\n@-webkit-keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n";t.iconStyles=d;var p=!1;t.useInsertStyles=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:d;(0,u.useEffect)((function(){p||((0,s.insertCss)(e,{prepend:!0}),p=!0)}),[])}},wTVA:function(e,t){e.exports=function(e){if(Array.isArray(e))return e}},wgjA:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"}}]},name:"left",theme:"outlined"}},wkBT:function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},yLpj:function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},yl30:function(e,t,n){"use strict";var r=n("q1tI"),o=n("MgzW"),i=n("QCnb");function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));function l(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,a,s,f){u=!1,c=null,l.apply(d,arguments)}var h=null,m=null,v=null;function g(e,t,n){var r=e.type||"unknown-event";e.currentTarget=v(n),function(e,t,n,r,o,i,l,d,h){if(p.apply(this,arguments),u){if(!u)throw Error(a(198));var m=c;u=!1,c=null,s||(s=!0,f=m)}}(r,t,void 0,e),e.currentTarget=null}var y=null,b={};function w(){if(y)for(var e in b){var t=b[e],n=y.indexOf(e);if(!(-1<n))throw Error(a(96,e));if(!k[n]){if(!t.extractEvents)throw Error(a(97,e));for(var r in k[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,u=r;if(S.hasOwnProperty(u))throw Error(a(99,u));S[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&x(c[o],l,u);o=!0}else i.registrationName?(x(i.registrationName,l,u),o=!0):o=!1;if(!o)throw Error(a(98,r,e))}}}}function x(e,t,n){if(E[e])throw Error(a(100,e));E[e]=t,T[e]=t.eventTypes[n].dependencies}var k=[],S={},E={},T={};function C(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(a(102,t));b[t]=r,n=!0}}n&&w()}var _=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),P=null,O=null,M=null;function N(e){if(e=m(e)){if("function"!=typeof P)throw Error(a(280));var t=e.stateNode;t&&(t=h(t),P(e.stateNode,e.type,t))}}function A(e){O?M?M.push(e):M=[e]:O=e}function D(){if(O){var e=O,t=M;if(M=O=null,N(e),t)for(e=0;e<t.length;e++)N(t[e])}}function R(e,t){return e(t)}function I(e,t,n,r,o){return e(t,n,r,o)}function j(){}var L=R,z=!1,$=!1;function F(){null===O&&null===M||(j(),D())}function H(e,t,n){if($)return e(t,n);$=!0;try{return L(e,t,n)}finally{$=!1,F()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,W=Object.prototype.hasOwnProperty,B={},V={};function Y(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var Q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){Q[e]=new Y(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];Q[t]=new Y(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){Q[e]=new Y(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){Q[e]=new Y(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){Q[e]=new Y(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){Q[e]=new Y(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){Q[e]=new Y(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){Q[e]=new Y(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){Q[e]=new Y(e,5,!1,e.toLowerCase(),null,!1)}));var q=/[\-:]([a-z])/g;function K(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(q,K);Q[t]=new Y(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(q,K);Q[t]=new Y(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(q,K);Q[t]=new Y(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){Q[e]=new Y(e,1,!1,e.toLowerCase(),null,!1)})),Q.xlinkHref=new Y("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){Q[e]=new Y(e,1,!1,e.toLowerCase(),null,!0)}));var G=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var o=Q.hasOwnProperty(t)?Q[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!W.call(V,e)||!W.call(B,e)&&(U.test(e)?V[e]=!0:(B[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}G.hasOwnProperty("ReactCurrentDispatcher")||(G.ReactCurrentDispatcher={current:null}),G.hasOwnProperty("ReactCurrentBatchConfig")||(G.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,oe=J?Symbol.for("react.profiler"):60114,ie=J?Symbol.for("react.provider"):60109,ae=J?Symbol.for("react.context"):60110,le=J?Symbol.for("react.concurrent_mode"):60111,ue=J?Symbol.for("react.forward_ref"):60112,ce=J?Symbol.for("react.suspense"):60113,se=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,de=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,he="function"==typeof Symbol&&Symbol.iterator;function me(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=he&&e[he]||e["@@iterator"])?e:null}function ve(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case ae:return"Context.Consumer";case ie:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ve(e.type);case pe:return ve(e.render);case de:if(e=1===e._status?e._result:null)return ve(e)}return null}function ge(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ve(e.type);n=null,r&&(n=ve(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Z,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ye(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function xe(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function ke(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Se(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ye(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Ee(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Te(e,t){Ee(e,t);var n=ye(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?_e(e,t.type,n):t.hasOwnProperty("defaultValue")&&_e(e,t.type,ye(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function _e(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Pe(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Oe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ye(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Me(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ne(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ye(n)}}function Ae(e,t){var n=ye(t.value),r=ye(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function De(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Re="http://www.w3.org/1999/xhtml",Ie="http://www.w3.org/2000/svg";function je(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?je(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ze,$e,Fe=($e=function(e,t){if(e.namespaceURI!==Ie||"innerHTML"in e)e.innerHTML=t;else{for((ze=ze||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ze.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return $e(e,t)}))}:$e);function He(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Ue(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var We={animationend:Ue("Animation","AnimationEnd"),animationiteration:Ue("Animation","AnimationIteration"),animationstart:Ue("Animation","AnimationStart"),transitionend:Ue("Transition","TransitionEnd")},Be={},Ve={};function Ye(e){if(Be[e])return Be[e];if(!We[e])return e;var t,n=We[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ve)return Be[e]=n[t];return e}_&&(Ve=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);var Qe=Ye("animationend"),qe=Ye("animationiteration"),Ke=Ye("animationstart"),Ge=Ye("transitionend"),Xe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ze=new("function"==typeof WeakMap?WeakMap:Map);function Je(e){var t=Ze.get(e);return void 0===t&&(t=new Map,Ze.set(e,t)),t}function et(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function tt(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function nt(e){if(et(e)!==e)throw Error(a(188))}function rt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=et(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return nt(o),e;if(i===r)return nt(o),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function ot(e,t){if(null==t)throw Error(a(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function it(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var at=null;function lt(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)g(e,t[r],n[r]);else t&&g(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function ut(e){if(null!==e&&(at=ot(at,e)),e=at,at=null,e){if(it(e,lt),at)throw Error(a(95));if(s)throw e=f,s=!1,f=null,e}}function ct(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function st(e){if(!_)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ft=[];function dt(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ft.length&&ft.push(e)}function pt(e,t,n,r){if(ft.length){var o=ft.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function ht(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Nn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=ct(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,a=e.eventSystemFlags;0===n&&(a|=64);for(var l=null,u=0;u<k.length;u++){var c=k[u];c&&(c=c.extractEvents(r,t,i,o,a))&&(l=ot(l,c))}ut(l)}}function mt(e,t,n){if(!n.has(e)){switch(e){case"scroll":Kt(t,"scroll",!0);break;case"focus":case"blur":Kt(t,"focus",!0),Kt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":st(e)&&Kt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Xe.indexOf(e)&&qt(e,t)}n.set(e,null)}}var vt,gt,yt,bt=!1,wt=[],xt=null,kt=null,St=null,Et=new Map,Tt=new Map,Ct=[],_t="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Pt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Ot(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Mt(e,t){switch(e){case"focus":case"blur":xt=null;break;case"dragenter":case"dragleave":kt=null;break;case"mouseover":case"mouseout":St=null;break;case"pointerover":case"pointerout":Et.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Tt.delete(t.pointerId)}}function Nt(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=Ot(t,n,r,o,i),null!==t&&(null!==(t=An(t))&&gt(t)),e):(e.eventSystemFlags|=r,e)}function At(e){var t=Nn(e.target);if(null!==t){var n=et(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=tt(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){yt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Dt(e){if(null!==e.blockedOn)return!1;var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=An(t);return null!==n&&gt(n),e.blockedOn=t,!1}return!0}function Rt(e,t,n){Dt(e)&&n.delete(t)}function It(){for(bt=!1;0<wt.length;){var e=wt[0];if(null!==e.blockedOn){null!==(e=An(e.blockedOn))&&vt(e);break}var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:wt.shift()}null!==xt&&Dt(xt)&&(xt=null),null!==kt&&Dt(kt)&&(kt=null),null!==St&&Dt(St)&&(St=null),Et.forEach(Rt),Tt.forEach(Rt)}function jt(e,t){e.blockedOn===t&&(e.blockedOn=null,bt||(bt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,It)))}function Lt(e){function t(t){return jt(t,e)}if(0<wt.length){jt(wt[0],e);for(var n=1;n<wt.length;n++){var r=wt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==xt&&jt(xt,e),null!==kt&&jt(kt,e),null!==St&&jt(St,e),Et.forEach(t),Tt.forEach(t),n=0;n<Ct.length;n++)(r=Ct[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Ct.length&&null===(n=Ct[0]).blockedOn;)At(n),null===n.blockedOn&&Ct.shift()}var zt={},$t=new Map,Ft=new Map,Ht=["abort","abort",Qe,"animationEnd",qe,"animationIteration",Ke,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ge,"transitionEnd","waiting","waiting"];function Ut(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Ft.set(r,t),$t.set(r,i),zt[o]=i}}Ut("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ut("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ut(Ht,2);for(var Wt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Bt=0;Bt<Wt.length;Bt++)Ft.set(Wt[Bt],0);var Vt=i.unstable_UserBlockingPriority,Yt=i.unstable_runWithPriority,Qt=!0;function qt(e,t){Kt(t,e,!1)}function Kt(e,t,n){var r=Ft.get(t);switch(void 0===r?2:r){case 0:r=Gt.bind(null,t,1,e);break;case 1:r=Xt.bind(null,t,1,e);break;default:r=Zt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Gt(e,t,n,r){z||j();var o=Zt,i=z;z=!0;try{I(o,e,t,n,r)}finally{(z=i)||F()}}function Xt(e,t,n,r){Yt(Vt,Zt.bind(null,e,t,n,r))}function Zt(e,t,n,r){if(Qt)if(0<wt.length&&-1<_t.indexOf(e))e=Ot(null,e,t,n,r),wt.push(e);else{var o=Jt(e,t,n,r);if(null===o)Mt(e,r);else if(-1<_t.indexOf(e))e=Ot(o,e,t,n,r),wt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return xt=Nt(xt,e,t,n,r,o),!0;case"dragenter":return kt=Nt(kt,e,t,n,r,o),!0;case"mouseover":return St=Nt(St,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return Et.set(i,Nt(Et.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,Tt.set(i,Nt(Tt.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Mt(e,r),e=pt(e,r,null,t);try{H(ht,e)}finally{dt(e)}}}}function Jt(e,t,n,r){if(null!==(n=Nn(n=ct(r)))){var o=et(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=tt(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=pt(e,r,n,t);try{H(ht,e)}finally{dt(e)}return null}var en={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},tn=["Webkit","ms","Moz","O"];function nn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||en.hasOwnProperty(e)&&en[e]?(""+t).trim():t+"px"}function rn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=nn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(en).forEach((function(e){tn.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),en[t]=en[e]}))}));var on=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function an(e,t){if(t){if(on[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62,""))}}function ln(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var un=Re;function cn(e,t){var n=Je(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=T[t];for(var r=0;r<t.length;r++)mt(t[r],e,n)}function sn(){}function fn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function dn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pn(e,t){var n,r=dn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=dn(r)}}function hn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?hn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function mn(){for(var e=window,t=fn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=fn((e=t.contentWindow).document)}return t}function vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var gn="$?",yn="$!",bn=null,wn=null;function xn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function kn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Sn="function"==typeof setTimeout?setTimeout:void 0,En="function"==typeof clearTimeout?clearTimeout:void 0;function Tn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Cn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||n===yn||n===gn){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var _n=Math.random().toString(36).slice(2),Pn="__reactInternalInstance$"+_n,On="__reactEventHandlers$"+_n,Mn="__reactContainere$"+_n;function Nn(e){var t=e[Pn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Mn]||n[Pn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Cn(e);null!==e;){if(n=e[Pn])return n;e=Cn(e)}return t}n=(e=n).parentNode}return null}function An(e){return!(e=e[Pn]||e[Mn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Dn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function Rn(e){return e[On]||null}function In(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function jn(e,t){var n=e.stateNode;if(!n)return null;var r=h(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}function Ln(e,t,n){(t=jn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=ot(n._dispatchListeners,t),n._dispatchInstances=ot(n._dispatchInstances,e))}function zn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=In(t);for(t=n.length;0<t--;)Ln(n[t],"captured",e);for(t=0;t<n.length;t++)Ln(n[t],"bubbled",e)}}function $n(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=jn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=ot(n._dispatchListeners,t),n._dispatchInstances=ot(n._dispatchInstances,e))}function Fn(e){e&&e.dispatchConfig.registrationName&&$n(e._targetInst,null,e)}function Hn(e){it(e,zn)}var Un=null,Wn=null,Bn=null;function Vn(){if(Bn)return Bn;var e,t,n=Wn,r=n.length,o="value"in Un?Un.value:Un.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return Bn=o.slice(e,1<t?1-t:void 0)}function Yn(){return!0}function Qn(){return!1}function qn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Yn:Qn,this.isPropagationStopped=Qn,this}function Kn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Gn(e){if(!(e instanceof this))throw Error(a(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Xn(e){e.eventPool=[],e.getPooled=Kn,e.release=Gn}o(qn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Yn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Yn)},persist:function(){this.isPersistent=Yn},isPersistent:Qn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Qn,this._dispatchInstances=this._dispatchListeners=null}}),qn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},qn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Xn(n),n},Xn(qn);var Zn=qn.extend({data:null}),Jn=qn.extend({data:null}),er=[9,13,27,32],tr=_&&"CompositionEvent"in window,nr=null;_&&"documentMode"in document&&(nr=document.documentMode);var rr=_&&"TextEvent"in window&&!nr,or=_&&(!tr||nr&&8<nr&&11>=nr),ir=String.fromCharCode(32),ar={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},lr=!1;function ur(e,t){switch(e){case"keyup":return-1!==er.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function cr(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var sr=!1;var fr={eventTypes:ar,extractEvents:function(e,t,n,r){var o;if(tr)e:{switch(e){case"compositionstart":var i=ar.compositionStart;break e;case"compositionend":i=ar.compositionEnd;break e;case"compositionupdate":i=ar.compositionUpdate;break e}i=void 0}else sr?ur(e,n)&&(i=ar.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=ar.compositionStart);return i?(or&&"ko"!==n.locale&&(sr||i!==ar.compositionStart?i===ar.compositionEnd&&sr&&(o=Vn()):(Wn="value"in(Un=r)?Un.value:Un.textContent,sr=!0)),i=Zn.getPooled(i,t,n,r),o?i.data=o:null!==(o=cr(n))&&(i.data=o),Hn(i),o=i):o=null,(e=rr?function(e,t){switch(e){case"compositionend":return cr(t);case"keypress":return 32!==t.which?null:(lr=!0,ir);case"textInput":return(e=t.data)===ir&&lr?null:e;default:return null}}(e,n):function(e,t){if(sr)return"compositionend"===e||!tr&&ur(e,t)?(e=Vn(),Bn=Wn=Un=null,sr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return or&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Jn.getPooled(ar.beforeInput,t,n,r)).data=e,Hn(t)):t=null,null===o?t:null===t?o:[o,t]}},dr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!dr[e.type]:"textarea"===t}var hr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function mr(e,t,n){return(e=qn.getPooled(hr.change,e,t,n)).type="change",A(n),Hn(e),e}var vr=null,gr=null;function yr(e){ut(e)}function br(e){if(xe(Dn(e)))return e}function wr(e,t){if("change"===e)return t}var xr=!1;function kr(){vr&&(vr.detachEvent("onpropertychange",Sr),gr=vr=null)}function Sr(e){if("value"===e.propertyName&&br(gr))if(e=mr(gr,e,ct(e)),z)ut(e);else{z=!0;try{R(yr,e)}finally{z=!1,F()}}}function Er(e,t,n){"focus"===e?(kr(),gr=n,(vr=t).attachEvent("onpropertychange",Sr)):"blur"===e&&kr()}function Tr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return br(gr)}function Cr(e,t){if("click"===e)return br(t)}function _r(e,t){if("input"===e||"change"===e)return br(t)}_&&(xr=st("input")&&(!document.documentMode||9<document.documentMode));var Pr={eventTypes:hr,_isInputEventSupported:xr,extractEvents:function(e,t,n,r){var o=t?Dn(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=wr;else if(pr(o))if(xr)a=_r;else{a=Tr;var l=Er}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Cr);if(a&&(a=a(e,t)))return mr(a,n,r);l&&l(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&_e(o,"number",o.value)}},Or=qn.extend({view:null,detail:null}),Mr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Nr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Mr[e])&&!!t[e]}function Ar(){return Nr}var Dr=0,Rr=0,Ir=!1,jr=!1,Lr=Or.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Ar,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Dr;return Dr=e.screenX,Ir?"mousemove"===e.type?e.screenX-t:0:(Ir=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Rr;return Rr=e.screenY,jr?"mousemove"===e.type?e.screenY-t:0:(jr=!0,0)}}),zr=Lr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$r={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Fr={eventTypes:$r,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!a&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,a)?(a=t,null!==(t=(t=n.relatedTarget||n.toElement)?Nn(t):null)&&(t!==et(t)||5!==t.tag&&6!==t.tag)&&(t=null)):a=null;if(a===t)return null;if("mouseout"===e||"mouseover"===e)var l=Lr,u=$r.mouseLeave,c=$r.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=zr,u=$r.pointerLeave,c=$r.pointerEnter,s="pointer");if(e=null==a?i:Dn(a),i=null==t?i:Dn(t),(u=l.getPooled(u,a,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=l.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=a)&&s)e:{for(c=s,a=0,e=l=r;e;e=In(e))a++;for(e=0,t=c;t;t=In(t))e++;for(;0<a-e;)l=In(l),a--;for(;0<e-a;)c=In(c),e--;for(;a--;){if(l===c||l===c.alternate)break e;l=In(l),c=In(c)}l=null}else l=null;for(c=l,l=[];r&&r!==c&&(null===(a=r.alternate)||a!==c);)l.push(r),r=In(r);for(r=[];s&&s!==c&&(null===(a=s.alternate)||a!==c);)r.push(s),s=In(s);for(s=0;s<l.length;s++)$n(l[s],"bubbled",u);for(s=r.length;0<s--;)$n(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}};var Hr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Ur=Object.prototype.hasOwnProperty;function Wr(e,t){if(Hr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Ur.call(t,n[r])||!Hr(e[n[r]],t[n[r]]))return!1;return!0}var Br=_&&"documentMode"in document&&11>=document.documentMode,Vr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Yr=null,Qr=null,qr=null,Kr=!1;function Gr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Kr||null==Yr||Yr!==fn(n)?null:("selectionStart"in(n=Yr)&&vn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},qr&&Wr(qr,n)?null:(qr=n,(e=qn.getPooled(Vr.select,Qr,e,t)).type="select",e.target=Yr,Hn(e),e))}var Xr={eventTypes:Vr,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Je(o),i=T.onSelect;for(var a=0;a<i.length;a++)if(!o.has(i[a])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?Dn(t):window,e){case"focus":(pr(o)||"true"===o.contentEditable)&&(Yr=o,Qr=t,qr=null);break;case"blur":qr=Qr=Yr=null;break;case"mousedown":Kr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Kr=!1,Gr(n,r);case"selectionchange":if(Br)break;case"keydown":case"keyup":return Gr(n,r)}return null}},Zr=qn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Jr=qn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),eo=Or.extend({relatedTarget:null});function to(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var no={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},ro={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},oo=Or.extend({key:function(e){if(e.key){var t=no[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=to(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?ro[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Ar,charCode:function(e){return"keypress"===e.type?to(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?to(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),io=Lr.extend({dataTransfer:null}),ao=Or.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Ar}),lo=qn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),uo=Lr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),co={eventTypes:zt,extractEvents:function(e,t,n,r){var o=$t.get(e);if(!o)return null;switch(e){case"keypress":if(0===to(n))return null;case"keydown":case"keyup":e=oo;break;case"blur":case"focus":e=eo;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Lr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=io;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=ao;break;case Qe:case qe:case Ke:e=Zr;break;case Ge:e=lo;break;case"scroll":e=Or;break;case"wheel":e=uo;break;case"copy":case"cut":case"paste":e=Jr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=zr;break;default:e=qn}return Hn(t=e.getPooled(o,t,n,r)),t}};if(y)throw Error(a(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),h=Rn,m=An,v=Dn,C({SimpleEventPlugin:co,EnterLeaveEventPlugin:Fr,ChangeEventPlugin:Pr,SelectEventPlugin:Xr,BeforeInputEventPlugin:fr});var so=[],fo=-1;function po(e){0>fo||(e.current=so[fo],so[fo]=null,fo--)}function ho(e,t){fo++,so[fo]=e.current,e.current=t}var mo={},vo={current:mo},go={current:!1},yo=mo;function bo(e,t){var n=e.type.contextTypes;if(!n)return mo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function wo(e){return null!=(e=e.childContextTypes)}function xo(){po(go),po(vo)}function ko(e,t,n){if(vo.current!==mo)throw Error(a(168));ho(vo,t),ho(go,n)}function So(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(a(108,ve(t)||"Unknown",i));return o({},n,{},r)}function Eo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||mo,yo=vo.current,ho(vo,e),ho(go,go.current),!0}function To(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=So(e,t,yo),r.__reactInternalMemoizedMergedChildContext=e,po(go),po(vo),ho(vo,e)):po(go),ho(go,n)}var Co=i.unstable_runWithPriority,_o=i.unstable_scheduleCallback,Po=i.unstable_cancelCallback,Oo=i.unstable_requestPaint,Mo=i.unstable_now,No=i.unstable_getCurrentPriorityLevel,Ao=i.unstable_ImmediatePriority,Do=i.unstable_UserBlockingPriority,Ro=i.unstable_NormalPriority,Io=i.unstable_LowPriority,jo=i.unstable_IdlePriority,Lo={},zo=i.unstable_shouldYield,$o=void 0!==Oo?Oo:function(){},Fo=null,Ho=null,Uo=!1,Wo=Mo(),Bo=1e4>Wo?Mo:function(){return Mo()-Wo};function Vo(){switch(No()){case Ao:return 99;case Do:return 98;case Ro:return 97;case Io:return 96;case jo:return 95;default:throw Error(a(332))}}function Yo(e){switch(e){case 99:return Ao;case 98:return Do;case 97:return Ro;case 96:return Io;case 95:return jo;default:throw Error(a(332))}}function Qo(e,t){return e=Yo(e),Co(e,t)}function qo(e,t,n){return e=Yo(e),_o(e,t,n)}function Ko(e){return null===Fo?(Fo=[e],Ho=_o(Ao,Xo)):Fo.push(e),Lo}function Go(){if(null!==Ho){var e=Ho;Ho=null,Po(e)}Xo()}function Xo(){if(!Uo&&null!==Fo){Uo=!0;var e=0;try{var t=Fo;Qo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Fo=null}catch(t){throw null!==Fo&&(Fo=Fo.slice(e+1)),_o(Ao,Go),t}finally{Uo=!1}}}function Zo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Jo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ei={current:null},ti=null,ni=null,ri=null;function oi(){ri=ni=ti=null}function ii(e){var t=ei.current;po(ei),e.type._context._currentValue=t}function ai(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function li(e,t){ti=e,ri=ni=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Ra=!0),e.firstContext=null)}function ui(e,t){if(ri!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ri=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ni){if(null===ti)throw Error(a(308));ni=t,ti.dependencies={expirationTime:0,firstContext:t,responders:null}}else ni=ni.next=t;return e._currentValue}var ci=!1;function si(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function fi(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function di(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function pi(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function hi(e,t){var n=e.alternate;null!==n&&fi(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function mi(e,t,n,r){var i=e.updateQueue;ci=!1;var a=i.baseQueue,l=i.shared.pending;if(null!==l){if(null!==a){var u=a.next;a.next=l.next,l.next=u}a=l,i.shared.pending=null,null!==(u=e.alternate)&&(null!==(u=u.updateQueue)&&(u.baseQueue=l))}if(null!==a){u=a.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var h=u;;){if((l=h.expirationTime)<r){var m={expirationTime:h.expirationTime,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null};null===p?(d=p=m,f=c):p=p.next=m,l>s&&(s=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null}),pu(l,h.suspenseConfig);e:{var v=e,g=h;switch(l=t,m=n,g.tag){case 1:if("function"==typeof(v=g.payload)){c=v.call(m,c,l);break e}c=v;break e;case 3:v.effectTag=-4097&v.effectTag|64;case 0:if(null==(l="function"==typeof(v=g.payload)?v.call(m,c,l):v))break e;c=o({},c,l);break e;case 2:ci=!0}}null!==h.callback&&(e.effectTag|=32,null===(l=i.effects)?i.effects=[h]:l.push(h))}if(null===(h=h.next)||h===u){if(null===(l=i.shared.pending))break;h=a.next=l.next,l.next=u,i.baseQueue=a=l,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,hu(s),e.expirationTime=s,e.memoizedState=c}}function vi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(a(191,r));r.call(o)}}}var gi=G.ReactCurrentBatchConfig,yi=(new r.Component).refs;function bi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var wi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&et(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=eu(),o=gi.suspense;(o=di(r=tu(r,e,o),o)).payload=t,null!=n&&(o.callback=n),pi(e,o),nu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=eu(),o=gi.suspense;(o=di(r=tu(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),pi(e,o),nu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=eu(),r=gi.suspense;(r=di(n=tu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),pi(e,r),nu(e,n)}};function xi(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!Wr(n,r)||!Wr(o,i))}function ki(e,t,n){var r=!1,o=mo,i=t.contextType;return"object"==typeof i&&null!==i?i=ui(i):(o=wo(t)?yo:vo.current,i=(r=null!=(r=t.contextTypes))?bo(e,o):mo),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=wi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Si(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&wi.enqueueReplaceState(t,t.state,null)}function Ei(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=yi,si(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=ui(i):(i=wo(t)?yo:vo.current,o.context=bo(e,i)),mi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(bi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&wi.enqueueReplaceState(o,o.state,null),mi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Ti=Array.isArray;function Ci(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===yi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function _i(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Pi(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Ru(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Lu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Ci(e,t,n),r.return=e,r):((r=Iu(n.type,n.key,n.props,null,e.mode,r)).ref=Ci(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=zu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=ju(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Lu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Iu(t.type,t.key,t.props,null,e.mode,n)).ref=Ci(e,null,t),n.return=e,n;case te:return(t=zu(t,e.mode,n)).return=e,t}if(Ti(t)||me(t))return(t=ju(t,e.mode,n,null)).return=e,t;_i(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?s(e,t,n,r):null}if(Ti(n)||me(n))return null!==o?null:f(e,t,n,r,null);_i(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Ti(r)||me(r))return f(t,e=e.get(n)||null,r,o,null);_i(t,r)}return null}function m(o,a,l,u){for(var c=null,s=null,f=a,m=a=0,v=null;null!==f&&m<l.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var g=p(o,f,l[m],u);if(null===g){null===f&&(f=v);break}e&&f&&null===g.alternate&&t(o,f),a=i(g,a,m),null===s?c=g:s.sibling=g,s=g,f=v}if(m===l.length)return n(o,f),c;if(null===f){for(;m<l.length;m++)null!==(f=d(o,l[m],u))&&(a=i(f,a,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<l.length;m++)null!==(v=h(f,o,m,l[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(o,e)})),c}function v(o,l,u,c){var s=me(u);if("function"!=typeof s)throw Error(a(150));if(null==(u=s.call(u)))throw Error(a(151));for(var f=s=null,m=l,v=l=0,g=null,y=u.next();null!==m&&!y.done;v++,y=u.next()){m.index>v?(g=m,m=null):g=m.sibling;var b=p(o,m,y.value,c);if(null===b){null===m&&(m=g);break}e&&m&&null===b.alternate&&t(o,m),l=i(b,l,v),null===f?s=b:f.sibling=b,f=b,m=g}if(y.done)return n(o,m),s;if(null===m){for(;!y.done;v++,y=u.next())null!==(y=d(o,y.value,c))&&(l=i(y,l,v),null===f?s=y:f.sibling=y,f=y);return s}for(m=r(o,m);!y.done;v++,y=u.next())null!==(y=h(m,o,v,y.value,c))&&(e&&null!==y.alternate&&m.delete(null===y.key?v:y.key),l=i(y,l,v),null===f?s=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}break;default:if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=Ci(e,c,i),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=ju(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Iu(i.type,i.key,i.props,null,e.mode,u)).ref=Ci(e,r,i),u.return=e,e=u)}return l(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=zu(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Lu(i,e.mode,u)).return=e,e=r),l(e);if(Ti(i))return m(e,r,i,u);if(me(i))return v(e,r,i,u);if(s&&_i(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(a(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Oi=Pi(!0),Mi=Pi(!1),Ni={},Ai={current:Ni},Di={current:Ni},Ri={current:Ni};function Ii(e){if(e===Ni)throw Error(a(174));return e}function ji(e,t){switch(ho(Ri,t),ho(Di,e),ho(Ai,Ni),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Le(null,"");break;default:t=Le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}po(Ai),ho(Ai,t)}function Li(){po(Ai),po(Di),po(Ri)}function zi(e){Ii(Ri.current);var t=Ii(Ai.current),n=Le(t,e.type);t!==n&&(ho(Di,e),ho(Ai,n))}function $i(e){Di.current===e&&(po(Ai),po(Di))}var Fi={current:0};function Hi(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===gn||n.data===yn))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ui(e,t){return{responder:e,props:t}}var Wi=G.ReactCurrentDispatcher,Bi=G.ReactCurrentBatchConfig,Vi=0,Yi=null,Qi=null,qi=null,Ki=!1;function Gi(){throw Error(a(321))}function Xi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Hr(e[n],t[n]))return!1;return!0}function Zi(e,t,n,r,o,i){if(Vi=i,Yi=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Wi.current=null===e||null===e.memoizedState?xa:ka,e=n(r,o),t.expirationTime===Vi){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(a(301));i+=1,qi=Qi=null,t.updateQueue=null,Wi.current=Sa,e=n(r,o)}while(t.expirationTime===Vi)}if(Wi.current=wa,t=null!==Qi&&null!==Qi.next,Vi=0,qi=Qi=Yi=null,Ki=!1,t)throw Error(a(300));return e}function Ji(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===qi?Yi.memoizedState=qi=e:qi=qi.next=e,qi}function ea(){if(null===Qi){var e=Yi.alternate;e=null!==e?e.memoizedState:null}else e=Qi.next;var t=null===qi?Yi.memoizedState:qi.next;if(null!==t)qi=t,Qi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(Qi=e).memoizedState,baseState:Qi.baseState,baseQueue:Qi.baseQueue,queue:Qi.queue,next:null},null===qi?Yi.memoizedState=qi=e:qi=qi.next=e}return qi}function ta(e,t){return"function"==typeof t?t(e):t}function na(e){var t=ea(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=Qi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var l=o.next;o.next=i.next,i.next=l}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=l=i=null,c=o;do{var s=c.expirationTime;if(s<Vi){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,i=r):u=u.next=f,s>Yi.expirationTime&&(Yi.expirationTime=s,hu(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),pu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=l,Hr(r,t.memoizedState)||(Ra=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function ra(e){var t=ea(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{i=e(i,l.action),l=l.next}while(l!==o);Hr(i,t.memoizedState)||(Ra=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function oa(e){var t=Ji();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ta,lastRenderedState:e}).dispatch=ba.bind(null,Yi,e),[t.memoizedState,e]}function ia(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Yi.updateQueue)?(t={lastEffect:null},Yi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function aa(){return ea().memoizedState}function la(e,t,n,r){var o=Ji();Yi.effectTag|=e,o.memoizedState=ia(1|t,n,void 0,void 0===r?null:r)}function ua(e,t,n,r){var o=ea();r=void 0===r?null:r;var i=void 0;if(null!==Qi){var a=Qi.memoizedState;if(i=a.destroy,null!==r&&Xi(r,a.deps))return void ia(t,n,i,r)}Yi.effectTag|=e,o.memoizedState=ia(1|t,n,i,r)}function ca(e,t){return la(516,4,e,t)}function sa(e,t){return ua(516,4,e,t)}function fa(e,t){return ua(4,2,e,t)}function da(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function pa(e,t,n){return n=null!=n?n.concat([e]):null,ua(4,2,da.bind(null,t,e),n)}function ha(){}function ma(e,t){return Ji().memoizedState=[e,void 0===t?null:t],e}function va(e,t){var n=ea();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function ga(e,t){var n=ea();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ya(e,t,n){var r=Vo();Qo(98>r?98:r,(function(){e(!0)})),Qo(97<r?97:r,(function(){var r=Bi.suspense;Bi.suspense=void 0===t?null:t;try{e(!1),n()}finally{Bi.suspense=r}}))}function ba(e,t,n){var r=eu(),o=gi.suspense;o={expirationTime:r=tu(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Yi||null!==i&&i===Yi)Ki=!0,o.expirationTime=Vi,Yi.expirationTime=Vi;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var a=t.lastRenderedState,l=i(a,n);if(o.eagerReducer=i,o.eagerState=l,Hr(l,a))return}catch(e){}nu(e,r)}}var wa={readContext:ui,useCallback:Gi,useContext:Gi,useEffect:Gi,useImperativeHandle:Gi,useLayoutEffect:Gi,useMemo:Gi,useReducer:Gi,useRef:Gi,useState:Gi,useDebugValue:Gi,useResponder:Gi,useDeferredValue:Gi,useTransition:Gi},xa={readContext:ui,useCallback:ma,useContext:ui,useEffect:ca,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,la(4,2,da.bind(null,t,e),n)},useLayoutEffect:function(e,t){return la(4,2,e,t)},useMemo:function(e,t){var n=Ji();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Ji();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ba.bind(null,Yi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ji().memoizedState=e},useState:oa,useDebugValue:ha,useResponder:Ui,useDeferredValue:function(e,t){var n=oa(e),r=n[0],o=n[1];return ca((function(){var n=Bi.suspense;Bi.suspense=void 0===t?null:t;try{o(e)}finally{Bi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=oa(!1),n=t[0];return t=t[1],[ma(ya.bind(null,t,e),[t,e]),n]}},ka={readContext:ui,useCallback:va,useContext:ui,useEffect:sa,useImperativeHandle:pa,useLayoutEffect:fa,useMemo:ga,useReducer:na,useRef:aa,useState:function(){return na(ta)},useDebugValue:ha,useResponder:Ui,useDeferredValue:function(e,t){var n=na(ta),r=n[0],o=n[1];return sa((function(){var n=Bi.suspense;Bi.suspense=void 0===t?null:t;try{o(e)}finally{Bi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=na(ta),n=t[0];return t=t[1],[va(ya.bind(null,t,e),[t,e]),n]}},Sa={readContext:ui,useCallback:va,useContext:ui,useEffect:sa,useImperativeHandle:pa,useLayoutEffect:fa,useMemo:ga,useReducer:ra,useRef:aa,useState:function(){return ra(ta)},useDebugValue:ha,useResponder:Ui,useDeferredValue:function(e,t){var n=ra(ta),r=n[0],o=n[1];return sa((function(){var n=Bi.suspense;Bi.suspense=void 0===t?null:t;try{o(e)}finally{Bi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ra(ta),n=t[0];return t=t[1],[va(ya.bind(null,t,e),[t,e]),n]}},Ea=null,Ta=null,Ca=!1;function _a(e,t){var n=Au(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Pa(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Oa(e){if(Ca){var t=Ta;if(t){var n=t;if(!Pa(e,t)){if(!(t=Tn(n.nextSibling))||!Pa(e,t))return e.effectTag=-1025&e.effectTag|2,Ca=!1,void(Ea=e);_a(Ea,n)}Ea=e,Ta=Tn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Ca=!1,Ea=e}}function Ma(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ea=e}function Na(e){if(e!==Ea)return!1;if(!Ca)return Ma(e),Ca=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!kn(t,e.memoizedProps))for(t=Ta;t;)_a(e,t),t=Tn(t.nextSibling);if(Ma(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ta=Tn(e.nextSibling);break e}t--}else"$"!==n&&n!==yn&&n!==gn||t++}e=e.nextSibling}Ta=null}}else Ta=Ea?Tn(e.stateNode.nextSibling):null;return!0}function Aa(){Ta=Ea=null,Ca=!1}var Da=G.ReactCurrentOwner,Ra=!1;function Ia(e,t,n,r){t.child=null===e?Mi(t,null,n,r):Oi(t,e.child,n,r)}function ja(e,t,n,r,o){n=n.render;var i=t.ref;return li(t,o),r=Zi(e,t,n,r,i,o),null===e||Ra?(t.effectTag|=1,Ia(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Za(e,t,o))}function La(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Du(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Iu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,za(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:Wr)(o,r)&&e.ref===t.ref)?Za(e,t,i):(t.effectTag|=1,(e=Ru(a,r)).ref=t.ref,e.return=t,t.child=e)}function za(e,t,n,r,o,i){return null!==e&&Wr(e.memoizedProps,r)&&e.ref===t.ref&&(Ra=!1,o<i)?(t.expirationTime=e.expirationTime,Za(e,t,i)):Fa(e,t,n,r,i)}function $a(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Fa(e,t,n,r,o){var i=wo(n)?yo:vo.current;return i=bo(t,i),li(t,o),n=Zi(e,t,n,r,i,o),null===e||Ra?(t.effectTag|=1,Ia(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Za(e,t,o))}function Ha(e,t,n,r,o){if(wo(n)){var i=!0;Eo(t)}else i=!1;if(li(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),ki(t,n,r),Ei(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=ui(c):c=bo(t,c=wo(n)?yo:vo.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&Si(t,a,r,c),ci=!1;var d=t.memoizedState;a.state=d,mi(t,r,a,o),u=t.memoizedState,l!==r||d!==u||go.current||ci?("function"==typeof s&&(bi(t,n,s,r),u=t.memoizedState),(l=ci||xi(t,n,l,r,d,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,fi(e,t),l=t.memoizedProps,a.props=t.type===t.elementType?l:Jo(t.type,l),u=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=ui(c):c=bo(t,c=wo(n)?yo:vo.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&Si(t,a,r,c),ci=!1,u=t.memoizedState,a.state=u,mi(t,r,a,o),d=t.memoizedState,l!==r||u!==d||go.current||ci?("function"==typeof s&&(bi(t,n,s,r),d=t.memoizedState),(s=ci||xi(t,n,l,r,u,d,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),a.props=r,a.state=d,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ua(e,t,n,r,i,o)}function Ua(e,t,n,r,o,i){$a(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&To(t,n,!1),Za(e,t,i);r=t.stateNode,Da.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Oi(t,e.child,null,i),t.child=Oi(t,null,l,i)):Ia(e,t,l,i),t.memoizedState=r.state,o&&To(t,n,!0),t.child}function Wa(e){var t=e.stateNode;t.pendingContext?ko(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ko(0,t.context,!1),ji(e,t.containerInfo)}var Ba,Va,Ya,Qa={dehydrated:null,retryTime:0};function qa(e,t,n){var r,o=t.mode,i=t.pendingProps,a=Fi.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),ho(Fi,1&a),null===e){if(void 0!==i.fallback&&Oa(t),l){if(l=i.fallback,(i=ju(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=ju(l,o,n,null)).return=t,i.sibling=n,t.memoizedState=Qa,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Mi(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,l){if(i=i.fallback,(n=Ru(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(o=Ru(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Qa,t.child=n,o}return n=Oi(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=i.fallback,(i=ju(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=ju(l,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Qa,t.child=i,n}return t.memoizedState=null,t.child=Oi(t,e,i.children,n)}function Ka(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ai(e.return,t)}function Ga(e,t,n,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function Xa(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Ia(e,t,r.children,n),0!=(2&(r=Fi.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ka(e,n);else if(19===e.tag)Ka(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ho(Fi,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Hi(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Ga(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Hi(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Ga(t,!0,n,null,i,t.lastEffect);break;case"together":Ga(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Za(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&hu(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Ru(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ru(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ja(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function el(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return wo(t.type)&&xo(),null;case 3:return Li(),po(go),po(vo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Na(t)||(t.effectTag|=4),null;case 5:$i(t),n=Ii(Ri.current);var i=t.type;if(null!==e&&null!=t.stateNode)Va(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(a(166));return null}if(e=Ii(Ai.current),Na(t)){r=t.stateNode,i=t.type;var l=t.memoizedProps;switch(r[Pn]=t,r[On]=l,i){case"iframe":case"object":case"embed":qt("load",r);break;case"video":case"audio":for(e=0;e<Xe.length;e++)qt(Xe[e],r);break;case"source":qt("error",r);break;case"img":case"image":case"link":qt("error",r),qt("load",r);break;case"form":qt("reset",r),qt("submit",r);break;case"details":qt("toggle",r);break;case"input":Se(r,l),qt("invalid",r),cn(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},qt("invalid",r),cn(n,"onChange");break;case"textarea":Ne(r,l),qt("invalid",r),cn(n,"onChange")}for(var u in an(i,l),e=null,l)if(l.hasOwnProperty(u)){var c=l[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):E.hasOwnProperty(u)&&null!=c&&cn(n,u)}switch(i){case"input":we(r),Ce(r,l,!0);break;case"textarea":we(r),De(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=sn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===un&&(e=je(i)),e===un?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[Pn]=t,e[On]=r,Ba(e,t),t.stateNode=e,u=ln(i,r),i){case"iframe":case"object":case"embed":qt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Xe.length;c++)qt(Xe[c],e);c=r;break;case"source":qt("error",e),c=r;break;case"img":case"image":case"link":qt("error",e),qt("load",e),c=r;break;case"form":qt("reset",e),qt("submit",e),c=r;break;case"details":qt("toggle",e),c=r;break;case"input":Se(e,r),c=ke(e,r),qt("invalid",e),cn(n,"onChange");break;case"option":c=Pe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),qt("invalid",e),cn(n,"onChange");break;case"textarea":Ne(e,r),c=Me(e,r),qt("invalid",e),cn(n,"onChange");break;default:c=r}an(i,c);var s=c;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?rn(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&Fe(e,f):"children"===l?"string"==typeof f?("textarea"!==i||""!==f)&&He(e,f):"number"==typeof f&&He(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(E.hasOwnProperty(l)?null!=f&&cn(n,l):null!=f&&X(e,l,f,u))}switch(i){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),De(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ye(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Oe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=sn)}xn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Ya(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));n=Ii(Ri.current),Ii(Ai.current),Na(t)?(n=t.stateNode,r=t.memoizedProps,n[Pn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Pn]=t,t.stateNode=n)}return null;case 13:return po(Fi),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Na(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(l=t.firstEffect)?(t.firstEffect=i,i.nextEffect=l):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Fi.current)?Il===Pl&&(Il=Ol):(Il!==Pl&&Il!==Ol||(Il=Ml),0!==Fl&&null!==Al&&(Hu(Al,Rl),Uu(Al,Fl)))),(n||r)&&(t.effectTag|=4),null);case 4:return Li(),null;case 10:return ii(t),null;case 17:return wo(t.type)&&xo(),null;case 19:if(po(Fi),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(l=r.rendering)){if(i)Ja(r,!1);else if(Il!==Pl||null!==e&&0!=(64&e.effectTag))for(l=t.child;null!==l;){if(null!==(e=Hi(l))){for(t.effectTag|=64,Ja(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)l=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=l,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,l=e.dependencies,i.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return ho(Fi,1&Fi.current|2),t.child}l=l.sibling}}else{if(!i)if(null!==(e=Hi(l))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Ja(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Bo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,Ja(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=r.last)?n.sibling=l:t.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Bo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Bo(),n.sibling=null,t=Fi.current,ho(Fi,i?1&t|2:1&t),n):null}throw Error(a(156,t.tag))}function tl(e){switch(e.tag){case 1:wo(e.type)&&xo();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Li(),po(go),po(vo),0!=(64&(t=e.effectTag)))throw Error(a(285));return e.effectTag=-4097&t|64,e;case 5:return $i(e),null;case 13:return po(Fi),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return po(Fi),null;case 4:return Li(),null;case 10:return ii(e),null;default:return null}}function nl(e,t){return{value:e,source:t,stack:ge(t)}}Ba=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Va=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l,u,c=t.stateNode;switch(Ii(Ai.current),e=null,n){case"input":a=ke(c,a),r=ke(c,r),e=[];break;case"option":a=Pe(c,a),r=Pe(c,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Me(c,a),r=Me(c,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(c.onclick=sn)}for(l in an(n,r),n=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(u in c=a[l])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(E.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var s=r[l];if(c=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&s!==c&&(null!=s||null!=c))if("style"===l)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(l,n)),n=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(l,s)):"children"===l?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(E.hasOwnProperty(l)?(null!=s&&cn(i,l),e||c===s||(e=[])):(e=e||[]).push(l,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Ya=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var rl="function"==typeof WeakSet?WeakSet:Set;function ol(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ge(n)),null!==n&&ve(n.type),t=t.value,null!==e&&1===e.tag&&ve(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function il(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Cu(e,t)}else t.current=null}function al(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Jo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(a(163))}function ll(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ul(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function cl(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ul(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Jo(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&vi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}vi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&xn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Lt(n)))));case 19:case 17:case 20:case 21:return}throw Error(a(163))}function sl(e,t,n){switch("function"==typeof Mu&&Mu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Qo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){Cu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:il(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Cu(e,t)}}(t,n);break;case 5:il(t);break;case 4:vl(e,t,n)}}function fl(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&fl(t)}function dl(e){return 5===e.tag||3===e.tag||4===e.tag}function pl(e){e:{for(var t=e.return;null!==t;){if(dl(t)){var n=t;break e}t=t.return}throw Error(a(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.effectTag&&(He(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||dl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?hl(e,n,t):ml(e,n,t)}function hl(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=sn));else if(4!==r&&null!==(e=e.child))for(hl(e,t,n),e=e.sibling;null!==e;)hl(e,t,n),e=e.sibling}function ml(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ml(e,t,n),e=e.sibling;null!==e;)ml(e,t,n),e=e.sibling}function vl(e,t,n){for(var r,o,i=t,l=!1;;){if(!l){l=i.return;e:for(;;){if(null===l)throw Error(a(160));switch(r=l.stateNode,l.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}l=l.return}l=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(sl(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(sl(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(l=!1)}i.sibling.return=i.return,i=i.sibling}}function gl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ll(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[On]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Ee(n,r),ln(e,o),t=ln(e,r),o=0;o<i.length;o+=2){var l=i[o],u=i[o+1];"style"===l?rn(n,u):"dangerouslySetInnerHTML"===l?Fe(n,u):"children"===l?He(n,u):X(n,l,u,t)}switch(e){case"input":Te(n,r);break;case"textarea":Ae(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Oe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Oe(n,!!r.multiple,r.defaultValue,!0):Oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Lt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ul=Bo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=nn("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void yl(t);case 19:return void yl(t);case 17:return}throw Error(a(163))}function yl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new rl),t.forEach((function(t){var r=Pu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var bl="function"==typeof WeakMap?WeakMap:Map;function wl(e,t,n){(n=di(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Bl||(Bl=!0,Vl=r),ol(e,t)},n}function xl(e,t,n){(n=di(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ol(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Yl?Yl=new Set([this]):Yl.add(this),ol(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var kl,Sl=Math.ceil,El=G.ReactCurrentDispatcher,Tl=G.ReactCurrentOwner,Cl=16,_l=32,Pl=0,Ol=3,Ml=4,Nl=0,Al=null,Dl=null,Rl=0,Il=Pl,jl=null,Ll=1073741823,zl=1073741823,$l=null,Fl=0,Hl=!1,Ul=0,Wl=null,Bl=!1,Vl=null,Yl=null,Ql=!1,ql=null,Kl=90,Gl=null,Xl=0,Zl=null,Jl=0;function eu(){return 0!=(48&Nl)?1073741821-(Bo()/10|0):0!==Jl?Jl:Jl=1073741821-(Bo()/10|0)}function tu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Vo();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(Nl&Cl))return Rl;if(null!==n)e=Zo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Zo(e,150,100);break;case 97:case 96:e=Zo(e,5e3,250);break;case 95:e=2;break;default:throw Error(a(326))}return null!==Al&&e===Rl&&--e,e}function nu(e,t){if(50<Xl)throw Xl=0,Zl=null,Error(a(185));if(null!==(e=ru(e,t))){var n=Vo();1073741823===t?0!=(8&Nl)&&0==(48&Nl)?lu(e):(iu(e),0===Nl&&Go()):iu(e),0==(4&Nl)||98!==n&&99!==n||(null===Gl?Gl=new Map([[e,t]]):(void 0===(n=Gl.get(e))||n>t)&&Gl.set(e,t))}}function ru(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Al===o&&(hu(t),Il===Ml&&Hu(o,Rl)),Uu(o,t)),o}function ou(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Fu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function iu(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Ko(lu.bind(null,e));else{var t=ou(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=eu();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Lo&&Po(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Ko(lu.bind(null,e)):qo(r,au.bind(null,e),{timeout:10*(1073741821-t)-Bo()}),e.callbackNode=t}}}function au(e,t){if(Jl=0,t)return Wu(e,t=eu()),iu(e),null;var n=ou(e);if(0!==n){if(t=e.callbackNode,0!=(48&Nl))throw Error(a(327));if(Su(),e===Al&&n===Rl||su(e,n),null!==Dl){var r=Nl;Nl|=Cl;for(var o=du();;)try{vu();break}catch(t){fu(e,t)}if(oi(),Nl=r,El.current=o,1===Il)throw t=jl,su(e,n),Hu(e,n),iu(e),t;if(null===Dl)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Il,Al=null,r){case Pl:case 1:throw Error(a(345));case 2:Wu(e,2<n?2:n);break;case Ol:if(Hu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=bu(o)),1073741823===Ll&&10<(o=Ul+500-Bo())){if(Hl){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,su(e,n);break}}if(0!==(i=ou(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=Sn(wu.bind(null,e),o);break}wu(e);break;case Ml:if(Hu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=bu(o)),Hl&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,su(e,n);break}if(0!==(o=ou(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==zl?r=10*(1073741821-zl)-Bo():1073741823===Ll?r=0:(r=10*(1073741821-Ll)-5e3,0>(r=(o=Bo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Sl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=Sn(wu.bind(null,e),r);break}wu(e);break;case 5:if(1073741823!==Ll&&null!==$l){i=Ll;var l=$l;if(0>=(r=0|l.busyMinDurationMs)?r=0:(o=0|l.busyDelayMs,r=(i=Bo()-(10*(1073741821-i)-(0|l.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Hu(e,n),e.timeoutHandle=Sn(wu.bind(null,e),r);break}}wu(e);break;default:throw Error(a(329))}if(iu(e),e.callbackNode===t)return au.bind(null,e)}}return null}function lu(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&Nl))throw Error(a(327));if(Su(),e===Al&&t===Rl||su(e,t),null!==Dl){var n=Nl;Nl|=Cl;for(var r=du();;)try{mu();break}catch(t){fu(e,t)}if(oi(),Nl=n,El.current=r,1===Il)throw n=jl,su(e,t),Hu(e,t),iu(e),n;if(null!==Dl)throw Error(a(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Al=null,wu(e),iu(e)}return null}function uu(e,t){var n=Nl;Nl|=1;try{return e(t)}finally{0===(Nl=n)&&Go()}}function cu(e,t){var n=Nl;Nl&=-2,Nl|=8;try{return e(t)}finally{0===(Nl=n)&&Go()}}function su(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,En(n)),null!==Dl)for(n=Dl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&xo();break;case 3:Li(),po(go),po(vo);break;case 5:$i(r);break;case 4:Li();break;case 13:case 19:po(Fi);break;case 10:ii(r)}n=n.return}Al=e,Dl=Ru(e.current,null),Rl=t,Il=Pl,jl=null,zl=Ll=1073741823,$l=null,Fl=0,Hl=!1}function fu(e,t){for(;;){try{if(oi(),Wi.current=wa,Ki)for(var n=Yi.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Vi=0,qi=Qi=Yi=null,Ki=!1,null===Dl||null===Dl.return)return Il=1,jl=t,Dl=null;e:{var o=e,i=Dl.return,a=Dl,l=t;if(t=Rl,a.effectTag|=2048,a.firstEffect=a.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var u=l;if(0==(2&a.mode)){var c=a.alternate;c?(a.updateQueue=c.updateQueue,a.memoizedState=c.memoizedState,a.expirationTime=c.expirationTime):(a.updateQueue=null,a.memoizedState=null)}var s=0!=(1&Fi.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var h=f.memoizedProps;d=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!s)}}if(d){var m=f.updateQueue;if(null===m){var v=new Set;v.add(u),f.updateQueue=v}else m.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,a.effectTag&=-2981,1===a.tag)if(null===a.alternate)a.tag=17;else{var g=di(1073741823,null);g.tag=2,pi(a,g)}a.expirationTime=1073741823;break e}l=void 0,a=t;var y=o.pingCache;if(null===y?(y=o.pingCache=new bl,l=new Set,y.set(u,l)):void 0===(l=y.get(u))&&(l=new Set,y.set(u,l)),!l.has(a)){l.add(a);var b=_u.bind(null,o,u,a);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);l=Error((ve(a.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ge(a))}5!==Il&&(Il=2),l=nl(l,a),f=i;do{switch(f.tag){case 3:u=l,f.effectTag|=4096,f.expirationTime=t,hi(f,wl(f,u,t));break e;case 1:u=l;var w=f.type,x=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===Yl||!Yl.has(x)))){f.effectTag|=4096,f.expirationTime=t,hi(f,xl(f,u,t));break e}}f=f.return}while(null!==f)}Dl=yu(Dl)}catch(e){t=e;continue}break}}function du(){var e=El.current;return El.current=wa,null===e?wa:e}function pu(e,t){e<Ll&&2<e&&(Ll=e),null!==t&&e<zl&&2<e&&(zl=e,$l=t)}function hu(e){e>Fl&&(Fl=e)}function mu(){for(;null!==Dl;)Dl=gu(Dl)}function vu(){for(;null!==Dl&&!zo();)Dl=gu(Dl)}function gu(e){var t=kl(e.alternate,e,Rl);return e.memoizedProps=e.pendingProps,null===t&&(t=yu(e)),Tl.current=null,t}function yu(e){Dl=e;do{var t=Dl.alternate;if(e=Dl.return,0==(2048&Dl.effectTag)){if(t=el(t,Dl,Rl),1===Rl||1!==Dl.childExpirationTime){for(var n=0,r=Dl.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}Dl.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Dl.firstEffect),null!==Dl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Dl.firstEffect),e.lastEffect=Dl.lastEffect),1<Dl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Dl:e.firstEffect=Dl,e.lastEffect=Dl))}else{if(null!==(t=tl(Dl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Dl.sibling))return t;Dl=e}while(null!==Dl);return Il===Pl&&(Il=5),null}function bu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function wu(e){var t=Vo();return Qo(99,xu.bind(null,e,t)),null}function xu(e,t){do{Su()}while(null!==ql);if(0!=(48&Nl))throw Error(a(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=bu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Al&&(Dl=Al=null,Rl=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Nl;Nl|=_l,Tl.current=null,bn=Qt;var l=mn();if(vn(l)){if("selectionStart"in l)var u={start:l.selectionStart,end:l.selectionEnd};else e:{var c=(u=(u=l.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,h=-1,m=0,v=0,g=l,y=null;t:for(;;){for(var b;g!==u||0!==s&&3!==g.nodeType||(p=d+s),g!==f||0!==c&&3!==g.nodeType||(h=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)y=g,g=b;for(;;){if(g===l)break t;if(y===u&&++m===s&&(p=d),y===f&&++v===c&&(h=d),null!==(b=g.nextSibling))break;y=(g=y).parentNode}g=b}u=-1===p||-1===h?null:{start:p,end:h}}else u=null}u=u||{start:0,end:0}}else u=null;wn={activeElementDetached:null,focusedElem:l,selectionRange:u},Qt=!1,Wl=o;do{try{ku()}catch(e){if(null===Wl)throw Error(a(330));Cu(Wl,e),Wl=Wl.nextEffect}}while(null!==Wl);Wl=o;do{try{for(l=e,u=t;null!==Wl;){var w=Wl.effectTag;if(16&w&&He(Wl.stateNode,""),128&w){var x=Wl.alternate;if(null!==x){var k=x.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&w){case 2:pl(Wl),Wl.effectTag&=-3;break;case 6:pl(Wl),Wl.effectTag&=-3,gl(Wl.alternate,Wl);break;case 1024:Wl.effectTag&=-1025;break;case 1028:Wl.effectTag&=-1025,gl(Wl.alternate,Wl);break;case 4:gl(Wl.alternate,Wl);break;case 8:vl(l,s=Wl,u),fl(s)}Wl=Wl.nextEffect}}catch(e){if(null===Wl)throw Error(a(330));Cu(Wl,e),Wl=Wl.nextEffect}}while(null!==Wl);if(k=wn,x=mn(),w=k.focusedElem,u=k.selectionRange,x!==w&&w&&w.ownerDocument&&hn(w.ownerDocument.documentElement,w)){null!==u&&vn(w)&&(x=u.start,void 0===(k=u.end)&&(k=x),"selectionStart"in w?(w.selectionStart=x,w.selectionEnd=Math.min(k,w.value.length)):(k=(x=w.ownerDocument||document)&&x.defaultView||window).getSelection&&(k=k.getSelection(),s=w.textContent.length,l=Math.min(u.start,s),u=void 0===u.end?l:Math.min(u.end,s),!k.extend&&l>u&&(s=u,u=l,l=s),s=pn(w,l),f=pn(w,u),s&&f&&(1!==k.rangeCount||k.anchorNode!==s.node||k.anchorOffset!==s.offset||k.focusNode!==f.node||k.focusOffset!==f.offset)&&((x=x.createRange()).setStart(s.node,s.offset),k.removeAllRanges(),l>u?(k.addRange(x),k.extend(f.node,f.offset)):(x.setEnd(f.node,f.offset),k.addRange(x))))),x=[];for(k=w;k=k.parentNode;)1===k.nodeType&&x.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<x.length;w++)(k=x[w]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Qt=!!bn,wn=bn=null,e.current=n,Wl=o;do{try{for(w=e;null!==Wl;){var S=Wl.effectTag;if(36&S&&cl(w,Wl.alternate,Wl),128&S){x=void 0;var E=Wl.ref;if(null!==E){var T=Wl.stateNode;switch(Wl.tag){case 5:x=T;break;default:x=T}"function"==typeof E?E(x):E.current=x}}Wl=Wl.nextEffect}}catch(e){if(null===Wl)throw Error(a(330));Cu(Wl,e),Wl=Wl.nextEffect}}while(null!==Wl);Wl=null,$o(),Nl=i}else e.current=n;if(Ql)Ql=!1,ql=e,Kl=t;else for(Wl=o;null!==Wl;)t=Wl.nextEffect,Wl.nextEffect=null,Wl=t;if(0===(t=e.firstPendingTime)&&(Yl=null),1073741823===t?e===Zl?Xl++:(Xl=0,Zl=e):Xl=0,"function"==typeof Ou&&Ou(n.stateNode,r),iu(e),Bl)throw Bl=!1,e=Vl,Vl=null,e;return 0!=(8&Nl)||Go(),null}function ku(){for(;null!==Wl;){var e=Wl.effectTag;0!=(256&e)&&al(Wl.alternate,Wl),0==(512&e)||Ql||(Ql=!0,qo(97,(function(){return Su(),null}))),Wl=Wl.nextEffect}}function Su(){if(90!==Kl){var e=97<Kl?97:Kl;return Kl=90,Qo(e,Eu)}}function Eu(){if(null===ql)return!1;var e=ql;if(ql=null,0!=(48&Nl))throw Error(a(331));var t=Nl;for(Nl|=_l,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ll(5,n),ul(5,n)}}catch(t){if(null===e)throw Error(a(330));Cu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Nl=t,Go(),!0}function Tu(e,t,n){pi(e,t=wl(e,t=nl(n,t),1073741823)),null!==(e=ru(e,1073741823))&&iu(e)}function Cu(e,t){if(3===e.tag)Tu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Tu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Yl||!Yl.has(r))){pi(n,e=xl(n,e=nl(t,e),1073741823)),null!==(n=ru(n,1073741823))&&iu(n);break}}n=n.return}}function _u(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Al===e&&Rl===n?Il===Ml||Il===Ol&&1073741823===Ll&&Bo()-Ul<500?su(e,Rl):Hl=!0:Fu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,iu(e)))}function Pu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=tu(t=eu(),e,null)),null!==(e=ru(e,t))&&iu(e)}kl=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||go.current)Ra=!0;else{if(r<n){switch(Ra=!1,t.tag){case 3:Wa(t),Aa();break;case 5:if(zi(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:wo(t.type)&&Eo(t);break;case 4:ji(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,ho(ei,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?qa(e,t,n):(ho(Fi,1&Fi.current),null!==(t=Za(e,t,n))?t.sibling:null);ho(Fi,1&Fi.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Xa(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),ho(Fi,Fi.current),!r)return null}return Za(e,t,n)}Ra=!1}}else Ra=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=bo(t,vo.current),li(t,n),o=Zi(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,wo(r)){var i=!0;Eo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,si(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&bi(t,r,l,e),o.updater=wi,t.stateNode=o,o._reactInternalFiber=t,Ei(t,r,e,n),t=Ua(null,t,r,!0,i,n)}else t.tag=0,Ia(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Du(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Jo(o,e),i){case 0:t=Fa(null,t,o,e,n);break e;case 1:t=Ha(null,t,o,e,n);break e;case 11:t=ja(null,t,o,e,n);break e;case 14:t=La(null,t,o,Jo(o.type,e),r,n);break e}throw Error(a(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Fa(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Ha(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 3:if(Wa(t),r=t.updateQueue,null===e||null===r)throw Error(a(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,fi(e,t),mi(t,r,null,n),(r=t.memoizedState.element)===o)Aa(),t=Za(e,t,n);else{if((o=t.stateNode.hydrate)&&(Ta=Tn(t.stateNode.containerInfo.firstChild),Ea=t,o=Ca=!0),o)for(n=Mi(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Ia(e,t,r,n),Aa();t=t.child}return t;case 5:return zi(t),null===e&&Oa(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,kn(r,o)?l=null:null!==i&&kn(r,i)&&(t.effectTag|=16),$a(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ia(e,t,l,n),t=t.child),t;case 6:return null===e&&Oa(t),null;case 13:return qa(e,t,n);case 4:return ji(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Oi(t,null,r,n):Ia(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ja(e,t,r,o=t.elementType===r?o:Jo(r,o),n);case 7:return Ia(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ia(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,l=t.memoizedProps,i=o.value;var u=t.type._context;if(ho(ei,u._currentValue),u._currentValue=i,null!==l)if(u=l.value,0===(i=Hr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!go.current){t=Za(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=di(n,null)).tag=2,pi(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),ai(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Ia(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,li(t,n),r=r(o=ui(o,i.unstable_observedBits)),t.effectTag|=1,Ia(e,t,r,n),t.child;case 14:return i=Jo(o=t.type,t.pendingProps),La(e,t,o,i=Jo(o.type,i),r,n);case 15:return za(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Jo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,wo(r)?(e=!0,Eo(t)):e=!1,li(t,n),ki(t,r,o),Ei(t,r,o,n),Ua(null,t,r,!0,e,n);case 19:return Xa(e,t,n)}throw Error(a(156,t.tag))};var Ou=null,Mu=null;function Nu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Au(e,t,n,r){return new Nu(e,t,n,r)}function Du(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ru(e,t){var n=e.alternate;return null===n?((n=Au(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Iu(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Du(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case ne:return ju(n.children,o,i,t);case le:l=8,o|=7;break;case re:l=8,o|=1;break;case oe:return(e=Au(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Au(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=Au(19,n,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:l=10;break e;case ae:l=9;break e;case ue:l=11;break e;case fe:l=14;break e;case de:l=16,r=null;break e;case pe:l=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Au(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function ju(e,t,n,r){return(e=Au(7,e,r,t)).expirationTime=n,e}function Lu(e,t,n){return(e=Au(6,e,null,t)).expirationTime=n,e}function zu(e,t,n){return(t=Au(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function $u(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Fu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Hu(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Uu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Wu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Bu(e,t,n,r){var o=t.current,i=eu(),l=gi.suspense;i=tu(i,o,l);e:if(n){t:{if(et(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(a(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(wo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(a(171))}if(1===n.tag){var c=n.type;if(wo(c)){n=So(n,c,u);break e}}n=u}else n=mo;return null===t.context?t.context=n:t.pendingContext=n,(t=di(i,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),pi(o,t),nu(o,i),i}function Vu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Yu(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Qu(e,t){Yu(e,t),(e=e.alternate)&&Yu(e,t)}function qu(e,t,n){var r=new $u(e,t,n=null!=n&&!0===n.hydrate),o=Au(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,si(o),e[Mn]=r.current,n&&0!==t&&function(e,t){var n=Je(t);_t.forEach((function(e){mt(e,t,n)})),Pt.forEach((function(e){mt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Ku(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Gu(e,t,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Vu(a);l.call(e)}}Bu(t,a,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new qu(e,0,t?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Vu(a);u.call(e)}}cu((function(){Bu(t,a,e,o)}))}return Vu(a)}function Xu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Zu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ku(t))throw Error(a(200));return Xu(e,t,null,n)}qu.prototype.render=function(e){Bu(e,this._internalRoot,null,null)},qu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Bu(null,e,null,(function(){t[Mn]=null}))},vt=function(e){if(13===e.tag){var t=Zo(eu(),150,100);nu(e,t),Qu(e,t)}},gt=function(e){13===e.tag&&(nu(e,3),Qu(e,3))},yt=function(e){if(13===e.tag){var t=eu();nu(e,t=tu(t,e,null)),Qu(e,t)}},P=function(e,t,n){switch(t){case"input":if(Te(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=Rn(r);if(!o)throw Error(a(90));xe(r),Te(r,o)}}}break;case"textarea":Ae(e,n);break;case"select":null!=(t=n.value)&&Oe(e,!!n.multiple,t,!1)}},R=uu,I=function(e,t,n,r,o){var i=Nl;Nl|=4;try{return Qo(98,e.bind(null,t,n,r,o))}finally{0===(Nl=i)&&Go()}},j=function(){0==(49&Nl)&&(function(){if(null!==Gl){var e=Gl;Gl=null,e.forEach((function(e,t){Wu(t,e),iu(t)})),Go()}}(),Su())},L=function(e,t){var n=Nl;Nl|=2;try{return e(t)}finally{0===(Nl=n)&&Go()}};var Ju={Events:[An,Dn,Rn,C,S,Hn,function(e){it(e,Fn)},A,D,Zt,ut,Su,{current:!1}]};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Ou=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Mu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}})(o({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:G.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:Nn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Ju,t.createPortal=Zu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=rt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&Nl))throw Error(a(187));var n=Nl;Nl|=1;try{return Qo(99,e.bind(null,t))}finally{Nl=n,Go()}},t.hydrate=function(e,t,n){if(!Ku(t))throw Error(a(200));return Gu(null,e,t,!0,n)},t.render=function(e,t,n){if(!Ku(t))throw Error(a(200));return Gu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ku(e))throw Error(a(40));return!!e._reactRootContainer&&(cu((function(){Gu(null,null,e,!1,(function(){e._reactRootContainer=null,e[Mn]=null}))})),!0)},t.unstable_batchedUpdates=uu,t.unstable_createPortal=function(e,t){return Zu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Ku(n))throw Error(a(200));if(null==e||void 0===e._reactInternalFiber)throw Error(a(38));return Gu(e,t,n,!1,r)},t.version="16.13.1"},zLVn:function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n.d(t,"a",(function(){return r}))},zdCA:function(e,t,n){"use strict";var r=n("TqRt"),o=n("284h");Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=o(n("q1tI")),a=r(n("PSzr")),l=r(n("KQxl")),u=function(e,t){return i.createElement(l.default,Object.assign({},e,{ref:t,icon:a.default}))};u.displayName="BarsOutlined";var c=i.forwardRef(u);t.default=c}},[[0,3]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGF5anMvcGx1Z2luL2N1c3RvbVBhcnNlRm9ybWF0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGFudC1kZXNpZ24vaWNvbnMvbGliL2NvbXBvbmVudHMvSWNvbkJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhbnQtZGVzaWduL2ljb25zL2xpYi9jb21wb25lbnRzL3R3b1RvbmVQcmltYXJ5Q29sb3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FudGQvZXMvbGF5b3V0L3N0eWxlL2luZGV4Lmxlc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RheWpzL3BsdWdpbi9pc1NhbWVPckFmdGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvb2JqZWN0U3ByZWFkMi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy9saWIvaWNvbnMvUmlnaHRPdXRsaW5lZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgvZXMvcmVkdXguanMiLCJ3ZWJwYWNrOi8vLy4vY2xpZW50L3N0b3JlIGxhenkgXlxcLlxcL2NvbmZpZ3VyZVN0b3JlXFwuLiokIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvbm9uSXRlcmFibGVTcHJlYWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhbnQtZGVzaWduL2ljb25zL0xlZnRPdXRsaW5lZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pdGVyYWJsZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhbnQtZGVzaWduL2ljb25zL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9jb2xvcnMvbGliL2dlbmVyYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy1zdmcvbGliL2Fzbi9SaWdodE91dGxpbmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy9saWIvaWNvbnMvTGVmdE91dGxpbmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kYXlqcy9wbHVnaW4vd2Vla1llYXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2luc2VydC1jc3MvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RheWpzL3BsdWdpbi9sb2NhbGl6ZWRGb3JtYXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2NvbXBvbmVudHMvQ29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvYmF0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL1N1YnNjcmlwdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29tcG9uZW50cy9Qcm92aWRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaG9va3MvdXNlU2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yYy1waWNrZXIvZXMvbG9jYWxlL2VuX1VTLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hbnRkL2VzL3RpbWUtcGlja2VyL2xvY2FsZS9lbl9VUy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYW50ZC9lcy9kYXRlLXBpY2tlci9sb2NhbGUvZW5fVVMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FudGQvZXMvbG9jYWxlL2RlZmF1bHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FudGQvZXMvbG9jYWxlLXByb3ZpZGVyL2RlZmF1bHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JjLXBhZ2luYXRpb24vZXMvbG9jYWxlL2VuX1VTLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hbnRkL2VzL2xvY2FsZS1wcm92aWRlci9jb250ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hbnRkL2VzL2xvY2FsZS1wcm92aWRlci9Mb2NhbGVSZWNlaXZlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYW50ZC9lcy9lbXB0eS9lbXB0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYW50ZC9lcy9lbXB0eS9zaW1wbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FudGQvZXMvZW1wdHkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FudGQvZXMvY29uZmlnLXByb3ZpZGVyL3JlbmRlckVtcHR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hbnRkL2VzL2NvbmZpZy1wcm92aWRlci9jb250ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hbnRkL2VzL2xheW91dC9sYXlvdXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29taXQuanMvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2FudGQvZXMvbGF5b3V0L1NpZGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hbnRkL2VzL191dGlsL2lzTnVtZXJpYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYW50ZC9lcy9sYXlvdXQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvZXNtL3Jlc29sdmUtcGF0aG5hbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZhbHVlLWVxdWFsL2VzbS92YWx1ZS1lcXVhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXNtL2hpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lc20vcmVhY3Qtcm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzbS9yZWFjdC1yb3V0ZXItZG9tLmpzIiwid2VicGFjazovLy8uL2NsaWVudC9Sb3V0ZXIudHN4Iiwid2VicGFjazovLy8uL2NsaWVudC9BcHAudHN4Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5V2l0aG91dEhvbGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3NsaWNlZFRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhbnQtZGVzaWduL2ljb25zL2xpYi9jb21wb25lbnRzL0FudGRJY29uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kYXlqcy9wbHVnaW4vd2Vla09mWWVhci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVTdXBlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy1zdmcvbGliL2Fzbi9CYXJzT3V0bGluZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9vYmplY3RXaXRob3V0UHJvcGVydGllcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b0NvbnN1bWFibGVBcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYW50ZC1kYXlqcy13ZWJwYWNrLXBsdWdpbi9zcmMvYW50ZC1wbHVnaW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RheWpzL3BsdWdpbi9pc01vbWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvcG9ueWZpbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2V0UHJvdG90eXBlT2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhbnQtZGVzaWduL2ljb25zL0JhcnNPdXRsaW5lZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGF5anMvZGF5anMubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5TGlrZVRvQXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RheWpzL3BsdWdpbi9sb2NhbGVEYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy9ub2RlX21vZHVsZXMvQGFudC1kZXNpZ24vY29sb3JzL2xpYi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGlueWNvbG9yMi90aW55Y29sb3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N5bWJvbC1vYnNlcnZhYmxlL2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3R5cGVvZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYW50ZC9lcy9zdHlsZS9pbmRleC5sZXNzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yYy11dGlsL2xpYi93YXJuaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy9SaWdodE91dGxpbmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kYXlqcy9wbHVnaW4vd2Vla2RheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kYXlqcy9wbHVnaW4vYWR2YW5jZWRGb3JtYXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXRlcmFibGVUb0FycmF5TGltaXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGF5anMvcGx1Z2luL2lzU2FtZU9yQmVmb3JlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hbnRkLWRheWpzLXdlYnBhY2stcGx1Z2luL3NyYy9pbml0LWRheWpzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wYXRoLXRvLXJlZ2V4cC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYW50LWRlc2lnbi9pY29ucy9saWIvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlXaXRoSG9sZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhbnQtZGVzaWduL2ljb25zLXN2Zy9saWIvYXNuL0xlZnRPdXRsaW5lZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9ub25JdGVyYWJsZVJlc3QuanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhbnQtZGVzaWduL2ljb25zL2xpYi9pY29ucy9CYXJzT3V0bGluZWQuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInQiLCJlIiwibiIsInIiLCJvIiwiaSIsInRoaXMiLCJzIiwiem9uZSIsIm9mZnNldCIsIm1hdGNoIiwiYSIsImluZGV4T2YiLCJjb25jYXQiLCJmIiwiaCIsIkEiLCJhZnRlcm5vb24iLCJTIiwibWlsbGlzZWNvbmRzIiwiU1MiLCJTU1MiLCJzcyIsIm0iLCJtbSIsIkgiLCJISCIsImhoIiwiRCIsIkREIiwiRG8iLCJvcmRpbmFsIiwiZGF5IiwicmVwbGFjZSIsIk0iLCJNTSIsIk1NTSIsIm1hcCIsInN1YnN0ciIsIkVycm9yIiwibW9udGgiLCJNTU1NIiwiWSIsIllZIiwieWVhciIsIllZWVkiLCJaIiwiWloiLCJsZW5ndGgiLCJyZWdleCIsInBhcnNlciIsInUiLCJleGVjIiwiY2FsbCIsImhvdXJzIiwibWludXRlcyIsImQiLCJzZWNvbmRzIiwiYyIsImwiLCJEYXRlIiwidiIsImdldERhdGUiLCJwIiwiZ2V0RnVsbFllYXIiLCJ5IiwiZ2V0TW9udGgiLCJnIiwiVVRDIiwicHJvdG90eXBlIiwicGFyc2UiLCJkYXRlIiwidXRjIiwiYXJncyIsIiR1IiwiTHMiLCIkbG9jYWxlIiwiJGQiLCJpbml0IiwiJEwiLCJsb2NhbGUiLCJmb3JtYXQiLCJBcnJheSIsImFwcGx5IiwiaXNWYWxpZCIsImsiLCJ3aW5kb3ciLCJNZXNzYWdlQ2hhbm5lbCIsInEiLCJ1bnN0YWJsZV9ub3ciLCJiIiwic2V0VGltZW91dCIsIm5vdyIsImNsZWFyVGltZW91dCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwidyIsInBlcmZvcm1hbmNlIiwieCIsInoiLCJjb25zb2xlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJlcnJvciIsIkIiLCJDIiwiRSIsIkYiLCJHIiwiTWF0aCIsImZsb29yIiwiSSIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsIkoiLCJwdXNoIiwiSyIsIkwiLCJwb3AiLCJzb3J0SW5kZXgiLCJpZCIsIk4iLCJPIiwiUCIsIlEiLCJSIiwiVCIsIlUiLCJWIiwiY2FsbGJhY2siLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsIlciLCJYIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwiZGVsYXkiLCJ0aW1lb3V0IiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJhcmd1bWVudHMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImRlZmF1bHQiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMyIiwiX29iamVjdFNwcmVhZDIiLCJfdXRpbHMiLCJ0d29Ub25lQ29sb3JQYWxldHRlIiwicHJpbWFyeUNvbG9yIiwic2Vjb25kYXJ5Q29sb3IiLCJjYWxjdWxhdGVkIiwiSWNvbkJhc2UiLCJwcm9wcyIsImljb24iLCJjbGFzc05hbWUiLCJvbkNsaWNrIiwic3R5bGUiLCJyZXN0UHJvcHMiLCJjb2xvcnMiLCJnZXRTZWNvbmRhcnlDb2xvciIsInVzZUluc2VydFN0eWxlcyIsIndhcm5pbmciLCJpc0ljb25EZWZpbml0aW9uIiwidGFyZ2V0IiwiZ2VuZXJhdGUiLCJuYW1lIiwid2lkdGgiLCJoZWlnaHQiLCJmaWxsIiwiZGlzcGxheU5hbWUiLCJnZXRUd29Ub25lQ29sb3JzIiwic2V0VHdvVG9uZUNvbG9ycyIsIl9yZWYiLCJfZGVmYXVsdCIsInNldFR3b1RvbmVDb2xvciIsInR3b1RvbmVDb2xvciIsIl9ub3JtYWxpemVUd29Ub25lQ29sbyIsIm5vcm1hbGl6ZVR3b1RvbmVDb2xvcnMiLCJfbm9ybWFsaXplVHdvVG9uZUNvbG8yIiwiX3NsaWNlZFRvQXJyYXkyIiwiX0ljb25CYXNlIiwiZ2V0VHdvVG9uZUNvbG9yIiwiYXBpIiwiY29udGVudCIsIl9fZXNNb2R1bGUiLCJvcHRpb25zIiwibG9jYWxzIiwiaXNTYW1lT3JBZnRlciIsImlzU2FtZSIsImlzQWZ0ZXIiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJlcnIiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwiZnVuYyIsIm51bWJlciIsIm9iamVjdCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJfdHlwZW9mIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiV2Vha01hcCIsImNhY2hlIiwib2JqIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJkZXNjIiwic2V0IiwicmVhY3RJcyIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlIiwiY29udGV4dFR5cGVzIiwiZGVmYXVsdFByb3BzIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwidHlwZSIsIktOT1dOX1NUQVRJQ1MiLCJjYWxsZXIiLCJjYWxsZWUiLCJhcml0eSIsIk1FTU9fU1RBVElDUyIsImNvbXBhcmUiLCJUWVBFX1NUQVRJQ1MiLCJnZXRTdGF0aWNzIiwiY29tcG9uZW50IiwiaXNNZW1vIiwiRm9yd2FyZFJlZiIsInJlbmRlciIsIk1lbW8iLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsImtleXMiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsImRlc2NyaXB0b3IiLCJvcmlnaW5hbE1vZHVsZSIsIndlYnBhY2tQb2x5ZmlsbCIsImNyZWF0ZSIsImNoaWxkcmVuIiwiZW51bWVyYWJsZSIsIm93bktleXMiLCJlbnVtZXJhYmxlT25seSIsInN5bWJvbHMiLCJmaWx0ZXIiLCJzeW0iLCJzb3VyY2UiLCJmb3JFYWNoIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJpc0FycmF5IiwiYXJyIiwidG9TdHJpbmciLCJzZXRQcm90b3R5cGVPZiIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsIlR5cGVFcnJvciIsImNvbnN0cnVjdG9yIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIlJlYWN0IiwiX1JpZ2h0T3V0bGluZWQiLCJfQW50ZEljb24iLCJSaWdodE91dGxpbmVkIiwicmVmIiwiY3JlYXRlRWxlbWVudCIsImFzc2lnbiIsImZvcndhcmRSZWYiLCJyYW5kb21TdHJpbmciLCJyYW5kb20iLCJzdWJzdHJpbmciLCJzcGxpdCIsImpvaW4iLCJBY3Rpb25UeXBlcyIsIklOSVQiLCJSRVBMQUNFIiwiUFJPQkVfVU5LTk9XTl9BQ1RJT04iLCJpc1BsYWluT2JqZWN0IiwicHJvdG8iLCJjcmVhdGVTdG9yZSIsInJlZHVjZXIiLCJwcmVsb2FkZWRTdGF0ZSIsImVuaGFuY2VyIiwiX3JlZjIiLCJ1bmRlZmluZWQiLCJjdXJyZW50UmVkdWNlciIsImN1cnJlbnRTdGF0ZSIsImN1cnJlbnRMaXN0ZW5lcnMiLCJuZXh0TGlzdGVuZXJzIiwiaXNEaXNwYXRjaGluZyIsImVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMiLCJzbGljZSIsImdldFN0YXRlIiwic3Vic2NyaWJlIiwibGlzdGVuZXIiLCJpc1N1YnNjcmliZWQiLCJpbmRleCIsInNwbGljZSIsImRpc3BhdGNoIiwiYWN0aW9uIiwibGlzdGVuZXJzIiwicmVwbGFjZVJlZHVjZXIiLCJuZXh0UmVkdWNlciIsIm9ic2VydmFibGUiLCJvdXRlclN1YnNjcmliZSIsIm9ic2VydmVyIiwib2JzZXJ2ZVN0YXRlIiwibmV4dCIsInVuc3Vic2NyaWJlIiwiZ2V0VW5kZWZpbmVkU3RhdGVFcnJvck1lc3NhZ2UiLCJhY3Rpb25UeXBlIiwiU3RyaW5nIiwiY29tYmluZVJlZHVjZXJzIiwicmVkdWNlcnMiLCJyZWR1Y2VyS2V5cyIsImZpbmFsUmVkdWNlcnMiLCJzaGFwZUFzc2VydGlvbkVycm9yIiwiZmluYWxSZWR1Y2VyS2V5cyIsImFzc2VydFJlZHVjZXJTaGFwZSIsInN0YXRlIiwiaGFzQ2hhbmdlZCIsIm5leHRTdGF0ZSIsIl9pIiwiX2tleSIsInByZXZpb3VzU3RhdGVGb3JLZXkiLCJuZXh0U3RhdGVGb3JLZXkiLCJlcnJvck1lc3NhZ2UiLCJiaW5kQWN0aW9uQ3JlYXRvciIsImFjdGlvbkNyZWF0b3IiLCJiaW5kQWN0aW9uQ3JlYXRvcnMiLCJhY3Rpb25DcmVhdG9ycyIsImJvdW5kQWN0aW9uQ3JlYXRvcnMiLCJfZGVmaW5lUHJvcGVydHkiLCJjb21wb3NlIiwiX2xlbiIsImZ1bmNzIiwiYXJnIiwicmVkdWNlIiwiYXBwbHlNaWRkbGV3YXJlIiwibWlkZGxld2FyZXMiLCJzdG9yZSIsIl9kaXNwYXRjaCIsIm1pZGRsZXdhcmVBUEkiLCJjaGFpbiIsIm1pZGRsZXdhcmUiLCJ3ZWJwYWNrQXN5bmNDb250ZXh0IiwicmVxIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsImNvZGUiLCJpZHMiLCJpdGVyIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJmcm9tIiwiX19pbXBvcnREZWZhdWx0IiwibW9kIiwidGlueWNvbG9yMl8xIiwiZ2V0SHVlIiwiaHN2IiwibGlnaHQiLCJodWUiLCJyb3VuZCIsImdldFNhdHVyYXRpb24iLCJzYXR1cmF0aW9uIiwiZ2V0VmFsdWUiLCJjb2xvciIsInBhdHRlcm5zIiwicENvbG9yIiwidG9Ic3YiLCJjb2xvclN0cmluZyIsInRvSGV4U3RyaW5nIiwiX0xlZnRPdXRsaW5lZCIsIkxlZnRPdXRsaW5lZCIsIndlZWtZZWFyIiwid2VlayIsImNvbnRhaW5lcnMiLCJzdHlsZUVsZW1lbnRzIiwiaW5zZXJ0Q3NzIiwiY3NzIiwic3R5bGVFbGVtZW50IiwicG9zaXRpb24iLCJwcmVwZW5kIiwiY29udGFpbmVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGFpbmVySWQiLCJzZXRBdHRyaWJ1dGUiLCJjcmVhdGVTdHlsZUVsZW1lbnQiLCJpbnNlcnRCZWZvcmUiLCJjaGlsZE5vZGVzIiwiYXBwZW5kQ2hpbGQiLCJjaGFyQ29kZUF0Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJ0ZXh0Q29udGVudCIsIkxUUyIsIkxUIiwiTEwiLCJMTEwiLCJMTExMIiwiZW4iLCJmb3JtYXRzIiwidG9VcHBlckNhc2UiLCJSZWFjdFJlZHV4Q29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJudWxsTGlzdGVuZXJzIiwibm90aWZ5IiwiY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uIiwiYmF0Y2giLCJmaXJzdCIsImxhc3QiLCJjbGVhciIsInByZXYiLCJTdWJzY3JpcHRpb24iLCJwYXJlbnRTdWIiLCJoYW5kbGVDaGFuZ2VXcmFwcGVyIiwiYmluZCIsIl9wcm90byIsImFkZE5lc3RlZFN1YiIsInRyeVN1YnNjcmliZSIsIm5vdGlmeU5lc3RlZFN1YnMiLCJvblN0YXRlQ2hhbmdlIiwiQm9vbGVhbiIsInRyeVVuc3Vic2NyaWJlIiwiY29udGV4dCIsImNvbnRleHRWYWx1ZSIsInN1YnNjcmlwdGlvbiIsInByZXZpb3VzU3RhdGUiLCJDb250ZXh0IiwiUHJvdmlkZXIiLCJfZXh0ZW5kcyIsIm5ld0JhdGNoIiwidG9kYXkiLCJiYWNrVG9Ub2RheSIsIm9rIiwidGltZVNlbGVjdCIsImRhdGVTZWxlY3QiLCJ3ZWVrU2VsZWN0IiwibW9udGhTZWxlY3QiLCJ5ZWFyU2VsZWN0IiwiZGVjYWRlU2VsZWN0IiwieWVhckZvcm1hdCIsImRhdGVGb3JtYXQiLCJkYXlGb3JtYXQiLCJkYXRlVGltZUZvcm1hdCIsIm1vbnRoQmVmb3JlWWVhciIsInByZXZpb3VzTW9udGgiLCJuZXh0TW9udGgiLCJwcmV2aW91c1llYXIiLCJuZXh0WWVhciIsInByZXZpb3VzRGVjYWRlIiwibmV4dERlY2FkZSIsInByZXZpb3VzQ2VudHVyeSIsIm5leHRDZW50dXJ5IiwicGxhY2Vob2xkZXIiLCJyYW5nZVBsYWNlaG9sZGVyIiwibGFuZyIsInllYXJQbGFjZWhvbGRlciIsInF1YXJ0ZXJQbGFjZWhvbGRlciIsIm1vbnRoUGxhY2Vob2xkZXIiLCJ3ZWVrUGxhY2Vob2xkZXIiLCJyYW5nZVllYXJQbGFjZWhvbGRlciIsInJhbmdlTW9udGhQbGFjZWhvbGRlciIsInJhbmdlV2Vla1BsYWNlaG9sZGVyIiwidGltZVBpY2tlckxvY2FsZSIsInR5cGVUZW1wbGF0ZSIsIlBhZ2luYXRpb24iLCJpdGVtc19wZXJfcGFnZSIsImp1bXBfdG8iLCJqdW1wX3RvX2NvbmZpcm0iLCJwYWdlIiwicHJldl9wYWdlIiwibmV4dF9wYWdlIiwicHJldl81IiwibmV4dF81IiwicHJldl8zIiwibmV4dF8zIiwiRGF0ZVBpY2tlciIsIlRpbWVQaWNrZXIiLCJDYWxlbmRhciIsImdsb2JhbCIsIlRhYmxlIiwiZmlsdGVyVGl0bGUiLCJmaWx0ZXJDb25maXJtIiwiZmlsdGVyUmVzZXQiLCJmaWx0ZXJFbXB0eVRleHQiLCJlbXB0eVRleHQiLCJzZWxlY3RBbGwiLCJzZWxlY3RJbnZlcnQiLCJzZWxlY3Rpb25BbGwiLCJzb3J0VGl0bGUiLCJleHBhbmQiLCJjb2xsYXBzZSIsInRyaWdnZXJEZXNjIiwidHJpZ2dlckFzYyIsImNhbmNlbFNvcnQiLCJNb2RhbCIsIm9rVGV4dCIsImNhbmNlbFRleHQiLCJqdXN0T2tUZXh0IiwiUG9wY29uZmlybSIsIlRyYW5zZmVyIiwidGl0bGVzIiwic2VhcmNoUGxhY2Vob2xkZXIiLCJpdGVtVW5pdCIsIml0ZW1zVW5pdCIsInJlbW92ZSIsInNlbGVjdEN1cnJlbnQiLCJyZW1vdmVDdXJyZW50IiwicmVtb3ZlQWxsIiwiVXBsb2FkIiwidXBsb2FkaW5nIiwicmVtb3ZlRmlsZSIsInVwbG9hZEVycm9yIiwicHJldmlld0ZpbGUiLCJkb3dubG9hZEZpbGUiLCJFbXB0eSIsImRlc2NyaXB0aW9uIiwiSWNvbiIsIlRleHQiLCJlZGl0IiwiY29weSIsImNvcGllZCIsIlBhZ2VIZWFkZXIiLCJiYWNrIiwiRm9ybSIsIm9wdGlvbmFsIiwiZGVmYXVsdFZhbGlkYXRlTWVzc2FnZXMiLCJyZXF1aXJlZCIsIndoaXRlc3BhY2UiLCJpbnZhbGlkIiwidHlwZXMiLCJtZXRob2QiLCJpbnRlZ2VyIiwicmVnZXhwIiwiZW1haWwiLCJ1cmwiLCJoZXgiLCJsZW4iLCJtaW4iLCJtYXgiLCJyYW5nZSIsInBhdHRlcm4iLCJtaXNtYXRjaCIsIl9SZWFjdCRDb21wb25lbnQiLCJMb2NhbGVSZWNlaXZlciIsIl9zdXBlciIsIl90aGlzJHByb3BzIiwiZGVmYXVsdExvY2FsZSIsImFudExvY2FsZSIsImxvY2FsZUZyb21Db250ZXh0IiwibG9jYWxlQ29kZSIsImV4aXN0IiwiZ2V0TG9jYWxlIiwiZ2V0TG9jYWxlQ29kZSIsInByZWZpeENscyIsImdldFByZWZpeENscyIsIkNvbmZpZ0NvbnRleHQiLCJ2aWV3Qm94IiwieG1sbnMiLCJmaWxsUnVsZSIsInRyYW5zZm9ybSIsImN4IiwiY3kiLCJyeCIsInJ5IiwiX19yZXN0IiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJkZWZhdWx0RW1wdHlJbWciLCJzaW1wbGVFbXB0eUltZyIsIkNvbmZpZ0NvbnN1bWVyIiwiZGlyZWN0aW9uIiwiY3VzdG9taXplUHJlZml4Q2xzIiwiX3Byb3BzJGltYWdlIiwiaW1hZ2UiLCJpbWFnZVN0eWxlIiwiX2NsYXNzTmFtZXMiLCJkZXMiLCJhbHQiLCJpbWFnZU5vZGUiLCJzcmMiLCJQUkVTRU5URURfSU1BR0VfREVGQVVMVCIsIlBSRVNFTlRFRF9JTUFHRV9TSU1QTEUiLCJwcmVmaXgiLCJzdWZmaXhDbHMiLCJyZW5kZXJFbXB0eSIsIkNvbnN1bWVyIiwiTGF5b3V0Q29udGV4dCIsInNpZGVySG9vayIsImFkZFNpZGVyIiwicmVtb3ZlU2lkZXIiLCJ0YWdOYW1lIiwiQmFzaWNDb21wb25lbnQiLCJfYSIsIkFkYXB0ZXIiLCJfdGhpcyIsInJlbmRlckNvbXBvbmVudCIsIm90aGVycyIsImNsYXNzU3RyaW5nIiwiX1JlYWN0JENvbXBvbmVudDIiLCJCYXNpY0xheW91dCIsIl9zdXBlcjIiLCJfdGhpczIiLCJzaWRlcnMiLCJfcmVmMyIsImhhc1NpZGVyIiwiVGFnIiwiZ2V0U2lkZXJIb29rIiwiX3RoaXMzIiwic2V0U3RhdGUiLCJjdXJyZW50SWQiLCJMYXlvdXQiLCJIZWFkZXIiLCJGb290ZXIiLCJDb250ZW50IiwiZmllbGRzIiwic2hhbGxvd0NvcHkiLCJpc05hTiIsInBhcnNlRmxvYXQiLCJpc0Zpbml0ZSIsImRpbWVuc2lvbk1heE1hcCIsInhzIiwic20iLCJtZCIsImxnIiwieGwiLCJ4eGwiLCJTaWRlckNvbnRleHQiLCJnZW5lcmF0ZUlkIiwiSW50ZXJuYWxTaWRlciIsIm1hdGNoTWVkaWEiLCJjb2xsYXBzZWQiLCJyZXNwb25zaXZlSGFuZGxlciIsIm1xbCIsImJlbG93IiwibWF0Y2hlcyIsIm9uQnJlYWtwb2ludCIsInNldENvbGxhcHNlZCIsIm9uQ29sbGFwc2UiLCJ0b2dnbGUiLCJyZW5kZXJTaWRlciIsInRoZW1lIiwiY29sbGFwc2libGUiLCJyZXZlcnNlQXJyb3ciLCJ0cmlnZ2VyIiwiY29sbGFwc2VkV2lkdGgiLCJ6ZXJvV2lkdGhUcmlnZ2VyU3R5bGUiLCJfdGhpcyRzdGF0ZSIsImRpdlByb3BzIiwicmF3V2lkdGgiLCJzaWRlcldpZHRoIiwiemVyb1dpZHRoVHJpZ2dlciIsImRlZmF1bHRUcmlnZ2VyIiwiZXhwYW5kZWQiLCJ0cmlnZ2VyRG9tIiwiZGl2U3R5bGUiLCJmbGV4IiwibWF4V2lkdGgiLCJtaW5XaWR0aCIsInNpZGVyQ2xzIiwidW5pcXVlSWQiLCJicmVha3BvaW50IiwiZGVmYXVsdENvbGxhcHNlZCIsImFkZExpc3RlbmVyIiwiX2IiLCJyZW1vdmVMaXN0ZW5lciIsInNpZGVyQ29sbGFwc2VkIiwibmV4dFByb3BzIiwiU2lkZXIiLCJpc0Fic29sdXRlIiwicGF0aG5hbWUiLCJjaGFyQXQiLCJzcGxpY2VPbmUiLCJsaXN0IiwidG8iLCJoYXNUcmFpbGluZ1NsYXNoIiwidG9QYXJ0cyIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwidXAiLCJwYXJ0IiwidW5zaGlmdCIsInJlc3VsdCIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJhZGRMZWFkaW5nU2xhc2giLCJwYXRoIiwic3RyaXBMZWFkaW5nU2xhc2giLCJzdHJpcEJhc2VuYW1lIiwidG9Mb3dlckNhc2UiLCJoYXNCYXNlbmFtZSIsInN0cmlwVHJhaWxpbmdTbGFzaCIsImNyZWF0ZVBhdGgiLCJzZWFyY2giLCJoYXNoIiwiY3JlYXRlTG9jYXRpb24iLCJjdXJyZW50TG9jYXRpb24iLCJoYXNoSW5kZXgiLCJzZWFyY2hJbmRleCIsInBhcnNlUGF0aCIsImRlY29kZVVSSSIsIlVSSUVycm9yIiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImdldFVzZXJDb25maXJtYXRpb24iLCJhcHBlbmRMaXN0ZW5lciIsImZuIiwiaXNBY3RpdmUiLCJpdGVtIiwibm90aWZ5TGlzdGVuZXJzIiwiY2FuVXNlRE9NIiwiZ2V0Q29uZmlybWF0aW9uIiwiY29uZmlybSIsIlBvcFN0YXRlRXZlbnQiLCJIYXNoQ2hhbmdlRXZlbnQiLCJnZXRIaXN0b3J5U3RhdGUiLCJoaXN0b3J5IiwiY3JlYXRlQnJvd3Nlckhpc3RvcnkiLCJ1YSIsImdsb2JhbEhpc3RvcnkiLCJjYW5Vc2VIaXN0b3J5IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIiLCJfcHJvcHMiLCJfcHJvcHMkZm9yY2VSZWZyZXNoIiwiZm9yY2VSZWZyZXNoIiwiX3Byb3BzJGdldFVzZXJDb25maXJtIiwiX3Byb3BzJGtleUxlbmd0aCIsImtleUxlbmd0aCIsImJhc2VuYW1lIiwiZ2V0RE9NTG9jYXRpb24iLCJoaXN0b3J5U3RhdGUiLCJfd2luZG93JGxvY2F0aW9uIiwiY3JlYXRlS2V5IiwidHJhbnNpdGlvbk1hbmFnZXIiLCJoYW5kbGVQb3BTdGF0ZSIsImV2ZW50IiwiaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCIsImhhbmRsZVBvcCIsImhhbmRsZUhhc2hDaGFuZ2UiLCJmb3JjZU5leHRQb3AiLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImdvIiwicmV2ZXJ0UG9wIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaXNCbG9ja2VkIiwiaHJlZiIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZVN0YXRlIiwiZ29CYWNrIiwiZ29Gb3J3YXJkIiwiYmxvY2siLCJ1bmJsb2NrIiwibGlzdGVuIiwidW5saXN0ZW4iLCJIYXNoQ2hhbmdlRXZlbnQkMSIsIkhhc2hQYXRoQ29kZXJzIiwiaGFzaGJhbmciLCJlbmNvZGVQYXRoIiwiZGVjb2RlUGF0aCIsIm5vc2xhc2giLCJzbGFzaCIsInN0cmlwSGFzaCIsImdldEhhc2hQYXRoIiwicmVwbGFjZUhhc2hQYXRoIiwiY3JlYXRlSGFzaEhpc3RvcnkiLCJfcHJvcHMkaGFzaFR5cGUiLCJoYXNoVHlwZSIsIl9IYXNoUGF0aENvZGVycyRoYXNoVCIsImlnbm9yZVBhdGgiLCJlbmNvZGVkUGF0aCIsInByZXZMb2NhdGlvbiIsImFsbFBhdGhzIiwibGFzdEluZGV4T2YiLCJiYXNlVGFnIiwiZ2V0QXR0cmlidXRlIiwicHVzaEhhc2hQYXRoIiwibmV4dFBhdGhzIiwiY2xhbXAiLCJsb3dlckJvdW5kIiwidXBwZXJCb3VuZCIsImNyZWF0ZU1lbW9yeUhpc3RvcnkiLCJfcHJvcHMkaW5pdGlhbEVudHJpZXMiLCJpbml0aWFsRW50cmllcyIsIl9wcm9wcyRpbml0aWFsSW5kZXgiLCJpbml0aWFsSW5kZXgiLCJlbnRyaWVzIiwiZW50cnkiLCJuZXh0SW5kZXgiLCJuZXh0RW50cmllcyIsImNhbkdvIiwiaGlzdG9yeUNvbnRleHQiLCJjcmVhdGVOYW1lZENvbnRleHQkMSIsIlJvdXRlciIsIl9pc01vdW50ZWQiLCJfcGVuZGluZ0xvY2F0aW9uIiwic3RhdGljQ29udGV4dCIsImNvbXB1dGVSb290TWF0Y2giLCJwYXJhbXMiLCJpc0V4YWN0IiwiY29tcG9uZW50RGlkTW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIkNvbXBvbmVudCIsImNhY2hlJDEiLCJjYWNoZUNvdW50JDEiLCJtYXRjaFBhdGgiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiX29wdGlvbnMkc3RyaWN0Iiwic3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwic2Vuc2l0aXZlIiwibWF0Y2hlZCIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwiZW5kIiwicGF0aENhY2hlIiwiY29tcGlsZVBhdGgkMSIsInZhbHVlcyIsIm1lbW8iLCJiYXNlIiwiY3JlYXRlVVJMIiwic3RhdGljSGFuZGxlciIsIm1ldGhvZE5hbWUiLCJub29wIiwidXNlQ29udGV4dCIsIkJyb3dzZXJSb3V0ZXIiLCJyZXNvbHZlVG9Mb2NhdGlvbiIsImZvcndhcmRSZWZTaGltIiwiTGlua0FuY2hvciIsImZvcndhcmRlZFJlZiIsImlubmVyUmVmIiwibmF2aWdhdGUiLCJfb25DbGljayIsInJlc3QiLCJleCIsInByZXZlbnREZWZhdWx0IiwiZGVmYXVsdFByZXZlbnRlZCIsImJ1dHRvbiIsIm1ldGFLZXkiLCJhbHRLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJpc01vZGlmaWVkRXZlbnQiLCJMaW5rIiwiX3JlZjIkY29tcG9uZW50IiwiZm9yd2FyZFJlZlNoaW0kMSIsImZvcndhcmRSZWYkMSIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJjb25maWd1cmVTdG9yZSIsImdldEVsZW1lbnRCeUlkIiwiYXJyYXlMaWtlVG9BcnJheSIsImFycmF5V2l0aEhvbGVzIiwiaXRlcmFibGVUb0FycmF5TGltaXQiLCJ1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIm5vbkl0ZXJhYmxlUmVzdCIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJfY2xhc3NuYW1lcyIsIl90d29Ub25lUHJpbWFyeUNvbG9yIiwic3BpbiIsInJvdGF0ZSIsInRhYkluZGV4Iiwic3ZnQ2xhc3NTdHJpbmciLCJpY29uVGFiSW5kZXgiLCJzdmdTdHlsZSIsIm1zVHJhbnNmb3JtIiwicm9sZSIsImFkZCIsInllYXJTdGFydCIsInN0YXJ0T2YiLCJlbmRPZiIsImlzQmVmb3JlIiwic3VidHJhY3QiLCJkaWZmIiwiY2VpbCIsIndlZWtzIiwiaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwicG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIkRlcml2ZWQiLCJoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiU3VwZXIiLCJOZXdUYXJnZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiaXNPbGRJRSIsImFsbCIsImF0b2IiLCJnZXRUYXJnZXQiLCJzdHlsZVRhcmdldCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiY291bnQiLCJtZWRpYSIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwibm9uY2UiLCJpbnNlcnQiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsImNzc05vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsInJlbW92ZUNoaWxkIiwiYXBwbHlUb1RhZyIsInJlbW92ZUF0dHJpYnV0ZSIsImJ0b2EiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJmaXJzdENoaWxkIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInVwZGF0ZSIsInN0eWxlSW5kZXgiLCJwYXJlbnROb2RlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pbmRleCIsInByb3BJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsInRlc3QxIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJ0ZXN0MyIsImxldHRlciIsInNob3VsZFVzZU5hdGl2ZSIsIl9nZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIm9iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJzb3VyY2VTeW1ib2xLZXlzIiwiYXJyYXlXaXRob3V0SG9sZXMiLCJpdGVyYWJsZVRvQXJyYXkiLCJub25JdGVyYWJsZVNwcmVhZCIsImxvY2FsZU1hcCIsImVuX0dCIiwiZW5fVVMiLCJ6aF9DTiIsInpoX1RXIiwib3B0aW9uIiwiZGF5anNDbGFzcyIsImRheWpzRmFjdG9yeSIsIm9sZExvY2FsZSIsImlzTW9tZW50IiwiaXNEYXlqcyIsInN5bWJvbE9ic2VydmFibGVQb255ZmlsbCIsInJvb3QiLCJfc2V0UHJvdG90eXBlT2YiLCJoYXNPd24iLCJjbGFzc05hbWVzIiwiY2xhc3NlcyIsImFyZ1R5cGUiLCJpbm5lciIsIl9kZWZpbmVQcm9wZXJ0aWVzIiwiQ29uc3RydWN0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCIkIiwidXRjT2Zmc2V0IiwiYWJzIiwiY2xvbmUiLCJtcyIsIndlZWtkYXlzIiwibW9udGhzIiwiJG9mZnNldCIsIk5hTiIsInRlc3QiLCIkeSIsIiRNIiwiJEQiLCIkVyIsImdldERheSIsIiRIIiwiZ2V0SG91cnMiLCIkbSIsImdldE1pbnV0ZXMiLCIkcyIsImdldFNlY29uZHMiLCIkbXMiLCJnZXRNaWxsaXNlY29uZHMiLCIkdXRpbHMiLCIkZyIsInVuaXgiLCJ2YWx1ZU9mIiwiZ2V0VGltZSIsInRvRGF0ZSIsIndlZWtTdGFydCIsIiRzZXQiLCJkYXlzSW5Nb250aCIsIk51bWJlciIsIm1lcmlkaWVtIiwibW9udGhzU2hvcnQiLCJkZCIsIndlZWtkYXlzTWluIiwiZGRkIiwid2Vla2RheXNTaG9ydCIsImRkZGQiLCJnZXRUaW1lem9uZU9mZnNldCIsInRvSlNPTiIsInRvSVNPU3RyaW5nIiwidG9VVENTdHJpbmciLCJleHRlbmQiLCJhcnIyIiwibG9jYWxlRGF0YSIsImZpcnN0RGF5T2ZXZWVrIiwibG9uZ0RhdGVGb3JtYXQiLCJnZW5lcmF0ZV8xIiwicHJlc2V0UHJpbWFyeUNvbG9ycyIsInJlZCIsInZvbGNhbm8iLCJvcmFuZ2UiLCJnb2xkIiwieWVsbG93IiwibGltZSIsImdyZWVuIiwiY3lhbiIsImJsdWUiLCJnZWVrYmx1ZSIsInB1cnBsZSIsIm1hZ2VudGEiLCJncmV5IiwicHJlc2V0UGFsZXR0ZXMiLCJwcmltYXJ5IiwibWluTGVuIiwidHJpbUxlZnQiLCJ0cmltUmlnaHQiLCJ0aW55Q291bnRlciIsIm1hdGhSb3VuZCIsIm1hdGhNaW4iLCJtYXRoTWF4IiwibWF0aFJhbmRvbSIsInRpbnljb2xvciIsIm9wdHMiLCJyZ2IiLCJuYW1lZCIsIm5hbWVzIiwibWF0Y2hlcnMiLCJyZ2JhIiwiaHNsIiwiaHNsYSIsImhzdmEiLCJoZXg4IiwicGFyc2VJbnRGcm9tSGV4IiwiY29udmVydEhleFRvRGVjaW1hbCIsImhleDYiLCJoZXg0IiwiaGV4MyIsInN0cmluZ0lucHV0VG9PYmplY3QiLCJpc1ZhbGlkQ1NTVW5pdCIsImJvdW5kMDEiLCJjb252ZXJ0VG9QZXJjZW50YWdlIiwiaHN2VG9SZ2IiLCJodWUycmdiIiwiaHNsVG9SZ2IiLCJib3VuZEFscGhhIiwiaW5wdXRUb1JHQiIsIl9vcmlnaW5hbElucHV0IiwiX3IiLCJfZyIsIl9yb3VuZEEiLCJfZm9ybWF0IiwiX2dyYWRpZW50VHlwZSIsImdyYWRpZW50VHlwZSIsIl9vayIsIl90Y19pZCIsInJnYlRvSHNsIiwicmdiVG9Ic3YiLCJyZ2JUb0hleCIsImFsbG93M0NoYXIiLCJwYWQyIiwicmdiYVRvQXJnYkhleCIsImNvbnZlcnREZWNpbWFsVG9IZXgiLCJkZXNhdHVyYXRlIiwiYW1vdW50IiwidG9Ic2wiLCJjbGFtcDAxIiwic2F0dXJhdGUiLCJncmV5c2NhbGUiLCJsaWdodGVuIiwiYnJpZ2h0ZW4iLCJ0b1JnYiIsImRhcmtlbiIsImNvbXBsZW1lbnQiLCJ0cmlhZCIsInRldHJhZCIsInNwbGl0Y29tcGxlbWVudCIsImFuYWxvZ291cyIsInJlc3VsdHMiLCJzbGljZXMiLCJyZXQiLCJtb25vY2hyb21hdGljIiwibW9kaWZpY2F0aW9uIiwiaXNEYXJrIiwiZ2V0QnJpZ2h0bmVzcyIsImlzTGlnaHQiLCJnZXRPcmlnaW5hbElucHV0IiwiZ2V0Rm9ybWF0IiwiZ2V0QWxwaGEiLCJnZXRMdW1pbmFuY2UiLCJSc1JHQiIsIkdzUkdCIiwiQnNSR0IiLCJwb3ciLCJzZXRBbHBoYSIsInRvSHN2U3RyaW5nIiwidG9Ic2xTdHJpbmciLCJ0b0hleCIsInRvSGV4OCIsImFsbG93NENoYXIiLCJyZ2JhVG9IZXgiLCJ0b0hleDhTdHJpbmciLCJ0b1JnYlN0cmluZyIsInRvUGVyY2VudGFnZVJnYiIsInRvUGVyY2VudGFnZVJnYlN0cmluZyIsInRvTmFtZSIsImhleE5hbWVzIiwidG9GaWx0ZXIiLCJzZWNvbmRDb2xvciIsImhleDhTdHJpbmciLCJzZWNvbmRIZXg4U3RyaW5nIiwiZm9ybWF0U2V0IiwiZm9ybWF0dGVkU3RyaW5nIiwiaGFzQWxwaGEiLCJfYXBwbHlNb2RpZmljYXRpb24iLCJfYXBwbHlDb21iaW5hdGlvbiIsImZyb21SYXRpbyIsIm5ld0NvbG9yIiwiZXF1YWxzIiwiY29sb3IxIiwiY29sb3IyIiwibWl4IiwicmdiMSIsInJnYjIiLCJyZWFkYWJpbGl0eSIsImMxIiwiYzIiLCJpc1JlYWRhYmxlIiwid2NhZzIiLCJ3Y2FnMlBhcm1zIiwib3V0IiwicGFybXMiLCJsZXZlbCIsInNpemUiLCJ2YWxpZGF0ZVdDQUcyUGFybXMiLCJtb3N0UmVhZGFibGUiLCJiYXNlQ29sb3IiLCJjb2xvckxpc3QiLCJpbmNsdWRlRmFsbGJhY2tDb2xvcnMiLCJiZXN0Q29sb3IiLCJiZXN0U2NvcmUiLCJhbGljZWJsdWUiLCJhbnRpcXVld2hpdGUiLCJhcXVhIiwiYXF1YW1hcmluZSIsImF6dXJlIiwiYmVpZ2UiLCJiaXNxdWUiLCJibGFjayIsImJsYW5jaGVkYWxtb25kIiwiYmx1ZXZpb2xldCIsImJyb3duIiwiYnVybHl3b29kIiwiYnVybnRzaWVubmEiLCJjYWRldGJsdWUiLCJjaGFydHJldXNlIiwiY2hvY29sYXRlIiwiY29yYWwiLCJjb3JuZmxvd2VyYmx1ZSIsImNvcm5zaWxrIiwiY3JpbXNvbiIsImRhcmtibHVlIiwiZGFya2N5YW4iLCJkYXJrZ29sZGVucm9kIiwiZGFya2dyYXkiLCJkYXJrZ3JlZW4iLCJkYXJrZ3JleSIsImRhcmtraGFraSIsImRhcmttYWdlbnRhIiwiZGFya29saXZlZ3JlZW4iLCJkYXJrb3JhbmdlIiwiZGFya29yY2hpZCIsImRhcmtyZWQiLCJkYXJrc2FsbW9uIiwiZGFya3NlYWdyZWVuIiwiZGFya3NsYXRlYmx1ZSIsImRhcmtzbGF0ZWdyYXkiLCJkYXJrc2xhdGVncmV5IiwiZGFya3R1cnF1b2lzZSIsImRhcmt2aW9sZXQiLCJkZWVwcGluayIsImRlZXBza3libHVlIiwiZGltZ3JheSIsImRpbWdyZXkiLCJkb2RnZXJibHVlIiwiZmlyZWJyaWNrIiwiZmxvcmFsd2hpdGUiLCJmb3Jlc3RncmVlbiIsImZ1Y2hzaWEiLCJnYWluc2Jvcm8iLCJnaG9zdHdoaXRlIiwiZ29sZGVucm9kIiwiZ3JheSIsImdyZWVueWVsbG93IiwiaG9uZXlkZXciLCJob3RwaW5rIiwiaW5kaWFucmVkIiwiaW5kaWdvIiwiaXZvcnkiLCJraGFraSIsImxhdmVuZGVyIiwibGF2ZW5kZXJibHVzaCIsImxhd25ncmVlbiIsImxlbW9uY2hpZmZvbiIsImxpZ2h0Ymx1ZSIsImxpZ2h0Y29yYWwiLCJsaWdodGN5YW4iLCJsaWdodGdvbGRlbnJvZHllbGxvdyIsImxpZ2h0Z3JheSIsImxpZ2h0Z3JlZW4iLCJsaWdodGdyZXkiLCJsaWdodHBpbmsiLCJsaWdodHNhbG1vbiIsImxpZ2h0c2VhZ3JlZW4iLCJsaWdodHNreWJsdWUiLCJsaWdodHNsYXRlZ3JheSIsImxpZ2h0c2xhdGVncmV5IiwibGlnaHRzdGVlbGJsdWUiLCJsaWdodHllbGxvdyIsImxpbWVncmVlbiIsImxpbmVuIiwibWFyb29uIiwibWVkaXVtYXF1YW1hcmluZSIsIm1lZGl1bWJsdWUiLCJtZWRpdW1vcmNoaWQiLCJtZWRpdW1wdXJwbGUiLCJtZWRpdW1zZWFncmVlbiIsIm1lZGl1bXNsYXRlYmx1ZSIsIm1lZGl1bXNwcmluZ2dyZWVuIiwibWVkaXVtdHVycXVvaXNlIiwibWVkaXVtdmlvbGV0cmVkIiwibWlkbmlnaHRibHVlIiwibWludGNyZWFtIiwibWlzdHlyb3NlIiwibW9jY2FzaW4iLCJuYXZham93aGl0ZSIsIm5hdnkiLCJvbGRsYWNlIiwib2xpdmUiLCJvbGl2ZWRyYWIiLCJvcmFuZ2VyZWQiLCJvcmNoaWQiLCJwYWxlZ29sZGVucm9kIiwicGFsZWdyZWVuIiwicGFsZXR1cnF1b2lzZSIsInBhbGV2aW9sZXRyZWQiLCJwYXBheWF3aGlwIiwicGVhY2hwdWZmIiwicGVydSIsInBpbmsiLCJwbHVtIiwicG93ZGVyYmx1ZSIsInJlYmVjY2FwdXJwbGUiLCJyb3N5YnJvd24iLCJyb3lhbGJsdWUiLCJzYWRkbGVicm93biIsInNhbG1vbiIsInNhbmR5YnJvd24iLCJzZWFncmVlbiIsInNlYXNoZWxsIiwic2llbm5hIiwic2lsdmVyIiwic2t5Ymx1ZSIsInNsYXRlYmx1ZSIsInNsYXRlZ3JheSIsInNsYXRlZ3JleSIsInNub3ciLCJzcHJpbmdncmVlbiIsInN0ZWVsYmx1ZSIsInRhbiIsInRlYWwiLCJ0aGlzdGxlIiwidG9tYXRvIiwidHVycXVvaXNlIiwidmlvbGV0Iiwid2hlYXQiLCJ3aGl0ZSIsIndoaXRlc21va2UiLCJ5ZWxsb3dncmVlbiIsImZsaXBwZWQiLCJmbGlwIiwiaXNPbmVQb2ludFplcm8iLCJwcm9jZXNzUGVyY2VudCIsImlzUGVyY2VudGFnZSIsInBhcnNlSW50IiwiQ1NTX1VOSVQiLCJQRVJNSVNTSVZFX01BVENIMyIsIlBFUk1JU1NJVkVfTUFUQ0g0IiwiUmVnRXhwIiwiYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwic2hhbSIsIlByb3h5Iiwibm90ZSIsInJlc2V0V2FybmVkIiwid2FybmVkIiwid2FybmluZ09uY2UiLCJub3RlT25jZSIsInZhbGlkIiwiX2luaGVyaXRzTG9vc2UiLCJ3ZWVrZGF5IiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJpbnN0YW5jZSIsIl9hcnIiLCJfbiIsIl9kIiwiX2UiLCJfcyIsImRvbmUiLCJmb3IiLCIkJHR5cGVvZiIsIkFzeW5jTW9kZSIsIkNvbmN1cnJlbnRNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRWxlbWVudCIsIkZyYWdtZW50IiwiTGF6eSIsIlBvcnRhbCIsIlByb2ZpbGVyIiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwidHlwZU9mIiwiaXNTYW1lT3JCZWZvcmUiLCJNQVhfU0lHTkVEXzMxX0JJVF9JTlQiLCJjb21tb25qc0dsb2JhbCIsImdsb2JhbFRoaXMiLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJoYW5kbGVycyIsIm9uIiwiaGFuZGxlciIsIm9mZiIsIm5ld1ZhbHVlIiwiY2hhbmdlZEJpdHMiLCJkZWZhdWx0VmFsdWUiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiX0NvbXBvbmVudCIsImVtaXR0ZXIiLCJnZXRDaGlsZENvbnRleHQiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwib2xkVmFsdWUiLCJfQ29tcG9uZW50MiIsIm9uVXBkYXRlIiwib2JzZXJ2ZWRCaXRzIiwiX3Byb3RvMiIsImRheWpzIiwiYWR2YW5jZWRGb3JtYXQiLCJjdXN0b21QYXJzZUZvcm1hdCIsIndlZWtPZlllYXIiLCJsb2NhbGl6ZWRGb3JtYXQiLCJhbnRkUGx1Z2luIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsImNvbXBpbGUiLCJzdHIiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwidG9rZW5zVG9SZWdFeHAiLCJQQVRIX1JFR0VYUCIsInJlcyIsInRva2VucyIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJlc2NhcGVkIiwiY2FwdHVyZSIsImdyb3VwIiwibW9kaWZpZXIiLCJhc3RlcmlzayIsInBhcnRpYWwiLCJyZXBlYXQiLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsImZsYWdzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsInRva2VuIiwic2VnbWVudCIsImoiLCJhdHRhY2hLZXlzIiwicmUiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwiZ3JvdXBzIiwicmVnZXhwVG9SZWdleHAiLCJwYXJ0cyIsImFycmF5VG9SZWdleHAiLCJzdHJpbmdUb1JlZ2V4cCIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJyZWZzIiwiaXNSZWFjdENvbXBvbmVudCIsImZvcmNlVXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJjdXJyZW50IiwiX19zZWxmIiwiX19zb3VyY2UiLCJfb3duZXIiLCJrZXlQcmVmaXgiLCJlc2NhcGUiLCJhYSIsImJhIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwic3VzcGVuc2UiLCJSZWFjdEN1cnJlbnRPd25lciIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwiQ2hpbGRyZW4iLCJ0b0FycmF5Iiwib25seSIsIlB1cmVDb21wb25lbnQiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsImNsb25lRWxlbWVudCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIl9jb250ZXh0IiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJ1c2VDYWxsYmFjayIsInVzZURlYnVnVmFsdWUiLCJ1c2VFZmZlY3QiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsInZlcnNpb24iLCJfd2FybmluZyIsIl90eXBlb2YyIiwibm9ybWFsaXplQXR0cnMiLCJyb290UHJvcHMiLCJfcmVhY3QiLCJ0YWciLCJhdHRycyIsImNoaWxkIiwiX2NvbG9ycyIsImljb25TdHlsZXMiLCJzdmdCYXNlUHJvcHMiLCJfaW5zZXJ0Q3NzIiwiYWNjIiwiY2xhc3MiLCJmb2N1c2FibGUiLCJjc3NJbmplY3RlZEZsYWciLCJzdHlsZVN0ciIsIkZ1bmN0aW9uIiwib25FcnJvciIsImRhIiwiZWEiLCJmYSIsImhhIiwiaWEiLCJqYSIsImxhIiwibWEiLCJuYSIsIm9hIiwiY3VycmVudFRhcmdldCIsImthIiwicGEiLCJxYSIsInJhIiwic2EiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInRhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJyZWdpc3RyYXRpb25OYW1lIiwidmEiLCJ3YSIsImRlcGVuZGVuY2llcyIsInhhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsInN0YXRlTm9kZSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsIk1hIiwiTmEiLCJPYSIsIlBhIiwiUWEiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJVYSIsIlZhIiwieGxpbmtIcmVmIiwiV2EiLCJYYSIsIlNhIiwiVGEiLCJSYSIsInNldEF0dHJpYnV0ZU5TIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsImxiIiwibWIiLCJuYiIsInBiIiwicWIiLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsInJldHVybiIsInJiIiwic2IiLCJub2RlTmFtZSIsInhiIiwiX3ZhbHVlVHJhY2tlciIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwidGIiLCJ5YiIsImNoZWNrZWQiLCJ6YiIsImRlZmF1bHRDaGVja2VkIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiQWIiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiQmIiLCJDYiIsIkRiIiwiRWIiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsIkdiIiwiRmIiLCJIYiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJJYiIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiSmIiLCJLYiIsIkxiIiwiTWIiLCJOYiIsIk9iIiwiUGIiLCJRYiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJSYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwiU2IiLCJUYiIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlViIiwiVmIiLCJXYiIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJNYXAiLCJjYyIsImRjIiwiYWx0ZXJuYXRlIiwiZWZmZWN0VGFnIiwiZWMiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsImZjIiwiaGMiLCJzaWJsaW5nIiwiZ2MiLCJpYyIsImpjIiwia2MiLCJsYyIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIm1jIiwibmMiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJvYyIsInBjIiwicWMiLCJ0b3BMZXZlbFR5cGUiLCJuYXRpdmVFdmVudCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJyYyIsImV2ZW50U3lzdGVtRmxhZ3MiLCJzYyIsImNvbnRhaW5lckluZm8iLCJ0YyIsInVjIiwidmMiLCJ3YyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIktjIiwiYmxvY2tlZE9uIiwiTGMiLCJkZWxldGUiLCJwb2ludGVySWQiLCJNYyIsIk5jIiwiUGMiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJRYyIsIlJjIiwiU2MiLCJUYyIsInNoaWZ0IiwiVWMiLCJWYyIsIldjIiwiWWMiLCJaYyIsIiRjIiwiYWQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJldmVudFByaW9yaXR5IiwiYmQiLCJjZCIsImVkIiwiZmQiLCJnZCIsImhkIiwiT2MiLCJqZCIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJrZCIsImxkIiwidHJpbSIsInNldFByb3BlcnR5IiwibmQiLCJtZW51aXRlbSIsImFyZWEiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsIm9kIiwicGQiLCJpcyIsInFkIiwicmQiLCJzZCIsInRkIiwiYm9keSIsInVkIiwidmQiLCJuZXh0U2libGluZyIsIndkIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsInhkIiwiY29udGVudFdpbmRvdyIsInlkIiwiY29udGVudEVkaXRhYmxlIiwiQmQiLCJDZCIsIkRkIiwiRWQiLCJGZCIsImF1dG9Gb2N1cyIsIkdkIiwiX19odG1sIiwiSGQiLCJJZCIsIkpkIiwiS2QiLCJwcmV2aW91c1NpYmxpbmciLCJMZCIsIk1kIiwiTmQiLCJPZCIsIlBkIiwiUWQiLCJSZCIsIlNkIiwiVGQiLCJkaXNwYXRjaENvbmZpZyIsIlVkIiwiX3RhcmdldEluc3QiLCJWZCIsIldkIiwiWGQiLCJZZCIsIlpkIiwiYWUiLCJiZSIsImNlIiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJlZSIsImV2ZW50UG9vbCIsImZlIiwiZGVzdHJ1Y3RvciIsImRlIiwiZ2V0UG9vbGVkIiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsImlzVHJ1c3RlZCIsImdlIiwiaGUiLCJpZSIsImplIiwia2UiLCJkb2N1bWVudE1vZGUiLCJsZSIsIm1lIiwibmUiLCJvZSIsImJlZm9yZUlucHV0IiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJwZSIsInFlIiwia2V5Q29kZSIsImRldGFpbCIsInNlIiwidmUiLCJ3aGljaCIsInRlIiwiY2hhciIsInVlIiwid2UiLCJkYXRldGltZSIsInBhc3N3b3JkIiwidGVsIiwidGV4dCIsInRpbWUiLCJ4ZSIsInllIiwiY2hhbmdlIiwiemUiLCJBZSIsIkJlIiwiQ2UiLCJEZSIsIkVlIiwiRmUiLCJHZSIsImRldGFjaEV2ZW50IiwiSGUiLCJJZSIsImF0dGFjaEV2ZW50IiwiSmUiLCJLZSIsIkxlIiwiTWUiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiTmUiLCJ2aWV3IiwiT2UiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGUiLCJnZXRNb2RpZmllclN0YXRlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsIlZlIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiV2UiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiWGUiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsIlllIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwic2VsZWN0IiwiZWYiLCJmZiIsImdmIiwiaGYiLCJqZiIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJrZiIsIm9uU2VsZWN0IiwibGYiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwibWYiLCJjbGlwYm9hcmREYXRhIiwibmYiLCJvZiIsImNoYXJDb2RlIiwicGYiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwicWYiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwicmYiLCJzZiIsImRhdGFUcmFuc2ZlciIsInRmIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInVmIiwidmYiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsIndmIiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsInlmIiwiemYiLCJBZiIsIkJmIiwiQ2YiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJEZiIsIkVmIiwiRmYiLCJHZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiSGYiLCJJZiIsIkpmIiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJSZiIsIlNmIiwiVGYiLCJVZiIsIlZmIiwiV2YiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJtZyIsIm5nIiwib2ciLCJwZyIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJxZyIsImZpcnN0Q29udGV4dCIsInJnIiwic2ciLCJyZXNwb25kZXJzIiwidGciLCJ1ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiYmFzZVF1ZXVlIiwic2hhcmVkIiwicGVuZGluZyIsImVmZmVjdHMiLCJ2ZyIsIndnIiwic3VzcGVuc2VDb25maWciLCJwYXlsb2FkIiwieGciLCJ5ZyIsInpnIiwiY2EiLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJKZyIsIl9yZWFjdEludGVybmFsRmliZXIiLCJHZyIsIkhnIiwiSWciLCJLZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIkxnIiwiTWciLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiT2ciLCJQZyIsIl9zdHJpbmdSZWYiLCJRZyIsIlJnIiwibGFzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIlNnIiwiVGciLCJtb2RlIiwiVWciLCJpbXBsZW1lbnRhdGlvbiIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCJhaCIsImJoIiwiY2giLCJkaCIsImRvY3VtZW50RWxlbWVudCIsImVoIiwiZmgiLCJnaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImloIiwicmVzcG9uZGVyIiwiamgiLCJraCIsImxoIiwibWgiLCJuaCIsIm9oIiwicGgiLCJxaCIsInJoIiwic2giLCJ0aCIsInF1ZXVlIiwidWgiLCJ2aCIsIndoIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsInhoIiwieWgiLCJ6aCIsIkFoIiwiZGVzdHJveSIsImRlcHMiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsInJlYWRDb250ZXh0IiwidXNlUmVzcG9uZGVyIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJPaCIsIlBoIiwiUWgiLCJSaCIsIlNoIiwiVGgiLCJwZW5kaW5nUHJvcHMiLCJVaCIsIlZoIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjaSIsImRpIiwiZWkiLCJmaSIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsImdpIiwiaGkiLCJwZW5kaW5nQ29udGV4dCIsIm5pIiwicGkiLCJxaSIsImlpIiwicmV0cnlUaW1lIiwiamkiLCJmYWxsYmFjayIsInVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIiwia2kiLCJsaSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwidGFpbCIsInRhaWxFeHBpcmF0aW9uIiwidGFpbE1vZGUiLCJtaSIsInJpIiwic2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25jbGljayIsImNyZWF0ZUVsZW1lbnROUyIsInRpIiwidWkiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiQWkiLCJzdGFjayIsIkJpIiwiV2Vha1NldCIsIlNldCIsIkNpIiwiRmkiLCJFaSIsIkdpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJIaSIsIklpIiwiSmkiLCJmb2N1cyIsIktpIiwiTGkiLCJEaSIsIk1pIiwiTmkiLCJPaSIsIlBpIiwiUWkiLCJSaSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJTaSIsIlRpIiwiZGlzcGxheSIsIlVpIiwiVmkiLCJXaSIsIlhpIiwiWWkiLCJaaSIsIiRpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJhaiIsImNvbXBvbmVudFN0YWNrIiwiUmoiLCJiaiIsImNqIiwiZGoiLCJmaiIsImdqIiwia2oiLCJsaiIsIm1qIiwibmoiLCJvaiIsInFqIiwicmoiLCJzaiIsInRqIiwidWoiLCJ2aiIsIndqIiwidGltZW91dE1zIiwieGoiLCJ5aiIsInpqIiwibGFzdEV4cGlyZWRUaW1lIiwiQWoiLCJmaXJzdFBlbmRpbmdUaW1lIiwibGFzdFBpbmdlZFRpbWUiLCJuZXh0S25vd25QZW5kaW5nTGV2ZWwiLCJjYWxsYmFja0V4cGlyYXRpb25UaW1lIiwiY2FsbGJhY2tQcmlvcml0eSIsImNhbGxiYWNrTm9kZSIsIkJqIiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJ0aW1lb3V0SGFuZGxlIiwiSmoiLCJidXN5TWluRHVyYXRpb25NcyIsImJ1c3lEZWxheU1zIiwiS2oiLCJNaiIsIk5qIiwicGluZ0NhY2hlIiwiT2oiLCJ1YiIsIlBqIiwiWGMiLCJRaiIsIlNqIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIndiIiwiYWN0aXZlRWxlbWVudERldGFjaGVkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlRqIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJ2YiIsIlVqIiwiVmoiLCJXaiIsImhpZGRlbiIsIm9iIiwiWGoiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJaaiIsInBlbmRpbmdDaGlsZHJlbiIsImFrIiwiYmsiLCJjayIsImRrIiwiZWsiLCJmayIsIkpjIiwiX2ludGVybmFsUm9vdCIsImdrIiwiaWsiLCJoYXNBdHRyaWJ1dGUiLCJoayIsImprIiwia2siLCJ1bm1vdW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJMaiIsImxrIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJZaiIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVQcm9wcyIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJfQmFyc091dGxpbmVkIiwiQmFyc091dGxpbmVkIl0sIm1hcHBpbmdzIjoiO2dGQUFvRUEsRUFBT0MsUUFBdUcsV0FBVyxhQUFhLElBQUlDLEVBQUVDLEVBQUUsd0ZBQXdGQyxFQUFFLE9BQU9DLEVBQUUsUUFBUUMsRUFBRSxtQkFBdUJDLEVBQUUsU0FBU0wsR0FBRyxPQUFPLFNBQVNDLEdBQUdLLEtBQUtOLElBQUlDLElBQUlNLEVBQUUsQ0FBQyxpQkFBaUIsU0FBU1AsR0FBRyxJQUFJQyxFQUFFQyxHQUFHSSxLQUFLRSxPQUFPRixLQUFLRSxLQUFLLEtBQUtDLE9BQWtDLElBQUtQLEVBQUUsSUFBakNELEVBQUVELEVBQUVVLE1B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RUFGTCtLLEVBQVMsR0FDVDBJLEVBQWFqSyxPQUFPb0ksS0FBS2MsR0FHN0IsSUFBSzFTLEVBQUksRUFBR0EsRUFBSXlULEVBQVc5USxPQUFRM0MsSUFDakNzUCxFQUFNbUUsRUFBV3pULEdBQ2J3VCxFQUFTalQsUUFBUStPLElBQVEsSUFDN0J2RSxFQUFPdUUsR0FBT29ELEVBQU9wRCxJQUd2QixPQUFPdkUsRUFaVCxtQyxrQ0NFQSxJQUFJeEIsRUFBeUIsRUFBUSxRQUVqQ21LLEVBQTBCLEVBQVEsUUFFdENsSyxPQUFPQyxlQUFlL0osRUFBUyxhQUFjLENBQzNDZ0ssT0FBTyxJQUVUaEssRUFBUWlLLGFBQVUsRUFFbEIsSUFBSWdLLEVBQVFELEVBQXdCLEVBQVEsU0FFeENtcUUsRUFBZ0J0MEUsRUFBdUIsRUFBUSxTQUUvQ3NLLEVBQVl0SyxFQUF1QixFQUFRLFNBSTNDdTBFLEVBQWUsU0FBc0IxekUsRUFBTzJKLEdBQzlDLE9BQU9KLEVBQU1LLGNBQWNILEVBQVVsSyxRQUFTSCxPQUFPeUssT0FBTyxHQUFJN0osRUFBTyxDQUNyRTJKLElBQUtBLEVBQ0wxSixLQUFNd3pFLEVBQWNsMEUsWUFJeEJtMEUsRUFBYXp5RSxZQUFjLGVBRTNCLElBQUlJLEVBQVdrSSxFQUFNTyxXQUFXNHBFLEdBRWhDcCtFLEVBQVFpSyxRQUFVOEIsSSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIhZnVuY3Rpb24odCxlKXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz1lKCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShlKTp0LmRheWpzX3BsdWdpbl9jdXN0b21QYXJzZUZvcm1hdD1lKCl9KHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgdCxlPS8oXFxbW15bXSpcXF0pfChbLTovLigpXFxzXSspfChBfGF8WVlZWXxZWT98TU0/TT9NP3xEb3xERD98aGg/fEhIP3xtbT98c3M/fFN7MSwzfXx6fFpaPykvZyxuPS9cXGRcXGQvLHI9L1xcZFxcZD8vLG89L1xcZCpbXlxcc1xcZC06LygpXSsvO3ZhciBpPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXt0aGlzW3RdPStlfX0scz1bL1srLV1cXGRcXGQ6P1xcZFxcZC8sZnVuY3Rpb24odCl7dmFyIGUsbjsodGhpcy56b25lfHwodGhpcy56b25lPXt9KSkub2Zmc2V0PShlPXQubWF0Y2goLyhbKy1dfFxcZFxcZCkvZyksMD09PShuPTYwKmVbMV0rICtlWzJdKT8wOlwiK1wiPT09ZVswXT8tbjpuKX1dLGE9ZnVuY3Rpb24oZSl7dmFyIG49dFtlXTtyZXR1cm4gbiYmKG4uaW5kZXhPZj9uOm4ucy5jb25jYXQobi5mKSl9LGg9e0E6Wy9bQVBdTS8sZnVuY3Rpb24odCl7dGhpcy5hZnRlcm5vb249XCJQTVwiPT09dH1dLGE6Wy9bYXBdbS8sZnVuY3Rpb24odCl7dGhpcy5hZnRlcm5vb249XCJwbVwiPT09dH1dLFM6Wy9cXGQvLGZ1bmN0aW9uKHQpe3RoaXMubWlsbGlzZWNvbmRzPTEwMCordH1dLFNTOltuLGZ1bmN0aW9uKHQpe3RoaXMubWlsbGlzZWNvbmRzPTEwKit0fV0sU1NTOlsvXFxkezN9LyxmdW5jdGlvbih0KXt0aGlzLm1pbGxpc2Vjb25kcz0rdH1dLHM6W3IsaShcInNlY29uZHNcIildLHNzOltyLGkoXCJzZWNvbmRzXCIpXSxtOltyLGkoXCJtaW51dGVzXCIpXSxtbTpbcixpKFwibWludXRlc1wiKV0sSDpbcixpKFwiaG91cnNcIildLGg6W3IsaShcImhvdXJzXCIpXSxISDpbcixpKFwiaG91cnNcIildLGhoOltyLGkoXCJob3Vyc1wiKV0sRDpbcixpKFwiZGF5XCIpXSxERDpbbixpKFwiZGF5XCIpXSxEbzpbbyxmdW5jdGlvbihlKXt2YXIgbj10Lm9yZGluYWwscj1lLm1hdGNoKC9cXGQrLyk7aWYodGhpcy5kYXk9clswXSxuKWZvcih2YXIgbz0xO288PTMxO28rPTEpbihvKS5yZXBsYWNlKC9cXFt8XFxdL2csXCJcIik9PT1lJiYodGhpcy5kYXk9byl9XSxNOltyLGkoXCJtb250aFwiKV0sTU06W24saShcIm1vbnRoXCIpXSxNTU06W28sZnVuY3Rpb24odCl7dmFyIGU9YShcIm1vbnRoc1wiKSxuPShhKFwibW9udGhzU2hvcnRcIil8fGUubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LnN1YnN0cigwLDMpfSkpLmluZGV4T2YodCkrMTtpZihuPDEpdGhyb3cgbmV3IEVycm9yO3RoaXMubW9udGg9biUxMnx8bn1dLE1NTU06W28sZnVuY3Rpb24odCl7dmFyIGU9YShcIm1vbnRoc1wiKS5pbmRleE9mKHQpKzE7aWYoZTwxKXRocm93IG5ldyBFcnJvcjt0aGlzLm1vbnRoPWUlMTJ8fGV9XSxZOlsvWystXT9cXGQrLyxpKFwieWVhclwiKV0sWVk6W24sZnVuY3Rpb24odCl7dD0rdCx0aGlzLnllYXI9dCsodD42OD8xOTAwOjJlMyl9XSxZWVlZOlsvXFxkezR9LyxpKFwieWVhclwiKV0sWjpzLFpaOnN9O3ZhciBmPWZ1bmN0aW9uKHQsbixyKXt0cnl7dmFyIG89ZnVuY3Rpb24odCl7Zm9yKHZhciBuPXQubWF0Y2goZSkscj1uLmxlbmd0aCxvPTA7bzxyO28rPTEpe3ZhciBpPW5bb10scz1oW2ldLGE9cyYmc1swXSxmPXMmJnNbMV07bltvXT1mP3tyZWdleDphLHBhcnNlcjpmfTppLnJlcGxhY2UoL15cXFt8XFxdJC9nLFwiXCIpfXJldHVybiBmdW5jdGlvbih0KXtmb3IodmFyIGU9e30sbz0wLGk9MDtvPHI7bys9MSl7dmFyIHM9bltvXTtpZihcInN0cmluZ1wiPT10eXBlb2YgcylpKz1zLmxlbmd0aDtlbHNle3ZhciBhPXMucmVnZXgsaD1zLnBhcnNlcixmPXQuc3Vic3RyKGkpLHU9YS5leGVjKGYpWzBdO2guY2FsbChlLHUpLHQ9dC5yZXBsYWNlKHUsXCJcIil9fXJldHVybiBmdW5jdGlvbih0KXt2YXIgZT10LmFmdGVybm9vbjtpZih2b2lkIDAhPT1lKXt2YXIgbj10LmhvdXJzO2U/bjwxMiYmKHQuaG91cnMrPTEyKToxMj09PW4mJih0LmhvdXJzPTApLGRlbGV0ZSB0LmFmdGVybm9vbn19KGUpLGV9fShuKSh0KSxpPW8ueWVhcixzPW8ubW9udGgsYT1vLmRheSxmPW8uaG91cnMsdT1vLm1pbnV0ZXMsZD1vLnNlY29uZHMsYz1vLm1pbGxpc2Vjb25kcyxsPW8uem9uZSxtPW5ldyBEYXRlLHY9YXx8KGl8fHM/MTptLmdldERhdGUoKSkscD1pfHxtLmdldEZ1bGxZZWFyKCkseT0wO2kmJiFzfHwoeT1zPjA/cy0xOm0uZ2V0TW9udGgoKSk7dmFyIEQ9Znx8MCxNPXV8fDAsZz1kfHwwLFk9Y3x8MDtyZXR1cm4gbD9uZXcgRGF0ZShEYXRlLlVUQyhwLHksdixELE0sZyxZKzYwKmwub2Zmc2V0KjFlMykpOnI/bmV3IERhdGUoRGF0ZS5VVEMocCx5LHYsRCxNLGcsWSkpOm5ldyBEYXRlKHAseSx2LEQsTSxnLFkpfWNhdGNoKHQpe3JldHVybiBuZXcgRGF0ZShcIlwiKX19O3JldHVybiBmdW5jdGlvbihlLG4scil7dmFyIG89bi5wcm90b3R5cGUsaT1vLnBhcnNlO28ucGFyc2U9ZnVuY3Rpb24oZSl7dmFyIG49ZS5kYXRlLG89ZS51dGMscz1lLmFyZ3M7dGhpcy4kdT1vO3ZhciBhPXNbMV07aWYoXCJzdHJpbmdcIj09dHlwZW9mIGEpe3ZhciBoPSEwPT09c1syXSx1PSEwPT09c1szXSxkPWh8fHUsYz1zWzJdO3UmJihjPXNbMl0pLGh8fCh0PWM/ci5Mc1tjXTp0aGlzLiRsb2NhbGUoKSksdGhpcy4kZD1mKG4sYSxvKSx0aGlzLmluaXQoKSxjJiYhMCE9PWMmJih0aGlzLiRMPXRoaXMubG9jYWxlKGMpLiRMKSxkJiZuIT09dGhpcy5mb3JtYXQoYSkmJih0aGlzLiRkPW5ldyBEYXRlKFwiXCIpKX1lbHNlIGlmKGEgaW5zdGFuY2VvZiBBcnJheSlmb3IodmFyIGw9YS5sZW5ndGgsbT0xO208PWw7bSs9MSl7c1sxXT1hW20tMV07dmFyIHY9ci5hcHBseSh0aGlzLHMpO2lmKHYuaXNWYWxpZCgpKXt0aGlzLiRkPXYuJGQsdGhpcy4kTD12LiRMLHRoaXMuaW5pdCgpO2JyZWFrfW09PT1sJiYodGhpcy4kZD1uZXcgRGF0ZShcIlwiKSl9ZWxzZSBpLmNhbGwodGhpcyxlKX19fSk7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTkuMVxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrLGw7XG5pZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgcD1udWxsLHE9bnVsbCx0PWZ1bmN0aW9uKCl7aWYobnVsbCE9PXApdHJ5e3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7cCghMCxhKTtwPW51bGx9Y2F0Y2goYil7dGhyb3cgc2V0VGltZW91dCh0LDApLGI7fX0sdT1EYXRlLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCktdX07Zj1mdW5jdGlvbihhKXtudWxsIT09cD9zZXRUaW1lb3V0KGYsMCxhKToocD1hLHNldFRpbWVvdXQodCwwKSl9O2c9ZnVuY3Rpb24oYSxiKXtxPXNldFRpbWVvdXQoYSxiKX07aD1mdW5jdGlvbigpe2NsZWFyVGltZW91dChxKX07az1mdW5jdGlvbigpe3JldHVybiExfTtsPWV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oKXt9fWVsc2V7dmFyIHc9d2luZG93LnBlcmZvcm1hbmNlLHg9d2luZG93LkRhdGUsXG55PXdpbmRvdy5zZXRUaW1lb3V0LHo9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciBBPXdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpfWlmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiB3JiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5ub3cpZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gdy5ub3coKX07ZWxzZXt2YXIgQj14Lm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCktQn19dmFyIEM9ITEsRD1udWxsLEU9LTEsRj01LEc9MDtrPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PUd9O2w9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWVyYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCB1bnN1cHBvcnRlZFwiKTpGPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgSD1uZXcgTWVzc2FnZUNoYW5uZWwsST1ILnBvcnQyO0gucG9ydDEub25tZXNzYWdlPVxuZnVuY3Rpb24oKXtpZihudWxsIT09RCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtHPWErRjt0cnl7RCghMCxhKT9JLnBvc3RNZXNzYWdlKG51bGwpOihDPSExLEQ9bnVsbCl9Y2F0Y2goYil7dGhyb3cgSS5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBDPSExfTtmPWZ1bmN0aW9uKGEpe0Q9YTtDfHwoQz0hMCxJLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0U9eShmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfTtoPWZ1bmN0aW9uKCl7eihFKTtFPS0xfX1mdW5jdGlvbiBKKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDs7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZih2b2lkIDAhPT1lJiYwPEsoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIEwoYSl7YT1hWzBdO3JldHVybiB2b2lkIDA9PT1hP251bGw6YX1cbmZ1bmN0aW9uIE0oYSl7dmFyIGI9YVswXTtpZih2b2lkIDAhPT1iKXt2YXIgYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoO2Q8ZTspe3ZhciBtPTIqKGQrMSktMSxuPWFbbV0sdj1tKzEscj1hW3ZdO2lmKHZvaWQgMCE9PW4mJjA+SyhuLGMpKXZvaWQgMCE9PXImJjA+SyhyLG4pPyhhW2RdPXIsYVt2XT1jLGQ9dik6KGFbZF09bixhW21dPWMsZD1tKTtlbHNlIGlmKHZvaWQgMCE9PXImJjA+SyhyLGMpKWFbZF09cixhW3ZdPWMsZD12O2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSyhhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH12YXIgTj1bXSxPPVtdLFA9MSxRPW51bGwsUj0zLFM9ITEsVD0hMSxVPSExO1xuZnVuY3Rpb24gVihhKXtmb3IodmFyIGI9TChPKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKU0oTyk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlNKE8pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSihOLGIpO2Vsc2UgYnJlYWs7Yj1MKE8pfX1mdW5jdGlvbiBXKGEpe1U9ITE7VihhKTtpZighVClpZihudWxsIT09TChOKSlUPSEwLGYoWCk7ZWxzZXt2YXIgYj1MKE8pO251bGwhPT1iJiZnKFcsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gWChhLGIpe1Q9ITE7VSYmKFU9ITEsaCgpKTtTPSEwO3ZhciBjPVI7dHJ5e1YoYik7Zm9yKFE9TChOKTtudWxsIT09USYmKCEoUS5leHBpcmF0aW9uVGltZT5iKXx8YSYmIWsoKSk7KXt2YXIgZD1RLmNhbGxiYWNrO2lmKG51bGwhPT1kKXtRLmNhbGxiYWNrPW51bGw7Uj1RLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChRLmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/US5jYWxsYmFjaz1lOlE9PT1MKE4pJiZNKE4pO1YoYil9ZWxzZSBNKE4pO1E9TChOKX1pZihudWxsIT09USl2YXIgbT0hMDtlbHNle3ZhciBuPUwoTyk7bnVsbCE9PW4mJmcoVyxuLnN0YXJ0VGltZS1iKTttPSExfXJldHVybiBtfWZpbmFsbHl7UT1udWxsLFI9YyxTPSExfX1cbmZ1bmN0aW9uIFkoYSl7c3dpdGNoKGEpe2Nhc2UgMTpyZXR1cm4tMTtjYXNlIDI6cmV0dXJuIDI1MDtjYXNlIDU6cmV0dXJuIDEwNzM3NDE4MjM7Y2FzZSA0OnJldHVybiAxRTQ7ZGVmYXVsdDpyZXR1cm4gNUUzfX12YXIgWj1sO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtUfHxTfHwoVD0hMCxmKFgpKX07XG5leHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFJ9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gTChOKX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChSKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1SfXZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7Uj1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9WjtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVI7Uj1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7Uj1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7dmFyIGU9Yy5kZWxheTtlPVwibnVtYmVyXCI9PT10eXBlb2YgZSYmMDxlP2QrZTpkO2M9XCJudW1iZXJcIj09PXR5cGVvZiBjLnRpbWVvdXQ/Yy50aW1lb3V0OlkoYSl9ZWxzZSBjPVkoYSksZT1kO2M9ZStjO2E9e2lkOlArKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6ZSxleHBpcmF0aW9uVGltZTpjLHNvcnRJbmRleDotMX07ZT5kPyhhLnNvcnRJbmRleD1lLEooTyxhKSxudWxsPT09TChOKSYmYT09PUwoTykmJihVP2goKTpVPSEwLGcoVyxlLWQpKSk6KGEuc29ydEluZGV4PWMsSihOLGEpLFR8fFN8fChUPSEwLGYoWCkpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtWKGEpO3ZhciBiPUwoTik7cmV0dXJuIGIhPT1RJiZudWxsIT09USYmbnVsbCE9PWImJm51bGwhPT1iLmNhbGxiYWNrJiZiLnN0YXJ0VGltZTw9YSYmYi5leHBpcmF0aW9uVGltZTxRLmV4cGlyYXRpb25UaW1lfHxrKCl9O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVI7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1I9Y319fTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9vYmplY3RXaXRob3V0UHJvcGVydGllczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzXCIpKTtcblxudmFyIF9vYmplY3RTcHJlYWQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9vYmplY3RTcHJlYWQyXCIpKTtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcblxudmFyIHR3b1RvbmVDb2xvclBhbGV0dGUgPSB7XG4gIHByaW1hcnlDb2xvcjogJyMzMzMnLFxuICBzZWNvbmRhcnlDb2xvcjogJyNFNkU2RTYnLFxuICBjYWxjdWxhdGVkOiBmYWxzZVxufTtcblxuZnVuY3Rpb24gc2V0VHdvVG9uZUNvbG9ycyhfcmVmKSB7XG4gIHZhciBwcmltYXJ5Q29sb3IgPSBfcmVmLnByaW1hcnlDb2xvcixcbiAgICAgIHNlY29uZGFyeUNvbG9yID0gX3JlZi5zZWNvbmRhcnlDb2xvcjtcbiAgdHdvVG9uZUNvbG9yUGFsZXR0ZS5wcmltYXJ5Q29sb3IgPSBwcmltYXJ5Q29sb3I7XG4gIHR3b1RvbmVDb2xvclBhbGV0dGUuc2Vjb25kYXJ5Q29sb3IgPSBzZWNvbmRhcnlDb2xvciB8fCAoMCwgX3V0aWxzLmdldFNlY29uZGFyeUNvbG9yKShwcmltYXJ5Q29sb3IpO1xuICB0d29Ub25lQ29sb3JQYWxldHRlLmNhbGN1bGF0ZWQgPSAhIXNlY29uZGFyeUNvbG9yO1xufVxuXG5mdW5jdGlvbiBnZXRUd29Ub25lQ29sb3JzKCkge1xuICByZXR1cm4gKDAsIF9vYmplY3RTcHJlYWQyLmRlZmF1bHQpKHt9LCB0d29Ub25lQ29sb3JQYWxldHRlKTtcbn1cblxudmFyIEljb25CYXNlID0gZnVuY3Rpb24gSWNvbkJhc2UocHJvcHMpIHtcbiAgdmFyIGljb24gPSBwcm9wcy5pY29uLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgb25DbGljayA9IHByb3BzLm9uQ2xpY2ssXG4gICAgICBzdHlsZSA9IHByb3BzLnN0eWxlLFxuICAgICAgcHJpbWFyeUNvbG9yID0gcHJvcHMucHJpbWFyeUNvbG9yLFxuICAgICAgc2Vjb25kYXJ5Q29sb3IgPSBwcm9wcy5zZWNvbmRhcnlDb2xvcixcbiAgICAgIHJlc3RQcm9wcyA9ICgwLCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMyLmRlZmF1bHQpKHByb3BzLCBbXCJpY29uXCIsIFwiY2xhc3NOYW1lXCIsIFwib25DbGlja1wiLCBcInN0eWxlXCIsIFwicHJpbWFyeUNvbG9yXCIsIFwic2Vjb25kYXJ5Q29sb3JcIl0pO1xuICB2YXIgY29sb3JzID0gdHdvVG9uZUNvbG9yUGFsZXR0ZTtcblxuICBpZiAocHJpbWFyeUNvbG9yKSB7XG4gICAgY29sb3JzID0ge1xuICAgICAgcHJpbWFyeUNvbG9yOiBwcmltYXJ5Q29sb3IsXG4gICAgICBzZWNvbmRhcnlDb2xvcjogc2Vjb25kYXJ5Q29sb3IgfHwgKDAsIF91dGlscy5nZXRTZWNvbmRhcnlDb2xvcikocHJpbWFyeUNvbG9yKVxuICAgIH07XG4gIH1cblxuICAoMCwgX3V0aWxzLnVzZUluc2VydFN0eWxlcykoKTtcbiAgKDAsIF91dGlscy53YXJuaW5nKSgoMCwgX3V0aWxzLmlzSWNvbkRlZmluaXRpb24pKGljb24pLCBcImljb24gc2hvdWxkIGJlIGljb24gZGVmaW5pdG9uLCBidXQgZ290IFwiLmNvbmNhdChpY29uKSk7XG5cbiAgaWYgKCEoMCwgX3V0aWxzLmlzSWNvbkRlZmluaXRpb24pKGljb24pKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB2YXIgdGFyZ2V0ID0gaWNvbjtcblxuICBpZiAodGFyZ2V0ICYmIHR5cGVvZiB0YXJnZXQuaWNvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRhcmdldCA9ICgwLCBfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSgoMCwgX29iamVjdFNwcmVhZDIuZGVmYXVsdCkoe30sIHRhcmdldCksIHt9LCB7XG4gICAgICBpY29uOiB0YXJnZXQuaWNvbihjb2xvcnMucHJpbWFyeUNvbG9yLCBjb2xvcnMuc2Vjb25kYXJ5Q29sb3IpXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gKDAsIF91dGlscy5nZW5lcmF0ZSkodGFyZ2V0Lmljb24sIFwic3ZnLVwiLmNvbmNhdCh0YXJnZXQubmFtZSksICgwLCBfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSh7XG4gICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgb25DbGljazogb25DbGljayxcbiAgICBzdHlsZTogc3R5bGUsXG4gICAgJ2RhdGEtaWNvbic6IHRhcmdldC5uYW1lLFxuICAgIHdpZHRoOiAnMWVtJyxcbiAgICBoZWlnaHQ6ICcxZW0nLFxuICAgIGZpbGw6ICdjdXJyZW50Q29sb3InLFxuICAgICdhcmlhLWhpZGRlbic6ICd0cnVlJ1xuICB9LCByZXN0UHJvcHMpKTtcbn07XG5cbkljb25CYXNlLmRpc3BsYXlOYW1lID0gJ0ljb25SZWFjdCc7XG5JY29uQmFzZS5nZXRUd29Ub25lQ29sb3JzID0gZ2V0VHdvVG9uZUNvbG9ycztcbkljb25CYXNlLnNldFR3b1RvbmVDb2xvcnMgPSBzZXRUd29Ub25lQ29sb3JzO1xudmFyIF9kZWZhdWx0ID0gSWNvbkJhc2U7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLnNldFR3b1RvbmVDb2xvciA9IHNldFR3b1RvbmVDb2xvcjtcbmV4cG9ydHMuZ2V0VHdvVG9uZUNvbG9yID0gZ2V0VHdvVG9uZUNvbG9yO1xuXG52YXIgX3NsaWNlZFRvQXJyYXkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5XCIpKTtcblxudmFyIF9JY29uQmFzZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vSWNvbkJhc2VcIikpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xuXG5mdW5jdGlvbiBzZXRUd29Ub25lQ29sb3IodHdvVG9uZUNvbG9yKSB7XG4gIHZhciBfbm9ybWFsaXplVHdvVG9uZUNvbG8gPSAoMCwgX3V0aWxzLm5vcm1hbGl6ZVR3b1RvbmVDb2xvcnMpKHR3b1RvbmVDb2xvciksXG4gICAgICBfbm9ybWFsaXplVHdvVG9uZUNvbG8yID0gKDAsIF9zbGljZWRUb0FycmF5Mi5kZWZhdWx0KShfbm9ybWFsaXplVHdvVG9uZUNvbG8sIDIpLFxuICAgICAgcHJpbWFyeUNvbG9yID0gX25vcm1hbGl6ZVR3b1RvbmVDb2xvMlswXSxcbiAgICAgIHNlY29uZGFyeUNvbG9yID0gX25vcm1hbGl6ZVR3b1RvbmVDb2xvMlsxXTtcblxuICByZXR1cm4gX0ljb25CYXNlLmRlZmF1bHQuc2V0VHdvVG9uZUNvbG9ycyh7XG4gICAgcHJpbWFyeUNvbG9yOiBwcmltYXJ5Q29sb3IsXG4gICAgc2Vjb25kYXJ5Q29sb3I6IHNlY29uZGFyeUNvbG9yXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBnZXRUd29Ub25lQ29sb3IoKSB7XG4gIHZhciBjb2xvcnMgPSBfSWNvbkJhc2UuZGVmYXVsdC5nZXRUd29Ub25lQ29sb3JzKCk7XG5cbiAgaWYgKCFjb2xvcnMuY2FsY3VsYXRlZCkge1xuICAgIHJldHVybiBjb2xvcnMucHJpbWFyeUNvbG9yO1xuICB9XG5cbiAgcmV0dXJuIFtjb2xvcnMucHJpbWFyeUNvbG9yLCBjb2xvcnMuc2Vjb25kYXJ5Q29sb3JdO1xufSIsInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcyEuLi8uLi8uLi8uLi9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTYtMyEuL2luZGV4Lmxlc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIiFmdW5jdGlvbihlLHQpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPXQoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKHQpOmUuZGF5anNfcGx1Z2luX2lzU2FtZU9yQWZ0ZXI9dCgpfSh0aGlzLGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7dC5wcm90b3R5cGUuaXNTYW1lT3JBZnRlcj1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmlzU2FtZShlLHQpfHx0aGlzLmlzQWZ0ZXIoZSx0KX19fSk7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsInZhciBfdHlwZW9mID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvdHlwZW9mXCIpO1xuXG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKSB7XG4gIGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDtcbiAgdmFyIGNhY2hlID0gbmV3IFdlYWtNYXAoKTtcblxuICBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUgPSBmdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKSB7XG4gICAgcmV0dXJuIGNhY2hlO1xuICB9O1xuXG4gIHJldHVybiBjYWNoZTtcbn1cblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7XG4gIGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG5cbiAgaWYgKG9iaiA9PT0gbnVsbCB8fCBfdHlwZW9mKG9iaikgIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIFwiZGVmYXVsdFwiOiBvYmpcbiAgICB9O1xuICB9XG5cbiAgdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKCk7XG5cbiAgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7XG4gICAgcmV0dXJuIGNhY2hlLmdldChvYmopO1xuICB9XG5cbiAgdmFyIG5ld09iaiA9IHt9O1xuICB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbiAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDtcblxuICAgICAgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV3T2JqW2tleV0gPSBvYmpba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBuZXdPYmpbXCJkZWZhdWx0XCJdID0gb2JqO1xuXG4gIGlmIChjYWNoZSkge1xuICAgIGNhY2hlLnNldChvYmosIG5ld09iaik7XG4gIH1cblxuICByZXR1cm4gbmV3T2JqO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkOyIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXG5cblxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcmlnaW5hbE1vZHVsZSkge1xuXHRpZiAoIW9yaWdpbmFsTW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdHZhciBtb2R1bGUgPSBPYmplY3QuY3JlYXRlKG9yaWdpbmFsTW9kdWxlKTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJleHBvcnRzXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWVcblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiIsInZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoXCIuL2RlZmluZVByb3BlcnR5XCIpO1xuXG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpO1xuXG4gIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7XG4gICAgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkge1xuICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7XG4gICAgfSk7XG4gICAga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpO1xuICB9XG5cbiAgcmV0dXJuIGtleXM7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQyKHRhcmdldCkge1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9O1xuXG4gICAgaWYgKGkgJSAyKSB7XG4gICAgICBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX29iamVjdFNwcmVhZDI7IiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIiwidmFyIHNldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4vc2V0UHJvdG90eXBlT2ZcIik7XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIHNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfaW5oZXJpdHM7IiwiZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2U7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkXCIpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgUmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xuXG52YXIgX1JpZ2h0T3V0bGluZWQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYW50LWRlc2lnbi9pY29ucy1zdmcvbGliL2Fzbi9SaWdodE91dGxpbmVkXCIpKTtcblxudmFyIF9BbnRkSWNvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL2NvbXBvbmVudHMvQW50ZEljb25cIikpO1xuXG4vLyBHRU5FUkFURSBCWSAuL3NjcmlwdHMvZ2VuZXJhdGUudHNcbi8vIERPTiBOT1QgRURJVCBJVCBNQU5VQUxMWVxudmFyIFJpZ2h0T3V0bGluZWQgPSBmdW5jdGlvbiBSaWdodE91dGxpbmVkKHByb3BzLCByZWYpIHtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoX0FudGRJY29uLmRlZmF1bHQsIE9iamVjdC5hc3NpZ24oe30sIHByb3BzLCB7XG4gICAgcmVmOiByZWYsXG4gICAgaWNvbjogX1JpZ2h0T3V0bGluZWQuZGVmYXVsdFxuICB9KSk7XG59O1xuXG5SaWdodE91dGxpbmVkLmRpc3BsYXlOYW1lID0gJ1JpZ2h0T3V0bGluZWQnO1xuXG52YXIgX2RlZmF1bHQgPSBSZWFjdC5mb3J3YXJkUmVmKFJpZ2h0T3V0bGluZWQpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJpbXBvcnQgJCRvYnNlcnZhYmxlIGZyb20gJ3N5bWJvbC1vYnNlcnZhYmxlJztcblxuLyoqXG4gKiBUaGVzZSBhcmUgcHJpdmF0ZSBhY3Rpb24gdHlwZXMgcmVzZXJ2ZWQgYnkgUmVkdXguXG4gKiBGb3IgYW55IHVua25vd24gYWN0aW9ucywgeW91IG11c3QgcmV0dXJuIHRoZSBjdXJyZW50IHN0YXRlLlxuICogSWYgdGhlIGN1cnJlbnQgc3RhdGUgaXMgdW5kZWZpbmVkLCB5b3UgbXVzdCByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUuXG4gKiBEbyBub3QgcmVmZXJlbmNlIHRoZXNlIGFjdGlvbiB0eXBlcyBkaXJlY3RseSBpbiB5b3VyIGNvZGUuXG4gKi9cbnZhciByYW5kb21TdHJpbmcgPSBmdW5jdGlvbiByYW5kb21TdHJpbmcoKSB7XG4gIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNykuc3BsaXQoJycpLmpvaW4oJy4nKTtcbn07XG5cbnZhciBBY3Rpb25UeXBlcyA9IHtcbiAgSU5JVDogXCJAQHJlZHV4L0lOSVRcIiArIHJhbmRvbVN0cmluZygpLFxuICBSRVBMQUNFOiBcIkBAcmVkdXgvUkVQTEFDRVwiICsgcmFuZG9tU3RyaW5nKCksXG4gIFBST0JFX1VOS05PV05fQUNUSU9OOiBmdW5jdGlvbiBQUk9CRV9VTktOT1dOX0FDVElPTigpIHtcbiAgICByZXR1cm4gXCJAQHJlZHV4L1BST0JFX1VOS05PV05fQUNUSU9OXCIgKyByYW5kb21TdHJpbmcoKTtcbiAgfVxufTtcblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gb2JqIFRoZSBvYmplY3QgdG8gaW5zcGVjdC5cbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBhcmd1bWVudCBhcHBlYXJzIHRvIGJlIGEgcGxhaW4gb2JqZWN0LlxuICovXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KG9iaikge1xuICBpZiAodHlwZW9mIG9iaiAhPT0gJ29iamVjdCcgfHwgb2JqID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG4gIHZhciBwcm90byA9IG9iajtcblxuICB3aGlsZSAoT2JqZWN0LmdldFByb3RvdHlwZU9mKHByb3RvKSAhPT0gbnVsbCkge1xuICAgIHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHByb3RvKTtcbiAgfVxuXG4gIHJldHVybiBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqKSA9PT0gcHJvdG87XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIFJlZHV4IHN0b3JlIHRoYXQgaG9sZHMgdGhlIHN0YXRlIHRyZWUuXG4gKiBUaGUgb25seSB3YXkgdG8gY2hhbmdlIHRoZSBkYXRhIGluIHRoZSBzdG9yZSBpcyB0byBjYWxsIGBkaXNwYXRjaCgpYCBvbiBpdC5cbiAqXG4gKiBUaGVyZSBzaG91bGQgb25seSBiZSBhIHNpbmdsZSBzdG9yZSBpbiB5b3VyIGFwcC4gVG8gc3BlY2lmeSBob3cgZGlmZmVyZW50XG4gKiBwYXJ0cyBvZiB0aGUgc3RhdGUgdHJlZSByZXNwb25kIHRvIGFjdGlvbnMsIHlvdSBtYXkgY29tYmluZSBzZXZlcmFsIHJlZHVjZXJzXG4gKiBpbnRvIGEgc2luZ2xlIHJlZHVjZXIgZnVuY3Rpb24gYnkgdXNpbmcgYGNvbWJpbmVSZWR1Y2Vyc2AuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVkdWNlciBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgbmV4dCBzdGF0ZSB0cmVlLCBnaXZlblxuICogdGhlIGN1cnJlbnQgc3RhdGUgdHJlZSBhbmQgdGhlIGFjdGlvbiB0byBoYW5kbGUuXG4gKlxuICogQHBhcmFtIHthbnl9IFtwcmVsb2FkZWRTdGF0ZV0gVGhlIGluaXRpYWwgc3RhdGUuIFlvdSBtYXkgb3B0aW9uYWxseSBzcGVjaWZ5IGl0XG4gKiB0byBoeWRyYXRlIHRoZSBzdGF0ZSBmcm9tIHRoZSBzZXJ2ZXIgaW4gdW5pdmVyc2FsIGFwcHMsIG9yIHRvIHJlc3RvcmUgYVxuICogcHJldmlvdXNseSBzZXJpYWxpemVkIHVzZXIgc2Vzc2lvbi5cbiAqIElmIHlvdSB1c2UgYGNvbWJpbmVSZWR1Y2Vyc2AgdG8gcHJvZHVjZSB0aGUgcm9vdCByZWR1Y2VyIGZ1bmN0aW9uLCB0aGlzIG11c3QgYmVcbiAqIGFuIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlIGFzIGBjb21iaW5lUmVkdWNlcnNgIGtleXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2VuaGFuY2VyXSBUaGUgc3RvcmUgZW5oYW5jZXIuIFlvdSBtYXkgb3B0aW9uYWxseSBzcGVjaWZ5IGl0XG4gKiB0byBlbmhhbmNlIHRoZSBzdG9yZSB3aXRoIHRoaXJkLXBhcnR5IGNhcGFiaWxpdGllcyBzdWNoIGFzIG1pZGRsZXdhcmUsXG4gKiB0aW1lIHRyYXZlbCwgcGVyc2lzdGVuY2UsIGV0Yy4gVGhlIG9ubHkgc3RvcmUgZW5oYW5jZXIgdGhhdCBzaGlwcyB3aXRoIFJlZHV4XG4gKiBpcyBgYXBwbHlNaWRkbGV3YXJlKClgLlxuICpcbiAqIEByZXR1cm5zIHtTdG9yZX0gQSBSZWR1eCBzdG9yZSB0aGF0IGxldHMgeW91IHJlYWQgdGhlIHN0YXRlLCBkaXNwYXRjaCBhY3Rpb25zXG4gKiBhbmQgc3Vic2NyaWJlIHRvIGNoYW5nZXMuXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlU3RvcmUocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUsIGVuaGFuY2VyKSB7XG4gIHZhciBfcmVmMjtcblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgZW5oYW5jZXIgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGFyZ3VtZW50c1szXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcignSXQgbG9va3MgbGlrZSB5b3UgYXJlIHBhc3Npbmcgc2V2ZXJhbCBzdG9yZSBlbmhhbmNlcnMgdG8gJyArICdjcmVhdGVTdG9yZSgpLiBUaGlzIGlzIG5vdCBzdXBwb3J0ZWQuIEluc3RlYWQsIGNvbXBvc2UgdGhlbSAnICsgJ3RvZ2V0aGVyIHRvIGEgc2luZ2xlIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBwcmVsb2FkZWRTdGF0ZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZW5oYW5jZXIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgZW5oYW5jZXIgPSBwcmVsb2FkZWRTdGF0ZTtcbiAgICBwcmVsb2FkZWRTdGF0ZSA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgZW5oYW5jZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgaWYgKHR5cGVvZiBlbmhhbmNlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0aGUgZW5oYW5jZXIgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZW5oYW5jZXIoY3JlYXRlU3RvcmUpKHJlZHVjZXIsIHByZWxvYWRlZFN0YXRlKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgcmVkdWNlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIHJlZHVjZXIgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIHZhciBjdXJyZW50UmVkdWNlciA9IHJlZHVjZXI7XG4gIHZhciBjdXJyZW50U3RhdGUgPSBwcmVsb2FkZWRTdGF0ZTtcbiAgdmFyIGN1cnJlbnRMaXN0ZW5lcnMgPSBbXTtcbiAgdmFyIG5leHRMaXN0ZW5lcnMgPSBjdXJyZW50TGlzdGVuZXJzO1xuICB2YXIgaXNEaXNwYXRjaGluZyA9IGZhbHNlO1xuICAvKipcbiAgICogVGhpcyBtYWtlcyBhIHNoYWxsb3cgY29weSBvZiBjdXJyZW50TGlzdGVuZXJzIHNvIHdlIGNhbiB1c2VcbiAgICogbmV4dExpc3RlbmVycyBhcyBhIHRlbXBvcmFyeSBsaXN0IHdoaWxlIGRpc3BhdGNoaW5nLlxuICAgKlxuICAgKiBUaGlzIHByZXZlbnRzIGFueSBidWdzIGFyb3VuZCBjb25zdW1lcnMgY2FsbGluZ1xuICAgKiBzdWJzY3JpYmUvdW5zdWJzY3JpYmUgaW4gdGhlIG1pZGRsZSBvZiBhIGRpc3BhdGNoLlxuICAgKi9cblxuICBmdW5jdGlvbiBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCkge1xuICAgIGlmIChuZXh0TGlzdGVuZXJzID09PSBjdXJyZW50TGlzdGVuZXJzKSB7XG4gICAgICBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycy5zbGljZSgpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogUmVhZHMgdGhlIHN0YXRlIHRyZWUgbWFuYWdlZCBieSB0aGUgc3RvcmUuXG4gICAqXG4gICAqIEByZXR1cm5zIHthbnl9IFRoZSBjdXJyZW50IHN0YXRlIHRyZWUgb2YgeW91ciBhcHBsaWNhdGlvbi5cbiAgICovXG5cblxuICBmdW5jdGlvbiBnZXRTdGF0ZSgpIHtcbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgbWF5IG5vdCBjYWxsIHN0b3JlLmdldFN0YXRlKCkgd2hpbGUgdGhlIHJlZHVjZXIgaXMgZXhlY3V0aW5nLiAnICsgJ1RoZSByZWR1Y2VyIGhhcyBhbHJlYWR5IHJlY2VpdmVkIHRoZSBzdGF0ZSBhcyBhbiBhcmd1bWVudC4gJyArICdQYXNzIGl0IGRvd24gZnJvbSB0aGUgdG9wIHJlZHVjZXIgaW5zdGVhZCBvZiByZWFkaW5nIGl0IGZyb20gdGhlIHN0b3JlLicpO1xuICAgIH1cblxuICAgIHJldHVybiBjdXJyZW50U3RhdGU7XG4gIH1cbiAgLyoqXG4gICAqIEFkZHMgYSBjaGFuZ2UgbGlzdGVuZXIuIEl0IHdpbGwgYmUgY2FsbGVkIGFueSB0aW1lIGFuIGFjdGlvbiBpcyBkaXNwYXRjaGVkLFxuICAgKiBhbmQgc29tZSBwYXJ0IG9mIHRoZSBzdGF0ZSB0cmVlIG1heSBwb3RlbnRpYWxseSBoYXZlIGNoYW5nZWQuIFlvdSBtYXkgdGhlblxuICAgKiBjYWxsIGBnZXRTdGF0ZSgpYCB0byByZWFkIHRoZSBjdXJyZW50IHN0YXRlIHRyZWUgaW5zaWRlIHRoZSBjYWxsYmFjay5cbiAgICpcbiAgICogWW91IG1heSBjYWxsIGBkaXNwYXRjaCgpYCBmcm9tIGEgY2hhbmdlIGxpc3RlbmVyLCB3aXRoIHRoZSBmb2xsb3dpbmdcbiAgICogY2F2ZWF0czpcbiAgICpcbiAgICogMS4gVGhlIHN1YnNjcmlwdGlvbnMgYXJlIHNuYXBzaG90dGVkIGp1c3QgYmVmb3JlIGV2ZXJ5IGBkaXNwYXRjaCgpYCBjYWxsLlxuICAgKiBJZiB5b3Ugc3Vic2NyaWJlIG9yIHVuc3Vic2NyaWJlIHdoaWxlIHRoZSBsaXN0ZW5lcnMgYXJlIGJlaW5nIGludm9rZWQsIHRoaXNcbiAgICogd2lsbCBub3QgaGF2ZSBhbnkgZWZmZWN0IG9uIHRoZSBgZGlzcGF0Y2goKWAgdGhhdCBpcyBjdXJyZW50bHkgaW4gcHJvZ3Jlc3MuXG4gICAqIEhvd2V2ZXIsIHRoZSBuZXh0IGBkaXNwYXRjaCgpYCBjYWxsLCB3aGV0aGVyIG5lc3RlZCBvciBub3QsIHdpbGwgdXNlIGEgbW9yZVxuICAgKiByZWNlbnQgc25hcHNob3Qgb2YgdGhlIHN1YnNjcmlwdGlvbiBsaXN0LlxuICAgKlxuICAgKiAyLiBUaGUgbGlzdGVuZXIgc2hvdWxkIG5vdCBleHBlY3QgdG8gc2VlIGFsbCBzdGF0ZSBjaGFuZ2VzLCBhcyB0aGUgc3RhdGVcbiAgICogbWlnaHQgaGF2ZSBiZWVuIHVwZGF0ZWQgbXVsdGlwbGUgdGltZXMgZHVyaW5nIGEgbmVzdGVkIGBkaXNwYXRjaCgpYCBiZWZvcmVcbiAgICogdGhlIGxpc3RlbmVyIGlzIGNhbGxlZC4gSXQgaXMsIGhvd2V2ZXIsIGd1YXJhbnRlZWQgdGhhdCBhbGwgc3Vic2NyaWJlcnNcbiAgICogcmVnaXN0ZXJlZCBiZWZvcmUgdGhlIGBkaXNwYXRjaCgpYCBzdGFydGVkIHdpbGwgYmUgY2FsbGVkIHdpdGggdGhlIGxhdGVzdFxuICAgKiBzdGF0ZSBieSB0aGUgdGltZSBpdCBleGl0cy5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbGlzdGVuZXIgQSBjYWxsYmFjayB0byBiZSBpbnZva2VkIG9uIGV2ZXJ5IGRpc3BhdGNoLlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgZnVuY3Rpb24gdG8gcmVtb3ZlIHRoaXMgY2hhbmdlIGxpc3RlbmVyLlxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgIGlmICh0eXBlb2YgbGlzdGVuZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIGxpc3RlbmVyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG1heSBub3QgY2FsbCBzdG9yZS5zdWJzY3JpYmUoKSB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnSWYgeW91IHdvdWxkIGxpa2UgdG8gYmUgbm90aWZpZWQgYWZ0ZXIgdGhlIHN0b3JlIGhhcyBiZWVuIHVwZGF0ZWQsIHN1YnNjcmliZSBmcm9tIGEgJyArICdjb21wb25lbnQgYW5kIGludm9rZSBzdG9yZS5nZXRTdGF0ZSgpIGluIHRoZSBjYWxsYmFjayB0byBhY2Nlc3MgdGhlIGxhdGVzdCBzdGF0ZS4gJyArICdTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvYXBpLXJlZmVyZW5jZS9zdG9yZSNzdWJzY3JpYmVsaXN0ZW5lciBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgIH1cblxuICAgIHZhciBpc1N1YnNjcmliZWQgPSB0cnVlO1xuICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICBuZXh0TGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIHJldHVybiBmdW5jdGlvbiB1bnN1YnNjcmliZSgpIHtcbiAgICAgIGlmICghaXNTdWJzY3JpYmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgbWF5IG5vdCB1bnN1YnNjcmliZSBmcm9tIGEgc3RvcmUgbGlzdGVuZXIgd2hpbGUgdGhlIHJlZHVjZXIgaXMgZXhlY3V0aW5nLiAnICsgJ1NlZSBodHRwczovL3JlZHV4LmpzLm9yZy9hcGktcmVmZXJlbmNlL3N0b3JlI3N1YnNjcmliZWxpc3RlbmVyIGZvciBtb3JlIGRldGFpbHMuJyk7XG4gICAgICB9XG5cbiAgICAgIGlzU3Vic2NyaWJlZCA9IGZhbHNlO1xuICAgICAgZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycygpO1xuICAgICAgdmFyIGluZGV4ID0gbmV4dExpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKTtcbiAgICAgIG5leHRMaXN0ZW5lcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIGN1cnJlbnRMaXN0ZW5lcnMgPSBudWxsO1xuICAgIH07XG4gIH1cbiAgLyoqXG4gICAqIERpc3BhdGNoZXMgYW4gYWN0aW9uLiBJdCBpcyB0aGUgb25seSB3YXkgdG8gdHJpZ2dlciBhIHN0YXRlIGNoYW5nZS5cbiAgICpcbiAgICogVGhlIGByZWR1Y2VyYCBmdW5jdGlvbiwgdXNlZCB0byBjcmVhdGUgdGhlIHN0b3JlLCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZVxuICAgKiBjdXJyZW50IHN0YXRlIHRyZWUgYW5kIHRoZSBnaXZlbiBgYWN0aW9uYC4gSXRzIHJldHVybiB2YWx1ZSB3aWxsXG4gICAqIGJlIGNvbnNpZGVyZWQgdGhlICoqbmV4dCoqIHN0YXRlIG9mIHRoZSB0cmVlLCBhbmQgdGhlIGNoYW5nZSBsaXN0ZW5lcnNcbiAgICogd2lsbCBiZSBub3RpZmllZC5cbiAgICpcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb25seSBzdXBwb3J0cyBwbGFpbiBvYmplY3QgYWN0aW9ucy4gSWYgeW91IHdhbnQgdG9cbiAgICogZGlzcGF0Y2ggYSBQcm9taXNlLCBhbiBPYnNlcnZhYmxlLCBhIHRodW5rLCBvciBzb21ldGhpbmcgZWxzZSwgeW91IG5lZWQgdG9cbiAgICogd3JhcCB5b3VyIHN0b3JlIGNyZWF0aW5nIGZ1bmN0aW9uIGludG8gdGhlIGNvcnJlc3BvbmRpbmcgbWlkZGxld2FyZS4gRm9yXG4gICAqIGV4YW1wbGUsIHNlZSB0aGUgZG9jdW1lbnRhdGlvbiBmb3IgdGhlIGByZWR1eC10aHVua2AgcGFja2FnZS4gRXZlbiB0aGVcbiAgICogbWlkZGxld2FyZSB3aWxsIGV2ZW50dWFsbHkgZGlzcGF0Y2ggcGxhaW4gb2JqZWN0IGFjdGlvbnMgdXNpbmcgdGhpcyBtZXRob2QuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBhY3Rpb24gQSBwbGFpbiBvYmplY3QgcmVwcmVzZW50aW5nIOKAnHdoYXQgY2hhbmdlZOKAnS4gSXQgaXNcbiAgICogYSBnb29kIGlkZWEgdG8ga2VlcCBhY3Rpb25zIHNlcmlhbGl6YWJsZSBzbyB5b3UgY2FuIHJlY29yZCBhbmQgcmVwbGF5IHVzZXJcbiAgICogc2Vzc2lvbnMsIG9yIHVzZSB0aGUgdGltZSB0cmF2ZWxsaW5nIGByZWR1eC1kZXZ0b29sc2AuIEFuIGFjdGlvbiBtdXN0IGhhdmVcbiAgICogYSBgdHlwZWAgcHJvcGVydHkgd2hpY2ggbWF5IG5vdCBiZSBgdW5kZWZpbmVkYC4gSXQgaXMgYSBnb29kIGlkZWEgdG8gdXNlXG4gICAqIHN0cmluZyBjb25zdGFudHMgZm9yIGFjdGlvbiB0eXBlcy5cbiAgICpcbiAgICogQHJldHVybnMge09iamVjdH0gRm9yIGNvbnZlbmllbmNlLCB0aGUgc2FtZSBhY3Rpb24gb2JqZWN0IHlvdSBkaXNwYXRjaGVkLlxuICAgKlxuICAgKiBOb3RlIHRoYXQsIGlmIHlvdSB1c2UgYSBjdXN0b20gbWlkZGxld2FyZSwgaXQgbWF5IHdyYXAgYGRpc3BhdGNoKClgIHRvXG4gICAqIHJldHVybiBzb21ldGhpbmcgZWxzZSAoZm9yIGV4YW1wbGUsIGEgUHJvbWlzZSB5b3UgY2FuIGF3YWl0KS5cbiAgICovXG5cblxuICBmdW5jdGlvbiBkaXNwYXRjaChhY3Rpb24pIHtcbiAgICBpZiAoIWlzUGxhaW5PYmplY3QoYWN0aW9uKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdBY3Rpb25zIG11c3QgYmUgcGxhaW4gb2JqZWN0cy4gJyArICdVc2UgY3VzdG9tIG1pZGRsZXdhcmUgZm9yIGFzeW5jIGFjdGlvbnMuJyk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBhY3Rpb24udHlwZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQWN0aW9ucyBtYXkgbm90IGhhdmUgYW4gdW5kZWZpbmVkIFwidHlwZVwiIHByb3BlcnR5LiAnICsgJ0hhdmUgeW91IG1pc3NwZWxsZWQgYSBjb25zdGFudD8nKTtcbiAgICB9XG5cbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdSZWR1Y2VycyBtYXkgbm90IGRpc3BhdGNoIGFjdGlvbnMuJyk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSB0cnVlO1xuICAgICAgY3VycmVudFN0YXRlID0gY3VycmVudFJlZHVjZXIoY3VycmVudFN0YXRlLCBhY3Rpb24pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpc0Rpc3BhdGNoaW5nID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIGxpc3RlbmVycyA9IGN1cnJlbnRMaXN0ZW5lcnMgPSBuZXh0TGlzdGVuZXJzO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBsaXN0ZW5lciA9IGxpc3RlbmVyc1tpXTtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjdGlvbjtcbiAgfVxuICAvKipcbiAgICogUmVwbGFjZXMgdGhlIHJlZHVjZXIgY3VycmVudGx5IHVzZWQgYnkgdGhlIHN0b3JlIHRvIGNhbGN1bGF0ZSB0aGUgc3RhdGUuXG4gICAqXG4gICAqIFlvdSBtaWdodCBuZWVkIHRoaXMgaWYgeW91ciBhcHAgaW1wbGVtZW50cyBjb2RlIHNwbGl0dGluZyBhbmQgeW91IHdhbnQgdG9cbiAgICogbG9hZCBzb21lIG9mIHRoZSByZWR1Y2VycyBkeW5hbWljYWxseS4gWW91IG1pZ2h0IGFsc28gbmVlZCB0aGlzIGlmIHlvdVxuICAgKiBpbXBsZW1lbnQgYSBob3QgcmVsb2FkaW5nIG1lY2hhbmlzbSBmb3IgUmVkdXguXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IG5leHRSZWR1Y2VyIFRoZSByZWR1Y2VyIGZvciB0aGUgc3RvcmUgdG8gdXNlIGluc3RlYWQuXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIHJlcGxhY2VSZWR1Y2VyKG5leHRSZWR1Y2VyKSB7XG4gICAgaWYgKHR5cGVvZiBuZXh0UmVkdWNlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0aGUgbmV4dFJlZHVjZXIgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICBjdXJyZW50UmVkdWNlciA9IG5leHRSZWR1Y2VyOyAvLyBUaGlzIGFjdGlvbiBoYXMgYSBzaW1pbGlhciBlZmZlY3QgdG8gQWN0aW9uVHlwZXMuSU5JVC5cbiAgICAvLyBBbnkgcmVkdWNlcnMgdGhhdCBleGlzdGVkIGluIGJvdGggdGhlIG5ldyBhbmQgb2xkIHJvb3RSZWR1Y2VyXG4gICAgLy8gd2lsbCByZWNlaXZlIHRoZSBwcmV2aW91cyBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgICAvLyB0aGUgbmV3IHN0YXRlIHRyZWUgd2l0aCBhbnkgcmVsZXZhbnQgZGF0YSBmcm9tIHRoZSBvbGQgb25lLlxuXG4gICAgZGlzcGF0Y2goe1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuUkVQTEFDRVxuICAgIH0pO1xuICB9XG4gIC8qKlxuICAgKiBJbnRlcm9wZXJhYmlsaXR5IHBvaW50IGZvciBvYnNlcnZhYmxlL3JlYWN0aXZlIGxpYnJhcmllcy5cbiAgICogQHJldHVybnMge29ic2VydmFibGV9IEEgbWluaW1hbCBvYnNlcnZhYmxlIG9mIHN0YXRlIGNoYW5nZXMuXG4gICAqIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIG9ic2VydmFibGUgcHJvcG9zYWw6XG4gICAqIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLW9ic2VydmFibGVcbiAgICovXG5cblxuICBmdW5jdGlvbiBvYnNlcnZhYmxlKCkge1xuICAgIHZhciBfcmVmO1xuXG4gICAgdmFyIG91dGVyU3Vic2NyaWJlID0gc3Vic2NyaWJlO1xuICAgIHJldHVybiBfcmVmID0ge1xuICAgICAgLyoqXG4gICAgICAgKiBUaGUgbWluaW1hbCBvYnNlcnZhYmxlIHN1YnNjcmlwdGlvbiBtZXRob2QuXG4gICAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JzZXJ2ZXIgQW55IG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIGFzIGFuIG9ic2VydmVyLlxuICAgICAgICogVGhlIG9ic2VydmVyIG9iamVjdCBzaG91bGQgaGF2ZSBhIGBuZXh0YCBtZXRob2QuXG4gICAgICAgKiBAcmV0dXJucyB7c3Vic2NyaXB0aW9ufSBBbiBvYmplY3Qgd2l0aCBhbiBgdW5zdWJzY3JpYmVgIG1ldGhvZCB0aGF0IGNhblxuICAgICAgICogYmUgdXNlZCB0byB1bnN1YnNjcmliZSB0aGUgb2JzZXJ2YWJsZSBmcm9tIHRoZSBzdG9yZSwgYW5kIHByZXZlbnQgZnVydGhlclxuICAgICAgICogZW1pc3Npb24gb2YgdmFsdWVzIGZyb20gdGhlIG9ic2VydmFibGUuXG4gICAgICAgKi9cbiAgICAgIHN1YnNjcmliZTogZnVuY3Rpb24gc3Vic2NyaWJlKG9ic2VydmVyKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygb2JzZXJ2ZXIgIT09ICdvYmplY3QnIHx8IG9ic2VydmVyID09PSBudWxsKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgdGhlIG9ic2VydmVyIHRvIGJlIGFuIG9iamVjdC4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIG9ic2VydmVTdGF0ZSgpIHtcbiAgICAgICAgICBpZiAob2JzZXJ2ZXIubmV4dCkge1xuICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dChnZXRTdGF0ZSgpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBvYnNlcnZlU3RhdGUoKTtcbiAgICAgICAgdmFyIHVuc3Vic2NyaWJlID0gb3V0ZXJTdWJzY3JpYmUob2JzZXJ2ZVN0YXRlKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB1bnN1YnNjcmliZTogdW5zdWJzY3JpYmVcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9LCBfcmVmWyQkb2JzZXJ2YWJsZV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LCBfcmVmO1xuICB9IC8vIFdoZW4gYSBzdG9yZSBpcyBjcmVhdGVkLCBhbiBcIklOSVRcIiBhY3Rpb24gaXMgZGlzcGF0Y2hlZCBzbyB0aGF0IGV2ZXJ5XG4gIC8vIHJlZHVjZXIgcmV0dXJucyB0aGVpciBpbml0aWFsIHN0YXRlLiBUaGlzIGVmZmVjdGl2ZWx5IHBvcHVsYXRlc1xuICAvLyB0aGUgaW5pdGlhbCBzdGF0ZSB0cmVlLlxuXG5cbiAgZGlzcGF0Y2goe1xuICAgIHR5cGU6IEFjdGlvblR5cGVzLklOSVRcbiAgfSk7XG4gIHJldHVybiBfcmVmMiA9IHtcbiAgICBkaXNwYXRjaDogZGlzcGF0Y2gsXG4gICAgc3Vic2NyaWJlOiBzdWJzY3JpYmUsXG4gICAgZ2V0U3RhdGU6IGdldFN0YXRlLFxuICAgIHJlcGxhY2VSZWR1Y2VyOiByZXBsYWNlUmVkdWNlclxuICB9LCBfcmVmMlskJG9ic2VydmFibGVdID0gb2JzZXJ2YWJsZSwgX3JlZjI7XG59XG5cbi8qKlxuICogUHJpbnRzIGEgd2FybmluZyBpbiB0aGUgY29uc29sZSBpZiBpdCBleGlzdHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgVGhlIHdhcm5pbmcgbWVzc2FnZS5cbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiB3YXJuaW5nKG1lc3NhZ2UpIHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBjb25zb2xlLmVycm9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgfVxuICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cblxuXG4gIHRyeSB7XG4gICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCBpZiB5b3UgZW5hYmxlXG4gICAgLy8gXCJicmVhayBvbiBhbGwgZXhjZXB0aW9uc1wiIGluIHlvdXIgY29uc29sZSxcbiAgICAvLyBpdCB3b3VsZCBwYXVzZSB0aGUgZXhlY3V0aW9uIGF0IHRoaXMgbGluZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gIH0gY2F0Y2ggKGUpIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHlcblxufVxuXG5mdW5jdGlvbiBnZXRVbmRlZmluZWRTdGF0ZUVycm9yTWVzc2FnZShrZXksIGFjdGlvbikge1xuICB2YXIgYWN0aW9uVHlwZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZTtcbiAgdmFyIGFjdGlvbkRlc2NyaXB0aW9uID0gYWN0aW9uVHlwZSAmJiBcImFjdGlvbiBcXFwiXCIgKyBTdHJpbmcoYWN0aW9uVHlwZSkgKyBcIlxcXCJcIiB8fCAnYW4gYWN0aW9uJztcbiAgcmV0dXJuIFwiR2l2ZW4gXCIgKyBhY3Rpb25EZXNjcmlwdGlvbiArIFwiLCByZWR1Y2VyIFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQuIFwiICsgXCJUbyBpZ25vcmUgYW4gYWN0aW9uLCB5b3UgbXVzdCBleHBsaWNpdGx5IHJldHVybiB0aGUgcHJldmlvdXMgc3RhdGUuIFwiICsgXCJJZiB5b3Ugd2FudCB0aGlzIHJlZHVjZXIgdG8gaG9sZCBubyB2YWx1ZSwgeW91IGNhbiByZXR1cm4gbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC5cIjtcbn1cblxuZnVuY3Rpb24gZ2V0VW5leHBlY3RlZFN0YXRlU2hhcGVXYXJuaW5nTWVzc2FnZShpbnB1dFN0YXRlLCByZWR1Y2VycywgYWN0aW9uLCB1bmV4cGVjdGVkS2V5Q2FjaGUpIHtcbiAgdmFyIHJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMocmVkdWNlcnMpO1xuICB2YXIgYXJndW1lbnROYW1lID0gYWN0aW9uICYmIGFjdGlvbi50eXBlID09PSBBY3Rpb25UeXBlcy5JTklUID8gJ3ByZWxvYWRlZFN0YXRlIGFyZ3VtZW50IHBhc3NlZCB0byBjcmVhdGVTdG9yZScgOiAncHJldmlvdXMgc3RhdGUgcmVjZWl2ZWQgYnkgdGhlIHJlZHVjZXInO1xuXG4gIGlmIChyZWR1Y2VyS2V5cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gJ1N0b3JlIGRvZXMgbm90IGhhdmUgYSB2YWxpZCByZWR1Y2VyLiBNYWtlIHN1cmUgdGhlIGFyZ3VtZW50IHBhc3NlZCAnICsgJ3RvIGNvbWJpbmVSZWR1Y2VycyBpcyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSByZWR1Y2Vycy4nO1xuICB9XG5cbiAgaWYgKCFpc1BsYWluT2JqZWN0KGlucHV0U3RhdGUpKSB7XG4gICAgcmV0dXJuIFwiVGhlIFwiICsgYXJndW1lbnROYW1lICsgXCIgaGFzIHVuZXhwZWN0ZWQgdHlwZSBvZiBcXFwiXCIgKyB7fS50b1N0cmluZy5jYWxsKGlucHV0U3RhdGUpLm1hdGNoKC9cXHMoW2EtenxBLVpdKykvKVsxXSArIFwiXFxcIi4gRXhwZWN0ZWQgYXJndW1lbnQgdG8gYmUgYW4gb2JqZWN0IHdpdGggdGhlIGZvbGxvd2luZyBcIiArIChcImtleXM6IFxcXCJcIiArIHJlZHVjZXJLZXlzLmpvaW4oJ1wiLCBcIicpICsgXCJcXFwiXCIpO1xuICB9XG5cbiAgdmFyIHVuZXhwZWN0ZWRLZXlzID0gT2JqZWN0LmtleXMoaW5wdXRTdGF0ZSkuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gIXJlZHVjZXJzLmhhc093blByb3BlcnR5KGtleSkgJiYgIXVuZXhwZWN0ZWRLZXlDYWNoZVtrZXldO1xuICB9KTtcbiAgdW5leHBlY3RlZEtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdW5leHBlY3RlZEtleUNhY2hlW2tleV0gPSB0cnVlO1xuICB9KTtcbiAgaWYgKGFjdGlvbiAmJiBhY3Rpb24udHlwZSA9PT0gQWN0aW9uVHlwZXMuUkVQTEFDRSkgcmV0dXJuO1xuXG4gIGlmICh1bmV4cGVjdGVkS2V5cy5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIFwiVW5leHBlY3RlZCBcIiArICh1bmV4cGVjdGVkS2V5cy5sZW5ndGggPiAxID8gJ2tleXMnIDogJ2tleScpICsgXCIgXCIgKyAoXCJcXFwiXCIgKyB1bmV4cGVjdGVkS2V5cy5qb2luKCdcIiwgXCInKSArIFwiXFxcIiBmb3VuZCBpbiBcIiArIGFyZ3VtZW50TmFtZSArIFwiLiBcIikgKyBcIkV4cGVjdGVkIHRvIGZpbmQgb25lIG9mIHRoZSBrbm93biByZWR1Y2VyIGtleXMgaW5zdGVhZDogXCIgKyAoXCJcXFwiXCIgKyByZWR1Y2VyS2V5cy5qb2luKCdcIiwgXCInKSArIFwiXFxcIi4gVW5leHBlY3RlZCBrZXlzIHdpbGwgYmUgaWdub3JlZC5cIik7XG4gIH1cbn1cblxuZnVuY3Rpb24gYXNzZXJ0UmVkdWNlclNoYXBlKHJlZHVjZXJzKSB7XG4gIE9iamVjdC5rZXlzKHJlZHVjZXJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgcmVkdWNlciA9IHJlZHVjZXJzW2tleV07XG4gICAgdmFyIGluaXRpYWxTdGF0ZSA9IHJlZHVjZXIodW5kZWZpbmVkLCB7XG4gICAgICB0eXBlOiBBY3Rpb25UeXBlcy5JTklUXG4gICAgfSk7XG5cbiAgICBpZiAodHlwZW9mIGluaXRpYWxTdGF0ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlJlZHVjZXIgXFxcIlwiICsga2V5ICsgXCJcXFwiIHJldHVybmVkIHVuZGVmaW5lZCBkdXJpbmcgaW5pdGlhbGl6YXRpb24uIFwiICsgXCJJZiB0aGUgc3RhdGUgcGFzc2VkIHRvIHRoZSByZWR1Y2VyIGlzIHVuZGVmaW5lZCwgeW91IG11c3QgXCIgKyBcImV4cGxpY2l0bHkgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLiBUaGUgaW5pdGlhbCBzdGF0ZSBtYXkgXCIgKyBcIm5vdCBiZSB1bmRlZmluZWQuIElmIHlvdSBkb24ndCB3YW50IHRvIHNldCBhIHZhbHVlIGZvciB0aGlzIHJlZHVjZXIsIFwiICsgXCJ5b3UgY2FuIHVzZSBudWxsIGluc3RlYWQgb2YgdW5kZWZpbmVkLlwiKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHJlZHVjZXIodW5kZWZpbmVkLCB7XG4gICAgICB0eXBlOiBBY3Rpb25UeXBlcy5QUk9CRV9VTktOT1dOX0FDVElPTigpXG4gICAgfSkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWR1Y2VyIFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQgd2hlbiBwcm9iZWQgd2l0aCBhIHJhbmRvbSB0eXBlLiBcIiArIChcIkRvbid0IHRyeSB0byBoYW5kbGUgXCIgKyBBY3Rpb25UeXBlcy5JTklUICsgXCIgb3Igb3RoZXIgYWN0aW9ucyBpbiBcXFwicmVkdXgvKlxcXCIgXCIpICsgXCJuYW1lc3BhY2UuIFRoZXkgYXJlIGNvbnNpZGVyZWQgcHJpdmF0ZS4gSW5zdGVhZCwgeW91IG11c3QgcmV0dXJuIHRoZSBcIiArIFwiY3VycmVudCBzdGF0ZSBmb3IgYW55IHVua25vd24gYWN0aW9ucywgdW5sZXNzIGl0IGlzIHVuZGVmaW5lZCwgXCIgKyBcImluIHdoaWNoIGNhc2UgeW91IG11c3QgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLCByZWdhcmRsZXNzIG9mIHRoZSBcIiArIFwiYWN0aW9uIHR5cGUuIFRoZSBpbml0aWFsIHN0YXRlIG1heSBub3QgYmUgdW5kZWZpbmVkLCBidXQgY2FuIGJlIG51bGwuXCIpO1xuICAgIH1cbiAgfSk7XG59XG4vKipcbiAqIFR1cm5zIGFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgYXJlIGRpZmZlcmVudCByZWR1Y2VyIGZ1bmN0aW9ucywgaW50byBhIHNpbmdsZVxuICogcmVkdWNlciBmdW5jdGlvbi4gSXQgd2lsbCBjYWxsIGV2ZXJ5IGNoaWxkIHJlZHVjZXIsIGFuZCBnYXRoZXIgdGhlaXIgcmVzdWx0c1xuICogaW50byBhIHNpbmdsZSBzdGF0ZSBvYmplY3QsIHdob3NlIGtleXMgY29ycmVzcG9uZCB0byB0aGUga2V5cyBvZiB0aGUgcGFzc2VkXG4gKiByZWR1Y2VyIGZ1bmN0aW9ucy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcmVkdWNlcnMgQW4gb2JqZWN0IHdob3NlIHZhbHVlcyBjb3JyZXNwb25kIHRvIGRpZmZlcmVudFxuICogcmVkdWNlciBmdW5jdGlvbnMgdGhhdCBuZWVkIHRvIGJlIGNvbWJpbmVkIGludG8gb25lLiBPbmUgaGFuZHkgd2F5IHRvIG9idGFpblxuICogaXQgaXMgdG8gdXNlIEVTNiBgaW1wb3J0ICogYXMgcmVkdWNlcnNgIHN5bnRheC4gVGhlIHJlZHVjZXJzIG1heSBuZXZlciByZXR1cm5cbiAqIHVuZGVmaW5lZCBmb3IgYW55IGFjdGlvbi4gSW5zdGVhZCwgdGhleSBzaG91bGQgcmV0dXJuIHRoZWlyIGluaXRpYWwgc3RhdGVcbiAqIGlmIHRoZSBzdGF0ZSBwYXNzZWQgdG8gdGhlbSB3YXMgdW5kZWZpbmVkLCBhbmQgdGhlIGN1cnJlbnQgc3RhdGUgZm9yIGFueVxuICogdW5yZWNvZ25pemVkIGFjdGlvbi5cbiAqXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgcmVkdWNlciBmdW5jdGlvbiB0aGF0IGludm9rZXMgZXZlcnkgcmVkdWNlciBpbnNpZGUgdGhlXG4gKiBwYXNzZWQgb2JqZWN0LCBhbmQgYnVpbGRzIGEgc3RhdGUgb2JqZWN0IHdpdGggdGhlIHNhbWUgc2hhcGUuXG4gKi9cblxuXG5mdW5jdGlvbiBjb21iaW5lUmVkdWNlcnMocmVkdWNlcnMpIHtcbiAgdmFyIHJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMocmVkdWNlcnMpO1xuICB2YXIgZmluYWxSZWR1Y2VycyA9IHt9O1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcmVkdWNlcktleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0gcmVkdWNlcktleXNbaV07XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKHR5cGVvZiByZWR1Y2Vyc1trZXldID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB3YXJuaW5nKFwiTm8gcmVkdWNlciBwcm92aWRlZCBmb3Iga2V5IFxcXCJcIiArIGtleSArIFwiXFxcIlwiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHJlZHVjZXJzW2tleV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGZpbmFsUmVkdWNlcnNba2V5XSA9IHJlZHVjZXJzW2tleV07XG4gICAgfVxuICB9XG5cbiAgdmFyIGZpbmFsUmVkdWNlcktleXMgPSBPYmplY3Qua2V5cyhmaW5hbFJlZHVjZXJzKTsgLy8gVGhpcyBpcyB1c2VkIHRvIG1ha2Ugc3VyZSB3ZSBkb24ndCB3YXJuIGFib3V0IHRoZSBzYW1lXG4gIC8vIGtleXMgbXVsdGlwbGUgdGltZXMuXG5cbiAgdmFyIHVuZXhwZWN0ZWRLZXlDYWNoZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHVuZXhwZWN0ZWRLZXlDYWNoZSA9IHt9O1xuICB9XG5cbiAgdmFyIHNoYXBlQXNzZXJ0aW9uRXJyb3I7XG5cbiAgdHJ5IHtcbiAgICBhc3NlcnRSZWR1Y2VyU2hhcGUoZmluYWxSZWR1Y2Vycyk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBzaGFwZUFzc2VydGlvbkVycm9yID0gZTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiBjb21iaW5hdGlvbihzdGF0ZSwgYWN0aW9uKSB7XG4gICAgaWYgKHN0YXRlID09PSB2b2lkIDApIHtcbiAgICAgIHN0YXRlID0ge307XG4gICAgfVxuXG4gICAgaWYgKHNoYXBlQXNzZXJ0aW9uRXJyb3IpIHtcbiAgICAgIHRocm93IHNoYXBlQXNzZXJ0aW9uRXJyb3I7XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIHZhciB3YXJuaW5nTWVzc2FnZSA9IGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2Uoc3RhdGUsIGZpbmFsUmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKTtcblxuICAgICAgaWYgKHdhcm5pbmdNZXNzYWdlKSB7XG4gICAgICAgIHdhcm5pbmcod2FybmluZ01lc3NhZ2UpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBoYXNDaGFuZ2VkID0gZmFsc2U7XG4gICAgdmFyIG5leHRTdGF0ZSA9IHt9O1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGZpbmFsUmVkdWNlcktleXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2tleSA9IGZpbmFsUmVkdWNlcktleXNbX2ldO1xuICAgICAgdmFyIHJlZHVjZXIgPSBmaW5hbFJlZHVjZXJzW19rZXldO1xuICAgICAgdmFyIHByZXZpb3VzU3RhdGVGb3JLZXkgPSBzdGF0ZVtfa2V5XTtcbiAgICAgIHZhciBuZXh0U3RhdGVGb3JLZXkgPSByZWR1Y2VyKHByZXZpb3VzU3RhdGVGb3JLZXksIGFjdGlvbik7XG5cbiAgICAgIGlmICh0eXBlb2YgbmV4dFN0YXRlRm9yS2V5ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB2YXIgZXJyb3JNZXNzYWdlID0gZ2V0VW5kZWZpbmVkU3RhdGVFcnJvck1lc3NhZ2UoX2tleSwgYWN0aW9uKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yTWVzc2FnZSk7XG4gICAgICB9XG5cbiAgICAgIG5leHRTdGF0ZVtfa2V5XSA9IG5leHRTdGF0ZUZvcktleTtcbiAgICAgIGhhc0NoYW5nZWQgPSBoYXNDaGFuZ2VkIHx8IG5leHRTdGF0ZUZvcktleSAhPT0gcHJldmlvdXNTdGF0ZUZvcktleTtcbiAgICB9XG5cbiAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBmaW5hbFJlZHVjZXJLZXlzLmxlbmd0aCAhPT0gT2JqZWN0LmtleXMoc3RhdGUpLmxlbmd0aDtcbiAgICByZXR1cm4gaGFzQ2hhbmdlZCA/IG5leHRTdGF0ZSA6IHN0YXRlO1xuICB9O1xufVxuXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkaXNwYXRjaChhY3Rpb25DcmVhdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9O1xufVxuLyoqXG4gKiBUdXJucyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBhY3Rpb24gY3JlYXRvcnMsIGludG8gYW4gb2JqZWN0IHdpdGggdGhlXG4gKiBzYW1lIGtleXMsIGJ1dCB3aXRoIGV2ZXJ5IGZ1bmN0aW9uIHdyYXBwZWQgaW50byBhIGBkaXNwYXRjaGAgY2FsbCBzbyB0aGV5XG4gKiBtYXkgYmUgaW52b2tlZCBkaXJlY3RseS4gVGhpcyBpcyBqdXN0IGEgY29udmVuaWVuY2UgbWV0aG9kLCBhcyB5b3UgY2FuIGNhbGxcbiAqIGBzdG9yZS5kaXNwYXRjaChNeUFjdGlvbkNyZWF0b3JzLmRvU29tZXRoaW5nKCkpYCB5b3Vyc2VsZiBqdXN0IGZpbmUuXG4gKlxuICogRm9yIGNvbnZlbmllbmNlLCB5b3UgY2FuIGFsc28gcGFzcyBhbiBhY3Rpb24gY3JlYXRvciBhcyB0aGUgZmlyc3QgYXJndW1lbnQsXG4gKiBhbmQgZ2V0IGEgZGlzcGF0Y2ggd3JhcHBlZCBmdW5jdGlvbiBpbiByZXR1cm4uXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R9IGFjdGlvbkNyZWF0b3JzIEFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgYXJlIGFjdGlvblxuICogY3JlYXRvciBmdW5jdGlvbnMuIE9uZSBoYW5keSB3YXkgdG8gb2J0YWluIGl0IGlzIHRvIHVzZSBFUzYgYGltcG9ydCAqIGFzYFxuICogc3ludGF4LiBZb3UgbWF5IGFsc28gcGFzcyBhIHNpbmdsZSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBkaXNwYXRjaCBUaGUgYGRpc3BhdGNoYCBmdW5jdGlvbiBhdmFpbGFibGUgb24geW91ciBSZWR1eFxuICogc3RvcmUuXG4gKlxuICogQHJldHVybnMge0Z1bmN0aW9ufE9iamVjdH0gVGhlIG9iamVjdCBtaW1pY2tpbmcgdGhlIG9yaWdpbmFsIG9iamVjdCwgYnV0IHdpdGhcbiAqIGV2ZXJ5IGFjdGlvbiBjcmVhdG9yIHdyYXBwZWQgaW50byB0aGUgYGRpc3BhdGNoYCBjYWxsLiBJZiB5b3UgcGFzc2VkIGFcbiAqIGZ1bmN0aW9uIGFzIGBhY3Rpb25DcmVhdG9yc2AsIHRoZSByZXR1cm4gdmFsdWUgd2lsbCBhbHNvIGJlIGEgc2luZ2xlXG4gKiBmdW5jdGlvbi5cbiAqL1xuXG5cbmZ1bmN0aW9uIGJpbmRBY3Rpb25DcmVhdG9ycyhhY3Rpb25DcmVhdG9ycywgZGlzcGF0Y2gpIHtcbiAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9ycyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9ycywgZGlzcGF0Y2gpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9ycyAhPT0gJ29iamVjdCcgfHwgYWN0aW9uQ3JlYXRvcnMgPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJiaW5kQWN0aW9uQ3JlYXRvcnMgZXhwZWN0ZWQgYW4gb2JqZWN0IG9yIGEgZnVuY3Rpb24sIGluc3RlYWQgcmVjZWl2ZWQgXCIgKyAoYWN0aW9uQ3JlYXRvcnMgPT09IG51bGwgPyAnbnVsbCcgOiB0eXBlb2YgYWN0aW9uQ3JlYXRvcnMpICsgXCIuIFwiICsgXCJEaWQgeW91IHdyaXRlIFxcXCJpbXBvcnQgQWN0aW9uQ3JlYXRvcnMgZnJvbVxcXCIgaW5zdGVhZCBvZiBcXFwiaW1wb3J0ICogYXMgQWN0aW9uQ3JlYXRvcnMgZnJvbVxcXCI/XCIpO1xuICB9XG5cbiAgdmFyIGJvdW5kQWN0aW9uQ3JlYXRvcnMgPSB7fTtcblxuICBmb3IgKHZhciBrZXkgaW4gYWN0aW9uQ3JlYXRvcnMpIHtcbiAgICB2YXIgYWN0aW9uQ3JlYXRvciA9IGFjdGlvbkNyZWF0b3JzW2tleV07XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbkNyZWF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGJvdW5kQWN0aW9uQ3JlYXRvcnNba2V5XSA9IGJpbmRBY3Rpb25DcmVhdG9yKGFjdGlvbkNyZWF0b3IsIGRpc3BhdGNoKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYm91bmRBY3Rpb25DcmVhdG9ycztcbn1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkge1xuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7XG5cbiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpKTtcbiAgfVxuXG4gIGlmIChlbnVtZXJhYmxlT25seSkga2V5cyA9IGtleXMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHtcbiAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTtcbiAgfSk7XG4gIHJldHVybiBrZXlzO1xufVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkMih0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTtcblxuICAgIGlmIChpICUgMikge1xuICAgICAgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufVxuXG4vKipcbiAqIENvbXBvc2VzIHNpbmdsZS1hcmd1bWVudCBmdW5jdGlvbnMgZnJvbSByaWdodCB0byBsZWZ0LiBUaGUgcmlnaHRtb3N0XG4gKiBmdW5jdGlvbiBjYW4gdGFrZSBtdWx0aXBsZSBhcmd1bWVudHMgYXMgaXQgcHJvdmlkZXMgdGhlIHNpZ25hdHVyZSBmb3JcbiAqIHRoZSByZXN1bHRpbmcgY29tcG9zaXRlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7Li4uRnVuY3Rpb259IGZ1bmNzIFRoZSBmdW5jdGlvbnMgdG8gY29tcG9zZS5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBmdW5jdGlvbiBvYnRhaW5lZCBieSBjb21wb3NpbmcgdGhlIGFyZ3VtZW50IGZ1bmN0aW9uc1xuICogZnJvbSByaWdodCB0byBsZWZ0LiBGb3IgZXhhbXBsZSwgY29tcG9zZShmLCBnLCBoKSBpcyBpZGVudGljYWwgdG8gZG9pbmdcbiAqICguLi5hcmdzKSA9PiBmKGcoaCguLi5hcmdzKSkpLlxuICovXG5mdW5jdGlvbiBjb21wb3NlKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgZnVuY3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgZnVuY3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICBpZiAoZnVuY3MubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICAgIHJldHVybiBhcmc7XG4gICAgfTtcbiAgfVxuXG4gIGlmIChmdW5jcy5sZW5ndGggPT09IDEpIHtcbiAgICByZXR1cm4gZnVuY3NbMF07XG4gIH1cblxuICByZXR1cm4gZnVuY3MucmVkdWNlKGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBhKGIuYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpKTtcbiAgICB9O1xuICB9KTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgc3RvcmUgZW5oYW5jZXIgdGhhdCBhcHBsaWVzIG1pZGRsZXdhcmUgdG8gdGhlIGRpc3BhdGNoIG1ldGhvZFxuICogb2YgdGhlIFJlZHV4IHN0b3JlLiBUaGlzIGlzIGhhbmR5IGZvciBhIHZhcmlldHkgb2YgdGFza3MsIHN1Y2ggYXMgZXhwcmVzc2luZ1xuICogYXN5bmNocm9ub3VzIGFjdGlvbnMgaW4gYSBjb25jaXNlIG1hbm5lciwgb3IgbG9nZ2luZyBldmVyeSBhY3Rpb24gcGF5bG9hZC5cbiAqXG4gKiBTZWUgYHJlZHV4LXRodW5rYCBwYWNrYWdlIGFzIGFuIGV4YW1wbGUgb2YgdGhlIFJlZHV4IG1pZGRsZXdhcmUuXG4gKlxuICogQmVjYXVzZSBtaWRkbGV3YXJlIGlzIHBvdGVudGlhbGx5IGFzeW5jaHJvbm91cywgdGhpcyBzaG91bGQgYmUgdGhlIGZpcnN0XG4gKiBzdG9yZSBlbmhhbmNlciBpbiB0aGUgY29tcG9zaXRpb24gY2hhaW4uXG4gKlxuICogTm90ZSB0aGF0IGVhY2ggbWlkZGxld2FyZSB3aWxsIGJlIGdpdmVuIHRoZSBgZGlzcGF0Y2hgIGFuZCBgZ2V0U3RhdGVgIGZ1bmN0aW9uc1xuICogYXMgbmFtZWQgYXJndW1lbnRzLlxuICpcbiAqIEBwYXJhbSB7Li4uRnVuY3Rpb259IG1pZGRsZXdhcmVzIFRoZSBtaWRkbGV3YXJlIGNoYWluIHRvIGJlIGFwcGxpZWQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgc3RvcmUgZW5oYW5jZXIgYXBwbHlpbmcgdGhlIG1pZGRsZXdhcmUuXG4gKi9cblxuZnVuY3Rpb24gYXBwbHlNaWRkbGV3YXJlKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgbWlkZGxld2FyZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgbWlkZGxld2FyZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKGNyZWF0ZVN0b3JlKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBzdG9yZSA9IGNyZWF0ZVN0b3JlLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcblxuICAgICAgdmFyIF9kaXNwYXRjaCA9IGZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Rpc3BhdGNoaW5nIHdoaWxlIGNvbnN0cnVjdGluZyB5b3VyIG1pZGRsZXdhcmUgaXMgbm90IGFsbG93ZWQuICcgKyAnT3RoZXIgbWlkZGxld2FyZSB3b3VsZCBub3QgYmUgYXBwbGllZCB0byB0aGlzIGRpc3BhdGNoLicpO1xuICAgICAgfTtcblxuICAgICAgdmFyIG1pZGRsZXdhcmVBUEkgPSB7XG4gICAgICAgIGdldFN0YXRlOiBzdG9yZS5nZXRTdGF0ZSxcbiAgICAgICAgZGlzcGF0Y2g6IGZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICAgICAgICAgIHJldHVybiBfZGlzcGF0Y2guYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIGNoYWluID0gbWlkZGxld2FyZXMubWFwKGZ1bmN0aW9uIChtaWRkbGV3YXJlKSB7XG4gICAgICAgIHJldHVybiBtaWRkbGV3YXJlKG1pZGRsZXdhcmVBUEkpO1xuICAgICAgfSk7XG4gICAgICBfZGlzcGF0Y2ggPSBjb21wb3NlLmFwcGx5KHZvaWQgMCwgY2hhaW4pKHN0b3JlLmRpc3BhdGNoKTtcbiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkMih7fSwgc3RvcmUsIHtcbiAgICAgICAgZGlzcGF0Y2g6IF9kaXNwYXRjaFxuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcbn1cblxuLypcbiAqIFRoaXMgaXMgYSBkdW1teSBmdW5jdGlvbiB0byBjaGVjayBpZiB0aGUgZnVuY3Rpb24gbmFtZSBoYXMgYmVlbiBhbHRlcmVkIGJ5IG1pbmlmaWNhdGlvbi5cbiAqIElmIHRoZSBmdW5jdGlvbiBoYXMgYmVlbiBtaW5pZmllZCBhbmQgTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJywgd2FybiB0aGUgdXNlci5cbiAqL1xuXG5mdW5jdGlvbiBpc0NydXNoZWQoKSB7fVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgaXNDcnVzaGVkLm5hbWUgPT09ICdzdHJpbmcnICYmIGlzQ3J1c2hlZC5uYW1lICE9PSAnaXNDcnVzaGVkJykge1xuICB3YXJuaW5nKCdZb3UgYXJlIGN1cnJlbnRseSB1c2luZyBtaW5pZmllZCBjb2RlIG91dHNpZGUgb2YgTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiLiAnICsgJ1RoaXMgbWVhbnMgdGhhdCB5b3UgYXJlIHJ1bm5pbmcgYSBzbG93ZXIgZGV2ZWxvcG1lbnQgYnVpbGQgb2YgUmVkdXguICcgKyAnWW91IGNhbiB1c2UgbG9vc2UtZW52aWZ5IChodHRwczovL2dpdGh1Yi5jb20vemVydG9zaC9sb29zZS1lbnZpZnkpIGZvciBicm93c2VyaWZ5ICcgKyAnb3Igc2V0dGluZyBtb2RlIHRvIHByb2R1Y3Rpb24gaW4gd2VicGFjayAoaHR0cHM6Ly93ZWJwYWNrLmpzLm9yZy9jb25jZXB0cy9tb2RlLykgJyArICd0byBlbnN1cmUgeW91IGhhdmUgdGhlIGNvcnJlY3QgY29kZSBmb3IgeW91ciBwcm9kdWN0aW9uIGJ1aWxkLicpO1xufVxuXG5leHBvcnQgeyBBY3Rpb25UeXBlcyBhcyBfX0RPX05PVF9VU0VfX0FjdGlvblR5cGVzLCBhcHBseU1pZGRsZXdhcmUsIGJpbmRBY3Rpb25DcmVhdG9ycywgY29tYmluZVJlZHVjZXJzLCBjb21wb3NlLCBjcmVhdGVTdG9yZSB9O1xuIiwidmFyIG1hcCA9IHtcblx0XCIuL2NvbmZpZ3VyZVN0b3JlLmRldlwiOiBbXG5cdFx0XCJSRGJtXCIsXG5cdFx0MFxuXHRdLFxuXHRcIi4vY29uZmlndXJlU3RvcmUuZGV2LnRzXCI6IFtcblx0XHRcIlJEYm1cIixcblx0XHQwXG5cdF0sXG5cdFwiLi9jb25maWd1cmVTdG9yZS5wcm9kXCI6IFtcblx0XHRcIjlXZUpcIixcblx0XHQxXG5cdF0sXG5cdFwiLi9jb25maWd1cmVTdG9yZS5wcm9kLnRzXCI6IFtcblx0XHRcIjlXZUpcIixcblx0XHQxXG5cdF1cbn07XG5mdW5jdGlvbiB3ZWJwYWNrQXN5bmNDb250ZXh0KHJlcSkge1xuXHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1hcCwgcmVxKSkge1xuXHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGUgPSBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiICsgcmVxICsgXCInXCIpO1xuXHRcdFx0ZS5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuXHRcdFx0dGhyb3cgZTtcblx0XHR9KTtcblx0fVxuXG5cdHZhciBpZHMgPSBtYXBbcmVxXSwgaWQgPSBpZHNbMF07XG5cdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLmUoaWRzWzFdKS50aGVuKGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcblx0fSk7XG59XG53ZWJwYWNrQXN5bmNDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQXN5bmNDb250ZXh0S2V5cygpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKG1hcCk7XG59O1xud2VicGFja0FzeW5jQ29udGV4dC5pZCA9IFwiQVlONlwiO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQXN5bmNDb250ZXh0OyIsImZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX25vbkl0ZXJhYmxlU3ByZWFkOyIsIid1c2Ugc3RyaWN0JztcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbiAgfSk7XG4gIGV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbiAgXG4gIHZhciBfTGVmdE91dGxpbmVkID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCcuL2xpYi9pY29ucy9MZWZ0T3V0bGluZWQnKSk7XG4gIFxuICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG4gIFxuICB2YXIgX2RlZmF1bHQgPSBfTGVmdE91dGxpbmVkO1xuICBleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfZGVmYXVsdDsiLCJmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSkgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2l0ZXJhYmxlVG9BcnJheTsiLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciB0aW55Y29sb3IyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInRpbnljb2xvcjJcIikpO1xudmFyIGh1ZVN0ZXAgPSAyOyAvLyDoibLnm7jpmLbmoq9cbnZhciBzYXR1cmF0aW9uU3RlcCA9IDE2OyAvLyDppbHlkozluqbpmLbmoq/vvIzmtYXoibLpg6jliIZcbnZhciBzYXR1cmF0aW9uU3RlcDIgPSA1OyAvLyDppbHlkozluqbpmLbmoq/vvIzmt7HoibLpg6jliIZcbnZhciBicmlnaHRuZXNzU3RlcDEgPSA1OyAvLyDkuq7luqbpmLbmoq/vvIzmtYXoibLpg6jliIZcbnZhciBicmlnaHRuZXNzU3RlcDIgPSAxNTsgLy8g5Lqu5bqm6Zi25qKv77yM5rex6Imy6YOo5YiGXG52YXIgbGlnaHRDb2xvckNvdW50ID0gNTsgLy8g5rWF6Imy5pWw6YeP77yM5Li76Imy5LiKXG52YXIgZGFya0NvbG9yQ291bnQgPSA0OyAvLyDmt7HoibLmlbDph4/vvIzkuLvoibLkuItcbmZ1bmN0aW9uIGdldEh1ZShoc3YsIGksIGxpZ2h0KSB7XG4gICAgdmFyIGh1ZTtcbiAgICAvLyDmoLnmja7oibLnm7jkuI3lkIzvvIzoibLnm7jovazlkJHkuI3lkIxcbiAgICBpZiAoTWF0aC5yb3VuZChoc3YuaCkgPj0gNjAgJiYgTWF0aC5yb3VuZChoc3YuaCkgPD0gMjQwKSB7XG4gICAgICAgIGh1ZSA9IGxpZ2h0ID8gTWF0aC5yb3VuZChoc3YuaCkgLSBodWVTdGVwICogaSA6IE1hdGgucm91bmQoaHN2LmgpICsgaHVlU3RlcCAqIGk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBodWUgPSBsaWdodCA/IE1hdGgucm91bmQoaHN2LmgpICsgaHVlU3RlcCAqIGkgOiBNYXRoLnJvdW5kKGhzdi5oKSAtIGh1ZVN0ZXAgKiBpO1xuICAgIH1cbiAgICBpZiAoaHVlIDwgMCkge1xuICAgICAgICBodWUgKz0gMzYwO1xuICAgIH1cbiAgICBlbHNlIGlmIChodWUgPj0gMzYwKSB7XG4gICAgICAgIGh1ZSAtPSAzNjA7XG4gICAgfVxuICAgIHJldHVybiBodWU7XG59XG5mdW5jdGlvbiBnZXRTYXR1cmF0aW9uKGhzdiwgaSwgbGlnaHQpIHtcbiAgICAvLyBncmV5IGNvbG9yIGRvbid0IGNoYW5nZSBzYXR1cmF0aW9uXG4gICAgaWYgKGhzdi5oID09PSAwICYmIGhzdi5zID09PSAwKSB7XG4gICAgICAgIHJldHVybiBoc3YucztcbiAgICB9XG4gICAgdmFyIHNhdHVyYXRpb247XG4gICAgaWYgKGxpZ2h0KSB7XG4gICAgICAgIHNhdHVyYXRpb24gPSBNYXRoLnJvdW5kKGhzdi5zICogMTAwKSAtIHNhdHVyYXRpb25TdGVwICogaTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaSA9PT0gZGFya0NvbG9yQ291bnQpIHtcbiAgICAgICAgc2F0dXJhdGlvbiA9IE1hdGgucm91bmQoaHN2LnMgKiAxMDApICsgc2F0dXJhdGlvblN0ZXA7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBzYXR1cmF0aW9uID0gTWF0aC5yb3VuZChoc3YucyAqIDEwMCkgKyBzYXR1cmF0aW9uU3RlcDIgKiBpO1xuICAgIH1cbiAgICAvLyDovrnnlYzlgLzkv67mraNcbiAgICBpZiAoc2F0dXJhdGlvbiA+IDEwMCkge1xuICAgICAgICBzYXR1cmF0aW9uID0gMTAwO1xuICAgIH1cbiAgICAvLyDnrKzkuIDmoLznmoQgcyDpmZDliLblnKggNi0xMCDkuYvpl7RcbiAgICBpZiAobGlnaHQgJiYgaSA9PT0gbGlnaHRDb2xvckNvdW50ICYmIHNhdHVyYXRpb24gPiAxMCkge1xuICAgICAgICBzYXR1cmF0aW9uID0gMTA7XG4gICAgfVxuICAgIGlmIChzYXR1cmF0aW9uIDwgNikge1xuICAgICAgICBzYXR1cmF0aW9uID0gNjtcbiAgICB9XG4gICAgcmV0dXJuIHNhdHVyYXRpb247XG59XG5mdW5jdGlvbiBnZXRWYWx1ZShoc3YsIGksIGxpZ2h0KSB7XG4gICAgaWYgKGxpZ2h0KSB7XG4gICAgICAgIHJldHVybiBNYXRoLnJvdW5kKGhzdi52ICogMTAwKSArIGJyaWdodG5lc3NTdGVwMSAqIGk7XG4gICAgfVxuICAgIHJldHVybiBNYXRoLnJvdW5kKGhzdi52ICogMTAwKSAtIGJyaWdodG5lc3NTdGVwMiAqIGk7XG59XG5mdW5jdGlvbiBnZW5lcmF0ZShjb2xvcikge1xuICAgIHZhciBwYXR0ZXJucyA9IFtdO1xuICAgIHZhciBwQ29sb3IgPSB0aW55Y29sb3IyXzEuZGVmYXVsdChjb2xvcik7XG4gICAgZm9yICh2YXIgaSA9IGxpZ2h0Q29sb3JDb3VudDsgaSA+IDA7IGkgLT0gMSkge1xuICAgICAgICB2YXIgaHN2ID0gcENvbG9yLnRvSHN2KCk7XG4gICAgICAgIHZhciBjb2xvclN0cmluZyA9IHRpbnljb2xvcjJfMS5kZWZhdWx0KHtcbiAgICAgICAgICAgIGg6IGdldEh1ZShoc3YsIGksIHRydWUpLFxuICAgICAgICAgICAgczogZ2V0U2F0dXJhdGlvbihoc3YsIGksIHRydWUpLFxuICAgICAgICAgICAgdjogZ2V0VmFsdWUoaHN2LCBpLCB0cnVlKSxcbiAgICAgICAgfSkudG9IZXhTdHJpbmcoKTtcbiAgICAgICAgcGF0dGVybnMucHVzaChjb2xvclN0cmluZyk7XG4gICAgfVxuICAgIHBhdHRlcm5zLnB1c2gocENvbG9yLnRvSGV4U3RyaW5nKCkpO1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDw9IGRhcmtDb2xvckNvdW50OyBpICs9IDEpIHtcbiAgICAgICAgdmFyIGhzdiA9IHBDb2xvci50b0hzdigpO1xuICAgICAgICB2YXIgY29sb3JTdHJpbmcgPSB0aW55Y29sb3IyXzEuZGVmYXVsdCh7XG4gICAgICAgICAgICBoOiBnZXRIdWUoaHN2LCBpKSxcbiAgICAgICAgICAgIHM6IGdldFNhdHVyYXRpb24oaHN2LCBpKSxcbiAgICAgICAgICAgIHY6IGdldFZhbHVlKGhzdiwgaSksXG4gICAgICAgIH0pLnRvSGV4U3RyaW5nKCk7XG4gICAgICAgIHBhdHRlcm5zLnB1c2goY29sb3JTdHJpbmcpO1xuICAgIH1cbiAgICByZXR1cm4gcGF0dGVybnM7XG59XG5leHBvcnRzLmRlZmF1bHQgPSBnZW5lcmF0ZTtcbiIsIlwidXNlIHN0cmljdFwiO1xuLy8gVGhpcyBpY29uIGZpbGUgaXMgZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHkuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgUmlnaHRPdXRsaW5lZCA9IHsgXCJpY29uXCI6IHsgXCJ0YWdcIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwidmlld0JveFwiOiBcIjY0IDY0IDg5NiA4OTZcIiwgXCJmb2N1c2FibGVcIjogXCJmYWxzZVwiIH0sIFwiY2hpbGRyZW5cIjogW3sgXCJ0YWdcIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNNzY1LjcgNDg2LjhMMzE0LjkgMTM0LjdBNy45NyA3Ljk3IDAgMDAzMDIgMTQxdjc3LjNjMCA0LjkgMi4zIDkuNiA2LjEgMTIuNmwzNjAgMjgxLjEtMzYwIDI4MS4xYy0zLjkgMy02LjEgNy43LTYuMSAxMi42Vjg4M2MwIDYuNyA3LjcgMTAuNCAxMi45IDYuM2w0NTAuOC0zNTIuMWEzMS45NiAzMS45NiAwIDAwMC01MC40elwiIH0gfV0gfSwgXCJuYW1lXCI6IFwicmlnaHRcIiwgXCJ0aGVtZVwiOiBcIm91dGxpbmVkXCIgfTtcbmV4cG9ydHMuZGVmYXVsdCA9IFJpZ2h0T3V0bGluZWQ7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlV2lsZGNhcmRcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBSZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cbnZhciBfTGVmdE91dGxpbmVkID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQGFudC1kZXNpZ24vaWNvbnMtc3ZnL2xpYi9hc24vTGVmdE91dGxpbmVkXCIpKTtcblxudmFyIF9BbnRkSWNvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL2NvbXBvbmVudHMvQW50ZEljb25cIikpO1xuXG4vLyBHRU5FUkFURSBCWSAuL3NjcmlwdHMvZ2VuZXJhdGUudHNcbi8vIERPTiBOT1QgRURJVCBJVCBNQU5VQUxMWVxudmFyIExlZnRPdXRsaW5lZCA9IGZ1bmN0aW9uIExlZnRPdXRsaW5lZChwcm9wcywgcmVmKSB7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9BbnRkSWNvbi5kZWZhdWx0LCBPYmplY3QuYXNzaWduKHt9LCBwcm9wcywge1xuICAgIHJlZjogcmVmLFxuICAgIGljb246IF9MZWZ0T3V0bGluZWQuZGVmYXVsdFxuICB9KSk7XG59O1xuXG5MZWZ0T3V0bGluZWQuZGlzcGxheU5hbWUgPSAnTGVmdE91dGxpbmVkJztcblxudmFyIF9kZWZhdWx0ID0gUmVhY3QuZm9yd2FyZFJlZihMZWZ0T3V0bGluZWQpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCIhZnVuY3Rpb24oZSx0KXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZSh0KTplLmRheWpzX3BsdWdpbl93ZWVrWWVhcj10KCl9KHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gZnVuY3Rpb24oZSx0KXt0LnByb3RvdHlwZS53ZWVrWWVhcj1mdW5jdGlvbigpe3ZhciBlPXRoaXMubW9udGgoKSx0PXRoaXMud2VlaygpLG49dGhpcy55ZWFyKCk7cmV0dXJuIDE9PT10JiYxMT09PWU/bisxOm59fX0pO1xuIiwidmFyIGNvbnRhaW5lcnMgPSBbXTsgLy8gd2lsbCBzdG9yZSBjb250YWluZXIgSFRNTEVsZW1lbnQgcmVmZXJlbmNlc1xudmFyIHN0eWxlRWxlbWVudHMgPSBbXTsgLy8gd2lsbCBzdG9yZSB7cHJlcGVuZDogSFRNTEVsZW1lbnQsIGFwcGVuZDogSFRNTEVsZW1lbnR9XG5cbnZhciB1c2FnZSA9ICdpbnNlcnQtY3NzOiBZb3UgbmVlZCB0byBwcm92aWRlIGEgQ1NTIHN0cmluZy4gVXNhZ2U6IGluc2VydENzcyhjc3NTdHJpbmdbLCBvcHRpb25zXSkuJztcblxuZnVuY3Rpb24gaW5zZXJ0Q3NzKGNzcywgb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gICAgaWYgKGNzcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcih1c2FnZSk7XG4gICAgfVxuXG4gICAgdmFyIHBvc2l0aW9uID0gb3B0aW9ucy5wcmVwZW5kID09PSB0cnVlID8gJ3ByZXBlbmQnIDogJ2FwcGVuZCc7XG4gICAgdmFyIGNvbnRhaW5lciA9IG9wdGlvbnMuY29udGFpbmVyICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmNvbnRhaW5lciA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2hlYWQnKTtcbiAgICB2YXIgY29udGFpbmVySWQgPSBjb250YWluZXJzLmluZGV4T2YoY29udGFpbmVyKTtcblxuICAgIC8vIGZpcnN0IHRpbWUgd2Ugc2VlIHRoaXMgY29udGFpbmVyLCBjcmVhdGUgdGhlIG5lY2Vzc2FyeSBlbnRyaWVzXG4gICAgaWYgKGNvbnRhaW5lcklkID09PSAtMSkge1xuICAgICAgICBjb250YWluZXJJZCA9IGNvbnRhaW5lcnMucHVzaChjb250YWluZXIpIC0gMTtcbiAgICAgICAgc3R5bGVFbGVtZW50c1tjb250YWluZXJJZF0gPSB7fTtcbiAgICB9XG5cbiAgICAvLyB0cnkgdG8gZ2V0IHRoZSBjb3JyZXBvbmRpbmcgY29udGFpbmVyICsgcG9zaXRpb24gc3R5bGVFbGVtZW50LCBjcmVhdGUgaXQgb3RoZXJ3aXNlXG4gICAgdmFyIHN0eWxlRWxlbWVudDtcblxuICAgIGlmIChzdHlsZUVsZW1lbnRzW2NvbnRhaW5lcklkXSAhPT0gdW5kZWZpbmVkICYmIHN0eWxlRWxlbWVudHNbY29udGFpbmVySWRdW3Bvc2l0aW9uXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHN0eWxlRWxlbWVudCA9IHN0eWxlRWxlbWVudHNbY29udGFpbmVySWRdW3Bvc2l0aW9uXTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBzdHlsZUVsZW1lbnQgPSBzdHlsZUVsZW1lbnRzW2NvbnRhaW5lcklkXVtwb3NpdGlvbl0gPSBjcmVhdGVTdHlsZUVsZW1lbnQoKTtcblxuICAgICAgICBpZiAocG9zaXRpb24gPT09ICdwcmVwZW5kJykge1xuICAgICAgICAgICAgY29udGFpbmVyLmluc2VydEJlZm9yZShzdHlsZUVsZW1lbnQsIGNvbnRhaW5lci5jaGlsZE5vZGVzWzBdKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChzdHlsZUVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gc3RyaXAgcG90ZW50aWFsIFVURi04IEJPTSBpZiBjc3Mgd2FzIHJlYWQgZnJvbSBhIGZpbGVcbiAgICBpZiAoY3NzLmNoYXJDb2RlQXQoMCkgPT09IDB4RkVGRikgeyBjc3MgPSBjc3Muc3Vic3RyKDEsIGNzcy5sZW5ndGgpOyB9XG5cbiAgICAvLyBhY3R1YWxseSBhZGQgdGhlIHN0eWxlc2hlZXRcbiAgICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICAgICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCArPSBjc3NcbiAgICB9IGVsc2Uge1xuICAgICAgICBzdHlsZUVsZW1lbnQudGV4dENvbnRlbnQgKz0gY3NzO1xuICAgIH1cblxuICAgIHJldHVybiBzdHlsZUVsZW1lbnQ7XG59O1xuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQoKSB7XG4gICAgdmFyIHN0eWxlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0L2NzcycpO1xuICAgIHJldHVybiBzdHlsZUVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0Q3NzO1xubW9kdWxlLmV4cG9ydHMuaW5zZXJ0Q3NzID0gaW5zZXJ0Q3NzO1xuIiwiIWZ1bmN0aW9uKGUsdCl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9dCgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUodCk6ZS5kYXlqc19wbHVnaW5fbG9jYWxpemVkRm9ybWF0PXQoKX0odGhpcyxmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO3JldHVybiBmdW5jdGlvbihlLHQsbyl7dmFyIG49dC5wcm90b3R5cGUscj1uLmZvcm1hdCxNPXtMVFM6XCJoOm1tOnNzIEFcIixMVDpcImg6bW0gQVwiLEw6XCJNTS9ERC9ZWVlZXCIsTEw6XCJNTU1NIEQsIFlZWVlcIixMTEw6XCJNTU1NIEQsIFlZWVkgaDptbSBBXCIsTExMTDpcImRkZGQsIE1NTU0gRCwgWVlZWSBoOm1tIEFcIn07by5lbi5mb3JtYXRzPU07bi5mb3JtYXQ9ZnVuY3Rpb24oZSl7dm9pZCAwPT09ZSYmKGU9XCJZWVlZLU1NLUREVEhIOm1tOnNzWlwiKTt2YXIgdD10aGlzLiRsb2NhbGUoKS5mb3JtYXRzLG89dm9pZCAwPT09dD97fTp0LG49ZS5yZXBsYWNlKC8oXFxbW15cXF1dK10pfChMVFM/fGx7MSw0fXxMezEsNH0pL2csZnVuY3Rpb24oZSx0LG4pe3ZhciByPW4mJm4udG9VcHBlckNhc2UoKTtyZXR1cm4gdHx8b1tuXXx8TVtuXXx8b1tyXS5yZXBsYWNlKC8oXFxbW15cXF1dK10pfChNTU1NfE1NfEREfGRkZGQpL2csZnVuY3Rpb24oZSx0LG8pe3JldHVybiB0fHxvLnNsaWNlKDEpfSl9KTtyZXR1cm4gci5jYWxsKHRoaXMsbil9fX0pO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmV4cG9ydCB2YXIgUmVhY3RSZWR1eENvbnRleHQgPVxuLyojX19QVVJFX18qL1xuUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgUmVhY3RSZWR1eENvbnRleHQuZGlzcGxheU5hbWUgPSAnUmVhY3RSZWR1eCc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWN0UmVkdXhDb250ZXh0OyIsIi8vIERlZmF1bHQgdG8gYSBkdW1teSBcImJhdGNoXCIgaW1wbGVtZW50YXRpb24gdGhhdCBqdXN0IHJ1bnMgdGhlIGNhbGxiYWNrXG5mdW5jdGlvbiBkZWZhdWx0Tm9vcEJhdGNoKGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKCk7XG59XG5cbnZhciBiYXRjaCA9IGRlZmF1bHROb29wQmF0Y2g7IC8vIEFsbG93IGluamVjdGluZyBhbm90aGVyIGJhdGNoaW5nIGZ1bmN0aW9uIGxhdGVyXG5cbmV4cG9ydCB2YXIgc2V0QmF0Y2ggPSBmdW5jdGlvbiBzZXRCYXRjaChuZXdCYXRjaCkge1xuICByZXR1cm4gYmF0Y2ggPSBuZXdCYXRjaDtcbn07IC8vIFN1cHBseSBhIGdldHRlciBqdXN0IHRvIHNraXAgZGVhbGluZyB3aXRoIEVTTSBiaW5kaW5nc1xuXG5leHBvcnQgdmFyIGdldEJhdGNoID0gZnVuY3Rpb24gZ2V0QmF0Y2goKSB7XG4gIHJldHVybiBiYXRjaDtcbn07IiwiaW1wb3J0IHsgZ2V0QmF0Y2ggfSBmcm9tICcuL2JhdGNoJzsgLy8gZW5jYXBzdWxhdGVzIHRoZSBzdWJzY3JpcHRpb24gbG9naWMgZm9yIGNvbm5lY3RpbmcgYSBjb21wb25lbnQgdG8gdGhlIHJlZHV4IHN0b3JlLCBhc1xuLy8gd2VsbCBhcyBuZXN0aW5nIHN1YnNjcmlwdGlvbnMgb2YgZGVzY2VuZGFudCBjb21wb25lbnRzLCBzbyB0aGF0IHdlIGNhbiBlbnN1cmUgdGhlXG4vLyBhbmNlc3RvciBjb21wb25lbnRzIHJlLXJlbmRlciBiZWZvcmUgZGVzY2VuZGFudHNcblxudmFyIG51bGxMaXN0ZW5lcnMgPSB7XG4gIG5vdGlmeTogZnVuY3Rpb24gbm90aWZ5KCkge31cbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpc3RlbmVyQ29sbGVjdGlvbigpIHtcbiAgdmFyIGJhdGNoID0gZ2V0QmF0Y2goKTtcbiAgdmFyIGZpcnN0ID0gbnVsbDtcbiAgdmFyIGxhc3QgPSBudWxsO1xuICByZXR1cm4ge1xuICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgIGZpcnN0ID0gbnVsbDtcbiAgICAgIGxhc3QgPSBudWxsO1xuICAgIH0sXG4gICAgbm90aWZ5OiBmdW5jdGlvbiBub3RpZnkoKSB7XG4gICAgICBiYXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBsaXN0ZW5lciA9IGZpcnN0O1xuXG4gICAgICAgIHdoaWxlIChsaXN0ZW5lcikge1xuICAgICAgICAgIGxpc3RlbmVyLmNhbGxiYWNrKCk7XG4gICAgICAgICAgbGlzdGVuZXIgPSBsaXN0ZW5lci5uZXh0O1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgdmFyIGxpc3RlbmVycyA9IFtdO1xuICAgICAgdmFyIGxpc3RlbmVyID0gZmlyc3Q7XG5cbiAgICAgIHdoaWxlIChsaXN0ZW5lcikge1xuICAgICAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgICAgIGxpc3RlbmVyID0gbGlzdGVuZXIubmV4dDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGxpc3RlbmVycztcbiAgICB9LFxuICAgIHN1YnNjcmliZTogZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrKSB7XG4gICAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICAgIHZhciBsaXN0ZW5lciA9IGxhc3QgPSB7XG4gICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgICAgbmV4dDogbnVsbCxcbiAgICAgICAgcHJldjogbGFzdFxuICAgICAgfTtcblxuICAgICAgaWYgKGxpc3RlbmVyLnByZXYpIHtcbiAgICAgICAgbGlzdGVuZXIucHJldi5uZXh0ID0gbGlzdGVuZXI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmaXJzdCA9IGxpc3RlbmVyO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICAgIGlmICghaXNTdWJzY3JpYmVkIHx8IGZpcnN0ID09PSBudWxsKSByZXR1cm47XG4gICAgICAgIGlzU3Vic2NyaWJlZCA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChsaXN0ZW5lci5uZXh0KSB7XG4gICAgICAgICAgbGlzdGVuZXIubmV4dC5wcmV2ID0gbGlzdGVuZXIucHJldjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsYXN0ID0gbGlzdGVuZXIucHJldjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChsaXN0ZW5lci5wcmV2KSB7XG4gICAgICAgICAgbGlzdGVuZXIucHJldi5uZXh0ID0gbGlzdGVuZXIubmV4dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBmaXJzdCA9IGxpc3RlbmVyLm5leHQ7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuXG52YXIgU3Vic2NyaXB0aW9uID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU3Vic2NyaXB0aW9uKHN0b3JlLCBwYXJlbnRTdWIpIHtcbiAgICB0aGlzLnN0b3JlID0gc3RvcmU7XG4gICAgdGhpcy5wYXJlbnRTdWIgPSBwYXJlbnRTdWI7XG4gICAgdGhpcy51bnN1YnNjcmliZSA9IG51bGw7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSBudWxsTGlzdGVuZXJzO1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlciA9IHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlci5iaW5kKHRoaXMpO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN1YnNjcmlwdGlvbi5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmFkZE5lc3RlZFN1YiA9IGZ1bmN0aW9uIGFkZE5lc3RlZFN1YihsaXN0ZW5lcikge1xuICAgIHRoaXMudHJ5U3Vic2NyaWJlKCk7XG4gICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzLnN1YnNjcmliZShsaXN0ZW5lcik7XG4gIH07XG5cbiAgX3Byb3RvLm5vdGlmeU5lc3RlZFN1YnMgPSBmdW5jdGlvbiBub3RpZnlOZXN0ZWRTdWJzKCkge1xuICAgIHRoaXMubGlzdGVuZXJzLm5vdGlmeSgpO1xuICB9O1xuXG4gIF9wcm90by5oYW5kbGVDaGFuZ2VXcmFwcGVyID0gZnVuY3Rpb24gaGFuZGxlQ2hhbmdlV3JhcHBlcigpIHtcbiAgICBpZiAodGhpcy5vblN0YXRlQ2hhbmdlKSB7XG4gICAgICB0aGlzLm9uU3RhdGVDaGFuZ2UoKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmlzU3Vic2NyaWJlZCA9IGZ1bmN0aW9uIGlzU3Vic2NyaWJlZCgpIHtcbiAgICByZXR1cm4gQm9vbGVhbih0aGlzLnVuc3Vic2NyaWJlKTtcbiAgfTtcblxuICBfcHJvdG8udHJ5U3Vic2NyaWJlID0gZnVuY3Rpb24gdHJ5U3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy51bnN1YnNjcmliZSkge1xuICAgICAgdGhpcy51bnN1YnNjcmliZSA9IHRoaXMucGFyZW50U3ViID8gdGhpcy5wYXJlbnRTdWIuYWRkTmVzdGVkU3ViKHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlcikgOiB0aGlzLnN0b3JlLnN1YnNjcmliZSh0aGlzLmhhbmRsZUNoYW5nZVdyYXBwZXIpO1xuICAgICAgdGhpcy5saXN0ZW5lcnMgPSBjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24oKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnRyeVVuc3Vic2NyaWJlID0gZnVuY3Rpb24gdHJ5VW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKHRoaXMudW5zdWJzY3JpYmUpIHtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUoKTtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUgPSBudWxsO1xuICAgICAgdGhpcy5saXN0ZW5lcnMuY2xlYXIoKTtcbiAgICAgIHRoaXMubGlzdGVuZXJzID0gbnVsbExpc3RlbmVycztcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIFN1YnNjcmlwdGlvbjtcbn0oKTtcblxuZXhwb3J0IHsgU3Vic2NyaXB0aW9uIGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbywgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi9Db250ZXh0JztcbmltcG9ydCBTdWJzY3JpcHRpb24gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcblxuZnVuY3Rpb24gUHJvdmlkZXIoX3JlZikge1xuICB2YXIgc3RvcmUgPSBfcmVmLnN0b3JlLFxuICAgICAgY29udGV4dCA9IF9yZWYuY29udGV4dCxcbiAgICAgIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbjtcbiAgdmFyIGNvbnRleHRWYWx1ZSA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHZhciBzdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKHN0b3JlKTtcbiAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IHN1YnNjcmlwdGlvbi5ub3RpZnlOZXN0ZWRTdWJzO1xuICAgIHJldHVybiB7XG4gICAgICBzdG9yZTogc3RvcmUsXG4gICAgICBzdWJzY3JpcHRpb246IHN1YnNjcmlwdGlvblxuICAgIH07XG4gIH0sIFtzdG9yZV0pO1xuICB2YXIgcHJldmlvdXNTdGF0ZSA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBzdG9yZS5nZXRTdGF0ZSgpO1xuICB9LCBbc3RvcmVdKTtcbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc3Vic2NyaXB0aW9uID0gY29udGV4dFZhbHVlLnN1YnNjcmlwdGlvbjtcbiAgICBzdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7XG5cbiAgICBpZiAocHJldmlvdXNTdGF0ZSAhPT0gc3RvcmUuZ2V0U3RhdGUoKSkge1xuICAgICAgc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgc3Vic2NyaXB0aW9uLnRyeVVuc3Vic2NyaWJlKCk7XG4gICAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IG51bGw7XG4gICAgfTtcbiAgfSwgW2NvbnRleHRWYWx1ZSwgcHJldmlvdXNTdGF0ZV0pO1xuICB2YXIgQ29udGV4dCA9IGNvbnRleHQgfHwgUmVhY3RSZWR1eENvbnRleHQ7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogY29udGV4dFZhbHVlXG4gIH0sIGNoaWxkcmVuKTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgUHJvdmlkZXIucHJvcFR5cGVzID0ge1xuICAgIHN0b3JlOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgc3Vic2NyaWJlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgZGlzcGF0Y2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICBnZXRTdGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICAgIH0pLFxuICAgIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5hbnlcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvdmlkZXI7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JzsgLy8gUmVhY3QgY3VycmVudGx5IHRocm93cyBhIHdhcm5pbmcgd2hlbiB1c2luZyB1c2VMYXlvdXRFZmZlY3Qgb24gdGhlIHNlcnZlci5cbi8vIFRvIGdldCBhcm91bmQgaXQsIHdlIGNhbiBjb25kaXRpb25hbGx5IHVzZUVmZmVjdCBvbiB0aGUgc2VydmVyIChuby1vcCkgYW5kXG4vLyB1c2VMYXlvdXRFZmZlY3QgaW4gdGhlIGJyb3dzZXIuIFdlIG5lZWQgdXNlTGF5b3V0RWZmZWN0IHRvIGVuc3VyZSB0aGUgc3RvcmVcbi8vIHN1YnNjcmlwdGlvbiBjYWxsYmFjayBhbHdheXMgaGFzIHRoZSBzZWxlY3RvciBmcm9tIHRoZSBsYXRlc3QgcmVuZGVyIGNvbW1pdFxuLy8gYXZhaWxhYmxlLCBvdGhlcndpc2UgYSBzdG9yZSB1cGRhdGUgbWF5IGhhcHBlbiBiZXR3ZWVuIHJlbmRlciBhbmQgdGhlIGVmZmVjdCxcbi8vIHdoaWNoIG1heSBjYXVzZSBtaXNzZWQgdXBkYXRlczsgd2UgYWxzbyBtdXN0IGVuc3VyZSB0aGUgc3RvcmUgc3Vic2NyaXB0aW9uXG4vLyBpcyBjcmVhdGVkIHN5bmNocm9ub3VzbHksIG90aGVyd2lzZSBhIHN0b3JlIHVwZGF0ZSBtYXkgb2NjdXIgYmVmb3JlIHRoZVxuLy8gc3Vic2NyaXB0aW9uIGlzIGNyZWF0ZWQgYW5kIGFuIGluY29uc2lzdGVudCBzdGF0ZSBtYXkgYmUgb2JzZXJ2ZWRcblxuZXhwb3J0IHZhciB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50ICE9PSAndW5kZWZpbmVkJyA/IHVzZUxheW91dEVmZmVjdCA6IHVzZUVmZmVjdDsiLCJpbXBvcnQgeyB1c2VSZWR1Y2VyLCB1c2VSZWYsIHVzZU1lbW8sIHVzZUNvbnRleHQsIHVzZURlYnVnVmFsdWUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VSZWR1eENvbnRleHQgYXMgdXNlRGVmYXVsdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vdXNlUmVkdXhDb250ZXh0JztcbmltcG9ydCBTdWJzY3JpcHRpb24gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuLi91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0JztcblxudmFyIHJlZkVxdWFsaXR5ID0gZnVuY3Rpb24gcmVmRXF1YWxpdHkoYSwgYikge1xuICByZXR1cm4gYSA9PT0gYjtcbn07XG5cbmZ1bmN0aW9uIHVzZVNlbGVjdG9yV2l0aFN0b3JlQW5kU3Vic2NyaXB0aW9uKHNlbGVjdG9yLCBlcXVhbGl0eUZuLCBzdG9yZSwgY29udGV4dFN1Yikge1xuICB2YXIgX3VzZVJlZHVjZXIgPSB1c2VSZWR1Y2VyKGZ1bmN0aW9uIChzKSB7XG4gICAgcmV0dXJuIHMgKyAxO1xuICB9LCAwKSxcbiAgICAgIGZvcmNlUmVuZGVyID0gX3VzZVJlZHVjZXJbMV07XG5cbiAgdmFyIHN1YnNjcmlwdGlvbiA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBuZXcgU3Vic2NyaXB0aW9uKHN0b3JlLCBjb250ZXh0U3ViKTtcbiAgfSwgW3N0b3JlLCBjb250ZXh0U3ViXSk7XG4gIHZhciBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yID0gdXNlUmVmKCk7XG4gIHZhciBsYXRlc3RTZWxlY3RvciA9IHVzZVJlZigpO1xuICB2YXIgbGF0ZXN0U3RvcmVTdGF0ZSA9IHVzZVJlZigpO1xuICB2YXIgbGF0ZXN0U2VsZWN0ZWRTdGF0ZSA9IHVzZVJlZigpO1xuICB2YXIgc3RvcmVTdGF0ZSA9IHN0b3JlLmdldFN0YXRlKCk7XG4gIHZhciBzZWxlY3RlZFN0YXRlO1xuXG4gIHRyeSB7XG4gICAgaWYgKHNlbGVjdG9yICE9PSBsYXRlc3RTZWxlY3Rvci5jdXJyZW50IHx8IHN0b3JlU3RhdGUgIT09IGxhdGVzdFN0b3JlU3RhdGUuY3VycmVudCB8fCBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQpIHtcbiAgICAgIHNlbGVjdGVkU3RhdGUgPSBzZWxlY3RvcihzdG9yZVN0YXRlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2VsZWN0ZWRTdGF0ZSA9IGxhdGVzdFNlbGVjdGVkU3RhdGUuY3VycmVudDtcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGlmIChsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQpIHtcbiAgICAgIGVyci5tZXNzYWdlICs9IFwiXFxuVGhlIGVycm9yIG1heSBiZSBjb3JyZWxhdGVkIHdpdGggdGhpcyBwcmV2aW91cyBlcnJvcjpcXG5cIiArIGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudC5zdGFjayArIFwiXFxuXFxuXCI7XG4gICAgfVxuXG4gICAgdGhyb3cgZXJyO1xuICB9XG5cbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgbGF0ZXN0U2VsZWN0b3IuY3VycmVudCA9IHNlbGVjdG9yO1xuICAgIGxhdGVzdFN0b3JlU3RhdGUuY3VycmVudCA9IHN0b3JlU3RhdGU7XG4gICAgbGF0ZXN0U2VsZWN0ZWRTdGF0ZS5jdXJyZW50ID0gc2VsZWN0ZWRTdGF0ZTtcbiAgICBsYXRlc3RTdWJzY3JpcHRpb25DYWxsYmFja0Vycm9yLmN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gIH0pO1xuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBjaGVja0ZvclVwZGF0ZXMoKSB7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgbmV3U2VsZWN0ZWRTdGF0ZSA9IGxhdGVzdFNlbGVjdG9yLmN1cnJlbnQoc3RvcmUuZ2V0U3RhdGUoKSk7XG5cbiAgICAgICAgaWYgKGVxdWFsaXR5Rm4obmV3U2VsZWN0ZWRTdGF0ZSwgbGF0ZXN0U2VsZWN0ZWRTdGF0ZS5jdXJyZW50KSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxhdGVzdFNlbGVjdGVkU3RhdGUuY3VycmVudCA9IG5ld1NlbGVjdGVkU3RhdGU7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgLy8gd2UgaWdub3JlIGFsbCBlcnJvcnMgaGVyZSwgc2luY2Ugd2hlbiB0aGUgY29tcG9uZW50XG4gICAgICAgIC8vIGlzIHJlLXJlbmRlcmVkLCB0aGUgc2VsZWN0b3JzIGFyZSBjYWxsZWQgYWdhaW4sIGFuZFxuICAgICAgICAvLyB3aWxsIHRocm93IGFnYWluLCBpZiBuZWl0aGVyIHByb3BzIG5vciBzdG9yZSBzdGF0ZVxuICAgICAgICAvLyBjaGFuZ2VkXG4gICAgICAgIGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudCA9IGVycjtcbiAgICAgIH1cblxuICAgICAgZm9yY2VSZW5kZXIoKTtcbiAgICB9XG5cbiAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IGNoZWNrRm9yVXBkYXRlcztcbiAgICBzdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7XG4gICAgY2hlY2tGb3JVcGRhdGVzKCk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBzdWJzY3JpcHRpb24udHJ5VW5zdWJzY3JpYmUoKTtcbiAgICB9O1xuICB9LCBbc3RvcmUsIHN1YnNjcmlwdGlvbl0pO1xuICByZXR1cm4gc2VsZWN0ZWRTdGF0ZTtcbn1cbi8qKlxyXG4gKiBIb29rIGZhY3RvcnksIHdoaWNoIGNyZWF0ZXMgYSBgdXNlU2VsZWN0b3JgIGhvb2sgYm91bmQgdG8gYSBnaXZlbiBjb250ZXh0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1JlYWN0LkNvbnRleHR9IFtjb250ZXh0PVJlYWN0UmVkdXhDb250ZXh0XSBDb250ZXh0IHBhc3NlZCB0byB5b3VyIGA8UHJvdmlkZXI+YC5cclxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGB1c2VTZWxlY3RvcmAgaG9vayBib3VuZCB0byB0aGUgc3BlY2lmaWVkIGNvbnRleHQuXHJcbiAqL1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZWxlY3Rvckhvb2soY29udGV4dCkge1xuICBpZiAoY29udGV4dCA9PT0gdm9pZCAwKSB7XG4gICAgY29udGV4dCA9IFJlYWN0UmVkdXhDb250ZXh0O1xuICB9XG5cbiAgdmFyIHVzZVJlZHV4Q29udGV4dCA9IGNvbnRleHQgPT09IFJlYWN0UmVkdXhDb250ZXh0ID8gdXNlRGVmYXVsdFJlZHV4Q29udGV4dCA6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KTtcbiAgfTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVzZVNlbGVjdG9yKHNlbGVjdG9yLCBlcXVhbGl0eUZuKSB7XG4gICAgaWYgKGVxdWFsaXR5Rm4gPT09IHZvaWQgMCkge1xuICAgICAgZXF1YWxpdHlGbiA9IHJlZkVxdWFsaXR5O1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICFzZWxlY3Rvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IG11c3QgcGFzcyBhIHNlbGVjdG9yIHRvIHVzZVNlbGVjdG9yXCIpO1xuICAgIH1cblxuICAgIHZhciBfdXNlUmVkdXhDb250ZXh0ID0gdXNlUmVkdXhDb250ZXh0KCksXG4gICAgICAgIHN0b3JlID0gX3VzZVJlZHV4Q29udGV4dC5zdG9yZSxcbiAgICAgICAgY29udGV4dFN1YiA9IF91c2VSZWR1eENvbnRleHQuc3Vic2NyaXB0aW9uO1xuXG4gICAgdmFyIHNlbGVjdGVkU3RhdGUgPSB1c2VTZWxlY3RvcldpdGhTdG9yZUFuZFN1YnNjcmlwdGlvbihzZWxlY3RvciwgZXF1YWxpdHlGbiwgc3RvcmUsIGNvbnRleHRTdWIpO1xuICAgIHVzZURlYnVnVmFsdWUoc2VsZWN0ZWRTdGF0ZSk7XG4gICAgcmV0dXJuIHNlbGVjdGVkU3RhdGU7XG4gIH07XG59XG4vKipcclxuICogQSBob29rIHRvIGFjY2VzcyB0aGUgcmVkdXggc3RvcmUncyBzdGF0ZS4gVGhpcyBob29rIHRha2VzIGEgc2VsZWN0b3IgZnVuY3Rpb25cclxuICogYXMgYW4gYXJndW1lbnQuIFRoZSBzZWxlY3RvciBpcyBjYWxsZWQgd2l0aCB0aGUgc3RvcmUgc3RhdGUuXHJcbiAqXHJcbiAqIFRoaXMgaG9vayB0YWtlcyBhbiBvcHRpb25hbCBlcXVhbGl0eSBjb21wYXJpc29uIGZ1bmN0aW9uIGFzIHRoZSBzZWNvbmQgcGFyYW1ldGVyXHJcbiAqIHRoYXQgYWxsb3dzIHlvdSB0byBjdXN0b21pemUgdGhlIHdheSB0aGUgc2VsZWN0ZWQgc3RhdGUgaXMgY29tcGFyZWQgdG8gZGV0ZXJtaW5lXHJcbiAqIHdoZXRoZXIgdGhlIGNvbXBvbmVudCBuZWVkcyB0byBiZSByZS1yZW5kZXJlZC5cclxuICpcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gc2VsZWN0b3IgdGhlIHNlbGVjdG9yIGZ1bmN0aW9uXHJcbiAqIEBwYXJhbSB7RnVuY3Rpb249fSBlcXVhbGl0eUZuIHRoZSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgdXNlZCB0byBkZXRlcm1pbmUgZXF1YWxpdHlcclxuICpcclxuICogQHJldHVybnMge2FueX0gdGhlIHNlbGVjdGVkIHN0YXRlXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuICogaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCdcclxuICpcclxuICogZXhwb3J0IGNvbnN0IENvdW50ZXJDb21wb25lbnQgPSAoKSA9PiB7XHJcbiAqICAgY29uc3QgY291bnRlciA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlLmNvdW50ZXIpXHJcbiAqICAgcmV0dXJuIDxkaXY+e2NvdW50ZXJ9PC9kaXY+XHJcbiAqIH1cclxuICovXG5cbmV4cG9ydCB2YXIgdXNlU2VsZWN0b3IgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU2VsZWN0b3JIb29rKCk7IiwiaW1wb3J0IFByb3ZpZGVyIGZyb20gJy4vY29tcG9uZW50cy9Qcm92aWRlcic7XG5pbXBvcnQgY29ubmVjdEFkdmFuY2VkIGZyb20gJy4vY29tcG9uZW50cy9jb25uZWN0QWR2YW5jZWQnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL2NvbXBvbmVudHMvQ29udGV4dCc7XG5pbXBvcnQgY29ubmVjdCBmcm9tICcuL2Nvbm5lY3QvY29ubmVjdCc7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCwgY3JlYXRlRGlzcGF0Y2hIb29rIH0gZnJvbSAnLi9ob29rcy91c2VEaXNwYXRjaCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciwgY3JlYXRlU2VsZWN0b3JIb29rIH0gZnJvbSAnLi9ob29rcy91c2VTZWxlY3Rvcic7XG5pbXBvcnQgeyB1c2VTdG9yZSwgY3JlYXRlU3RvcmVIb29rIH0gZnJvbSAnLi9ob29rcy91c2VTdG9yZSc7XG5pbXBvcnQgeyBzZXRCYXRjaCB9IGZyb20gJy4vdXRpbHMvYmF0Y2gnO1xuaW1wb3J0IHsgdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMgYXMgYmF0Y2ggfSBmcm9tICcuL3V0aWxzL3JlYWN0QmF0Y2hlZFVwZGF0ZXMnO1xuaW1wb3J0IHNoYWxsb3dFcXVhbCBmcm9tICcuL3V0aWxzL3NoYWxsb3dFcXVhbCc7XG5zZXRCYXRjaChiYXRjaCk7XG5leHBvcnQgeyBQcm92aWRlciwgY29ubmVjdEFkdmFuY2VkLCBSZWFjdFJlZHV4Q29udGV4dCwgY29ubmVjdCwgYmF0Y2gsIHVzZURpc3BhdGNoLCBjcmVhdGVEaXNwYXRjaEhvb2ssIHVzZVNlbGVjdG9yLCBjcmVhdGVTZWxlY3Rvckhvb2ssIHVzZVN0b3JlLCBjcmVhdGVTdG9yZUhvb2ssIHNoYWxsb3dFcXVhbCB9OyIsInZhciBsb2NhbGUgPSB7XG4gIGxvY2FsZTogJ2VuX1VTJyxcbiAgdG9kYXk6ICdUb2RheScsXG4gIG5vdzogJ05vdycsXG4gIGJhY2tUb1RvZGF5OiAnQmFjayB0byB0b2RheScsXG4gIG9rOiAnT2snLFxuICBjbGVhcjogJ0NsZWFyJyxcbiAgbW9udGg6ICdNb250aCcsXG4gIHllYXI6ICdZZWFyJyxcbiAgdGltZVNlbGVjdDogJ3NlbGVjdCB0aW1lJyxcbiAgZGF0ZVNlbGVjdDogJ3NlbGVjdCBkYXRlJyxcbiAgd2Vla1NlbGVjdDogJ0Nob29zZSBhIHdlZWsnLFxuICBtb250aFNlbGVjdDogJ0Nob29zZSBhIG1vbnRoJyxcbiAgeWVhclNlbGVjdDogJ0Nob29zZSBhIHllYXInLFxuICBkZWNhZGVTZWxlY3Q6ICdDaG9vc2UgYSBkZWNhZGUnLFxuICB5ZWFyRm9ybWF0OiAnWVlZWScsXG4gIGRhdGVGb3JtYXQ6ICdNL0QvWVlZWScsXG4gIGRheUZvcm1hdDogJ0QnLFxuICBkYXRlVGltZUZvcm1hdDogJ00vRC9ZWVlZIEhIOm1tOnNzJyxcbiAgbW9udGhCZWZvcmVZZWFyOiB0cnVlLFxuICBwcmV2aW91c01vbnRoOiAnUHJldmlvdXMgbW9udGggKFBhZ2VVcCknLFxuICBuZXh0TW9udGg6ICdOZXh0IG1vbnRoIChQYWdlRG93biknLFxuICBwcmV2aW91c1llYXI6ICdMYXN0IHllYXIgKENvbnRyb2wgKyBsZWZ0KScsXG4gIG5leHRZZWFyOiAnTmV4dCB5ZWFyIChDb250cm9sICsgcmlnaHQpJyxcbiAgcHJldmlvdXNEZWNhZGU6ICdMYXN0IGRlY2FkZScsXG4gIG5leHREZWNhZGU6ICdOZXh0IGRlY2FkZScsXG4gIHByZXZpb3VzQ2VudHVyeTogJ0xhc3QgY2VudHVyeScsXG4gIG5leHRDZW50dXJ5OiAnTmV4dCBjZW50dXJ5J1xufTtcbmV4cG9ydCBkZWZhdWx0IGxvY2FsZTsiLCJ2YXIgbG9jYWxlID0ge1xuICBwbGFjZWhvbGRlcjogJ1NlbGVjdCB0aW1lJyxcbiAgcmFuZ2VQbGFjZWhvbGRlcjogWydTdGFydCB0aW1lJywgJ0VuZCB0aW1lJ11cbn07XG5leHBvcnQgZGVmYXVsdCBsb2NhbGU7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHNcIjtcbmltcG9ydCBDYWxlbmRhckxvY2FsZSBmcm9tIFwicmMtcGlja2VyL2VzL2xvY2FsZS9lbl9VU1wiO1xuaW1wb3J0IFRpbWVQaWNrZXJMb2NhbGUgZnJvbSAnLi4vLi4vdGltZS1waWNrZXIvbG9jYWxlL2VuX1VTJzsgLy8gTWVyZ2UgaW50byBhIGxvY2FsZSBvYmplY3RcblxudmFyIGxvY2FsZSA9IHtcbiAgbGFuZzogX2V4dGVuZHMoe1xuICAgIHBsYWNlaG9sZGVyOiAnU2VsZWN0IGRhdGUnLFxuICAgIHllYXJQbGFjZWhvbGRlcjogJ1NlbGVjdCB5ZWFyJyxcbiAgICBxdWFydGVyUGxhY2Vob2xkZXI6ICdTZWxlY3QgcXVhcnRlcicsXG4gICAgbW9udGhQbGFjZWhvbGRlcjogJ1NlbGVjdCBtb250aCcsXG4gICAgd2Vla1BsYWNlaG9sZGVyOiAnU2VsZWN0IHdlZWsnLFxuICAgIHJhbmdlUGxhY2Vob2xkZXI6IFsnU3RhcnQgZGF0ZScsICdFbmQgZGF0ZSddLFxuICAgIHJhbmdlWWVhclBsYWNlaG9sZGVyOiBbJ1N0YXJ0IHllYXInLCAnRW5kIHllYXInXSxcbiAgICByYW5nZU1vbnRoUGxhY2Vob2xkZXI6IFsnU3RhcnQgbW9udGgnLCAnRW5kIG1vbnRoJ10sXG4gICAgcmFuZ2VXZWVrUGxhY2Vob2xkZXI6IFsnU3RhcnQgd2VlaycsICdFbmQgd2VlayddXG4gIH0sIENhbGVuZGFyTG9jYWxlKSxcbiAgdGltZVBpY2tlckxvY2FsZTogX2V4dGVuZHMoe30sIFRpbWVQaWNrZXJMb2NhbGUpXG59OyAvLyBBbGwgc2V0dGluZ3MgYXQ6XG4vLyBodHRwczovL2dpdGh1Yi5jb20vYW50LWRlc2lnbi9hbnQtZGVzaWduL2Jsb2IvbWFzdGVyL2NvbXBvbmVudHMvZGF0ZS1waWNrZXIvbG9jYWxlL2V4YW1wbGUuanNvblxuXG5leHBvcnQgZGVmYXVsdCBsb2NhbGU7IiwiLyogZXNsaW50LWRpc2FibGUgbm8tdGVtcGxhdGUtY3VybHktaW4tc3RyaW5nICovXG5pbXBvcnQgUGFnaW5hdGlvbiBmcm9tIFwicmMtcGFnaW5hdGlvbi9lcy9sb2NhbGUvZW5fVVNcIjtcbmltcG9ydCBEYXRlUGlja2VyIGZyb20gJy4uL2RhdGUtcGlja2VyL2xvY2FsZS9lbl9VUyc7XG5pbXBvcnQgVGltZVBpY2tlciBmcm9tICcuLi90aW1lLXBpY2tlci9sb2NhbGUvZW5fVVMnO1xuaW1wb3J0IENhbGVuZGFyIGZyb20gJy4uL2NhbGVuZGFyL2xvY2FsZS9lbl9VUyc7XG52YXIgdHlwZVRlbXBsYXRlID0gJyR7bGFiZWx9IGlzIG5vdCBhIHZhbGlkICR7dHlwZX0nO1xudmFyIGxvY2FsZVZhbHVlcyA9IHtcbiAgbG9jYWxlOiAnZW4nLFxuICBQYWdpbmF0aW9uOiBQYWdpbmF0aW9uLFxuICBEYXRlUGlja2VyOiBEYXRlUGlja2VyLFxuICBUaW1lUGlja2VyOiBUaW1lUGlja2VyLFxuICBDYWxlbmRhcjogQ2FsZW5kYXIsXG4gIGdsb2JhbDoge1xuICAgIHBsYWNlaG9sZGVyOiAnUGxlYXNlIHNlbGVjdCdcbiAgfSxcbiAgVGFibGU6IHtcbiAgICBmaWx0ZXJUaXRsZTogJ0ZpbHRlciBtZW51JyxcbiAgICBmaWx0ZXJDb25maXJtOiAnT0snLFxuICAgIGZpbHRlclJlc2V0OiAnUmVzZXQnLFxuICAgIGZpbHRlckVtcHR5VGV4dDogJ05vIGZpbHRlcnMnLFxuICAgIGVtcHR5VGV4dDogJ05vIGRhdGEnLFxuICAgIHNlbGVjdEFsbDogJ1NlbGVjdCBjdXJyZW50IHBhZ2UnLFxuICAgIHNlbGVjdEludmVydDogJ0ludmVydCBjdXJyZW50IHBhZ2UnLFxuICAgIHNlbGVjdGlvbkFsbDogJ1NlbGVjdCBhbGwgZGF0YScsXG4gICAgc29ydFRpdGxlOiAnU29ydCcsXG4gICAgZXhwYW5kOiAnRXhwYW5kIHJvdycsXG4gICAgY29sbGFwc2U6ICdDb2xsYXBzZSByb3cnLFxuICAgIHRyaWdnZXJEZXNjOiAnQ2xpY2sgc29ydCBieSBkZXNjZW5kJyxcbiAgICB0cmlnZ2VyQXNjOiAnQ2xpY2sgc29ydCBieSBhc2NlbmQnLFxuICAgIGNhbmNlbFNvcnQ6ICdDbGljayB0byBjYW5jZWwgc29ydCdcbiAgfSxcbiAgTW9kYWw6IHtcbiAgICBva1RleHQ6ICdPSycsXG4gICAgY2FuY2VsVGV4dDogJ0NhbmNlbCcsXG4gICAganVzdE9rVGV4dDogJ09LJ1xuICB9LFxuICBQb3Bjb25maXJtOiB7XG4gICAgb2tUZXh0OiAnT0snLFxuICAgIGNhbmNlbFRleHQ6ICdDYW5jZWwnXG4gIH0sXG4gIFRyYW5zZmVyOiB7XG4gICAgdGl0bGVzOiBbJycsICcnXSxcbiAgICBzZWFyY2hQbGFjZWhvbGRlcjogJ1NlYXJjaCBoZXJlJyxcbiAgICBpdGVtVW5pdDogJ2l0ZW0nLFxuICAgIGl0ZW1zVW5pdDogJ2l0ZW1zJyxcbiAgICByZW1vdmU6ICdSZW1vdmUnLFxuICAgIHNlbGVjdEN1cnJlbnQ6ICdTZWxlY3QgY3VycmVudCBwYWdlJyxcbiAgICByZW1vdmVDdXJyZW50OiAnUmVtb3ZlIGN1cnJlbnQgcGFnZScsXG4gICAgc2VsZWN0QWxsOiAnU2VsZWN0IGFsbCBkYXRhJyxcbiAgICByZW1vdmVBbGw6ICdSZW1vdmUgYWxsIGRhdGEnLFxuICAgIHNlbGVjdEludmVydDogJ0ludmVydCBjdXJyZW50IHBhZ2UnXG4gIH0sXG4gIFVwbG9hZDoge1xuICAgIHVwbG9hZGluZzogJ1VwbG9hZGluZy4uLicsXG4gICAgcmVtb3ZlRmlsZTogJ1JlbW92ZSBmaWxlJyxcbiAgICB1cGxvYWRFcnJvcjogJ1VwbG9hZCBlcnJvcicsXG4gICAgcHJldmlld0ZpbGU6ICdQcmV2aWV3IGZpbGUnLFxuICAgIGRvd25sb2FkRmlsZTogJ0Rvd25sb2FkIGZpbGUnXG4gIH0sXG4gIEVtcHR5OiB7XG4gICAgZGVzY3JpcHRpb246ICdObyBEYXRhJ1xuICB9LFxuICBJY29uOiB7XG4gICAgaWNvbjogJ2ljb24nXG4gIH0sXG4gIFRleHQ6IHtcbiAgICBlZGl0OiAnRWRpdCcsXG4gICAgY29weTogJ0NvcHknLFxuICAgIGNvcGllZDogJ0NvcGllZCcsXG4gICAgZXhwYW5kOiAnRXhwYW5kJ1xuICB9LFxuICBQYWdlSGVhZGVyOiB7XG4gICAgYmFjazogJ0JhY2snXG4gIH0sXG4gIEZvcm06IHtcbiAgICBvcHRpb25hbDogJyhvcHRpb25hbCknLFxuICAgIGRlZmF1bHRWYWxpZGF0ZU1lc3NhZ2VzOiB7XG4gICAgICBcImRlZmF1bHRcIjogJ0ZpZWxkIHZhbGlkYXRpb24gZXJyb3IgJHtsYWJlbH0nLFxuICAgICAgcmVxdWlyZWQ6ICdQbGVhc2UgZW50ZXIgJHtsYWJlbH0nLFxuICAgICAgXCJlbnVtXCI6ICcke2xhYmVsfSBtdXN0IGJlIG9uZSBvZiBbJHtlbnVtfV0nLFxuICAgICAgd2hpdGVzcGFjZTogJyR7bGFiZWx9IGNhbm5vdCBiZSBhIGJsYW5rIGNoYXJhY3RlcicsXG4gICAgICBkYXRlOiB7XG4gICAgICAgIGZvcm1hdDogJyR7bGFiZWx9IGRhdGUgZm9ybWF0IGlzIGludmFsaWQnLFxuICAgICAgICBwYXJzZTogJyR7bGFiZWx9IGNhbm5vdCBiZSBjb252ZXJ0ZWQgdG8gYSBkYXRlJyxcbiAgICAgICAgaW52YWxpZDogJyR7bGFiZWx9IGlzIGFuIGludmFsaWQgZGF0ZSdcbiAgICAgIH0sXG4gICAgICB0eXBlczoge1xuICAgICAgICBzdHJpbmc6IHR5cGVUZW1wbGF0ZSxcbiAgICAgICAgbWV0aG9kOiB0eXBlVGVtcGxhdGUsXG4gICAgICAgIGFycmF5OiB0eXBlVGVtcGxhdGUsXG4gICAgICAgIG9iamVjdDogdHlwZVRlbXBsYXRlLFxuICAgICAgICBudW1iZXI6IHR5cGVUZW1wbGF0ZSxcbiAgICAgICAgZGF0ZTogdHlwZVRlbXBsYXRlLFxuICAgICAgICBcImJvb2xlYW5cIjogdHlwZVRlbXBsYXRlLFxuICAgICAgICBpbnRlZ2VyOiB0eXBlVGVtcGxhdGUsXG4gICAgICAgIFwiZmxvYXRcIjogdHlwZVRlbXBsYXRlLFxuICAgICAgICByZWdleHA6IHR5cGVUZW1wbGF0ZSxcbiAgICAgICAgZW1haWw6IHR5cGVUZW1wbGF0ZSxcbiAgICAgICAgdXJsOiB0eXBlVGVtcGxhdGUsXG4gICAgICAgIGhleDogdHlwZVRlbXBsYXRlXG4gICAgICB9LFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIGxlbjogJyR7bGFiZWx9IG11c3QgYmUgJHtsZW59IGNoYXJhY3RlcnMnLFxuICAgICAgICBtaW46ICcke2xhYmVsfSBhdCBsZWFzdCAke21pbn0gY2hhcmFjdGVycycsXG4gICAgICAgIG1heDogJyR7bGFiZWx9IHVwIHRvICR7bWF4fSBjaGFyYWN0ZXJzJyxcbiAgICAgICAgcmFuZ2U6ICcke2xhYmVsfSBtdXN0IGJlIGJldHdlZW4gJHttaW59LSR7bWF4fSBjaGFyYWN0ZXJzJ1xuICAgICAgfSxcbiAgICAgIG51bWJlcjoge1xuICAgICAgICBsZW46ICcke2xhYmVsfSBtdXN0IGJlIGVxdWFsIHRvICR7bGVufScsXG4gICAgICAgIG1pbjogJyR7bGFiZWx9IG1pbmltdW0gdmFsdWUgaXMgJHttaW59JyxcbiAgICAgICAgbWF4OiAnJHtsYWJlbH0gbWF4aW11bSB2YWx1ZSBpcyAke21heH0nLFxuICAgICAgICByYW5nZTogJyR7bGFiZWx9IG11c3QgYmUgYmV0d2VlbiAke21pbn0tJHttYXh9J1xuICAgICAgfSxcbiAgICAgIGFycmF5OiB7XG4gICAgICAgIGxlbjogJ011c3QgYmUgJHtsZW59ICR7bGFiZWx9JyxcbiAgICAgICAgbWluOiAnQXQgbGVhc3QgJHttaW59ICR7bGFiZWx9JyxcbiAgICAgICAgbWF4OiAnQXQgbW9zdCAke21heH0gJHtsYWJlbH0nLFxuICAgICAgICByYW5nZTogJ1RoZSBhbW91bnQgb2YgJHtsYWJlbH0gbXVzdCBiZSBiZXR3ZWVuICR7bWlufS0ke21heH0nXG4gICAgICB9LFxuICAgICAgcGF0dGVybjoge1xuICAgICAgICBtaXNtYXRjaDogJyR7bGFiZWx9IGRvZXMgbm90IG1hdGNoIHRoZSBwYXR0ZXJuICR7cGF0dGVybn0nXG4gICAgICB9XG4gICAgfVxuICB9XG59O1xuZXhwb3J0IGRlZmF1bHQgbG9jYWxlVmFsdWVzOyIsImltcG9ydCBsb2NhbGUgZnJvbSAnLi4vbG9jYWxlL2RlZmF1bHQnO1xuZXhwb3J0IGRlZmF1bHQgbG9jYWxlOyIsImV4cG9ydCBkZWZhdWx0IHtcbiAgLy8gT3B0aW9ucy5qc3hcbiAgaXRlbXNfcGVyX3BhZ2U6ICcvIHBhZ2UnLFxuICBqdW1wX3RvOiAnR28gdG8nLFxuICBqdW1wX3RvX2NvbmZpcm06ICdjb25maXJtJyxcbiAgcGFnZTogJycsXG4gIC8vIFBhZ2luYXRpb24uanN4XG4gIHByZXZfcGFnZTogJ1ByZXZpb3VzIFBhZ2UnLFxuICBuZXh0X3BhZ2U6ICdOZXh0IFBhZ2UnLFxuICBwcmV2XzU6ICdQcmV2aW91cyA1IFBhZ2VzJyxcbiAgbmV4dF81OiAnTmV4dCA1IFBhZ2VzJyxcbiAgcHJldl8zOiAnUHJldmlvdXMgMyBQYWdlcycsXG4gIG5leHRfMzogJ05leHQgMyBQYWdlcydcbn07IiwiaW1wb3J0IHsgY3JlYXRlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbnZhciBMb2NhbGVDb250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZUNvbnRleHQodW5kZWZpbmVkKTtcbmV4cG9ydCBkZWZhdWx0IExvY2FsZUNvbnRleHQ7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHNcIjtcbmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjtcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlU3VwZXJcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBkZWZhdWx0TG9jYWxlRGF0YSBmcm9tICcuL2RlZmF1bHQnO1xuaW1wb3J0IExvY2FsZUNvbnRleHQgZnJvbSAnLi9jb250ZXh0JztcblxudmFyIExvY2FsZVJlY2VpdmVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhMb2NhbGVSZWNlaXZlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihMb2NhbGVSZWNlaXZlcik7XG5cbiAgZnVuY3Rpb24gTG9jYWxlUmVjZWl2ZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExvY2FsZVJlY2VpdmVyKTtcblxuICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMb2NhbGVSZWNlaXZlciwgW3tcbiAgICBrZXk6IFwiZ2V0TG9jYWxlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldExvY2FsZSgpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgY29tcG9uZW50TmFtZSA9IF90aGlzJHByb3BzLmNvbXBvbmVudE5hbWUsXG4gICAgICAgICAgZGVmYXVsdExvY2FsZSA9IF90aGlzJHByb3BzLmRlZmF1bHRMb2NhbGU7XG4gICAgICB2YXIgbG9jYWxlID0gZGVmYXVsdExvY2FsZSB8fCBkZWZhdWx0TG9jYWxlRGF0YVtjb21wb25lbnROYW1lIHx8ICdnbG9iYWwnXTtcbiAgICAgIHZhciBhbnRMb2NhbGUgPSB0aGlzLmNvbnRleHQ7XG4gICAgICB2YXIgbG9jYWxlRnJvbUNvbnRleHQgPSBjb21wb25lbnROYW1lICYmIGFudExvY2FsZSA/IGFudExvY2FsZVtjb21wb25lbnROYW1lXSA6IHt9O1xuICAgICAgcmV0dXJuIF9leHRlbmRzKF9leHRlbmRzKHt9LCB0eXBlb2YgbG9jYWxlID09PSAnZnVuY3Rpb24nID8gbG9jYWxlKCkgOiBsb2NhbGUpLCBsb2NhbGVGcm9tQ29udGV4dCB8fCB7fSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldExvY2FsZUNvZGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0TG9jYWxlQ29kZSgpIHtcbiAgICAgIHZhciBhbnRMb2NhbGUgPSB0aGlzLmNvbnRleHQ7XG4gICAgICB2YXIgbG9jYWxlQ29kZSA9IGFudExvY2FsZSAmJiBhbnRMb2NhbGUubG9jYWxlOyAvLyBIYWQgdXNlIExvY2FsZVByb3ZpZGUgYnV0IGRpZG4ndCBzZXQgbG9jYWxlXG5cbiAgICAgIGlmIChhbnRMb2NhbGUgJiYgYW50TG9jYWxlLmV4aXN0ICYmICFsb2NhbGVDb2RlKSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0TG9jYWxlRGF0YS5sb2NhbGU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBsb2NhbGVDb2RlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW4odGhpcy5nZXRMb2NhbGUoKSwgdGhpcy5nZXRMb2NhbGVDb2RlKCksIHRoaXMuY29udGV4dCk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIExvY2FsZVJlY2VpdmVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5leHBvcnQgeyBMb2NhbGVSZWNlaXZlciBhcyBkZWZhdWx0IH07XG5Mb2NhbGVSZWNlaXZlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGNvbXBvbmVudE5hbWU6ICdnbG9iYWwnXG59O1xuTG9jYWxlUmVjZWl2ZXIuY29udGV4dFR5cGUgPSBMb2NhbGVDb250ZXh0O1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUxvY2FsZVJlY2VpdmVyKGNvbXBvbmVudE5hbWUsIGRlZmF1bHRMb2NhbGUpIHtcbiAgdmFyIGFudExvY2FsZSA9IFJlYWN0LnVzZUNvbnRleHQoTG9jYWxlQ29udGV4dCk7XG4gIHZhciBjb21wb25lbnRMb2NhbGUgPSBSZWFjdC51c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgbG9jYWxlID0gZGVmYXVsdExvY2FsZSB8fCBkZWZhdWx0TG9jYWxlRGF0YVtjb21wb25lbnROYW1lIHx8ICdnbG9iYWwnXTtcbiAgICB2YXIgbG9jYWxlRnJvbUNvbnRleHQgPSBjb21wb25lbnROYW1lICYmIGFudExvY2FsZSA/IGFudExvY2FsZVtjb21wb25lbnROYW1lXSA6IHt9O1xuICAgIHJldHVybiBfZXh0ZW5kcyhfZXh0ZW5kcyh7fSwgdHlwZW9mIGxvY2FsZSA9PT0gJ2Z1bmN0aW9uJyA/IGxvY2FsZSgpIDogbG9jYWxlKSwgbG9jYWxlRnJvbUNvbnRleHQgfHwge30pO1xuICB9LCBbY29tcG9uZW50TmFtZSwgZGVmYXVsdExvY2FsZSwgYW50TG9jYWxlXSk7XG4gIHJldHVybiBbY29tcG9uZW50TG9jYWxlXTtcbn0iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDb25maWdDb250ZXh0IH0gZnJvbSAnLi4vY29uZmlnLXByb3ZpZGVyJztcblxudmFyIEVtcHR5ID0gZnVuY3Rpb24gRW1wdHkoKSB7XG4gIHZhciBfUmVhY3QkdXNlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoQ29uZmlnQ29udGV4dCksXG4gICAgICBnZXRQcmVmaXhDbHMgPSBfUmVhY3QkdXNlQ29udGV4dC5nZXRQcmVmaXhDbHM7XG5cbiAgdmFyIHByZWZpeENscyA9IGdldFByZWZpeENscygnZW1wdHktaW1nLWRlZmF1bHQnKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIHtcbiAgICBjbGFzc05hbWU6IHByZWZpeENscyxcbiAgICB3aWR0aDogXCIxODRcIixcbiAgICBoZWlnaHQ6IFwiMTUyXCIsXG4gICAgdmlld0JveDogXCIwIDAgMTg0IDE1MlwiLFxuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJnXCIsIHtcbiAgICBmaWxsOiBcIm5vbmVcIixcbiAgICBmaWxsUnVsZTogXCJldmVub2RkXCJcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJnXCIsIHtcbiAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKDI0IDMxLjY3KVwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZWxsaXBzZVwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLWVsbGlwc2VcIiksXG4gICAgY3g6IFwiNjcuNzk3XCIsXG4gICAgY3k6IFwiMTA2Ljg5XCIsXG4gICAgcng6IFwiNjcuNzk3XCIsXG4gICAgcnk6IFwiMTIuNjY4XCJcbiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLXBhdGgtMVwiKSxcbiAgICBkOiBcIk0xMjIuMDM0IDY5LjY3NEw5OC4xMDkgNDAuMjI5Yy0xLjE0OC0xLjM4Ni0yLjgyNi0yLjIyNS00LjU5My0yLjIyNWgtNTEuNDRjLTEuNzY2IDAtMy40NDQuODM5LTQuNTkyIDIuMjI1TDEzLjU2IDY5LjY3NHYxNS4zODNoMTA4LjQ3NVY2OS42NzR6XCJcbiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLXBhdGgtMlwiKSxcbiAgICBkOiBcIk0xMDEuNTM3IDg2LjIxNEw4MC42MyA2MS4xMDJjLTEuMDAxLTEuMjA3LTIuNTA3LTEuODY3LTQuMDQ4LTEuODY3SDMxLjcyNGMtMS41NCAwLTMuMDQ3LjY2LTQuMDQ4IDEuODY3TDYuNzY5IDg2LjIxNHYxMy43OTJoOTQuNzY4Vjg2LjIxNHpcIixcbiAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKDEzLjU2KVwiXG4gIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1wYXRoLTNcIiksXG4gICAgZDogXCJNMzMuODMgMGg2Ny45MzNhNCA0IDAgMCAxIDQgNHY5My4zNDRhNCA0IDAgMCAxLTQgNEgzMy44M2E0IDQgMCAwIDEtNC00VjRhNCA0IDAgMCAxIDQtNHpcIlxuICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHtcbiAgICBjbGFzc05hbWU6IFwiXCIuY29uY2F0KHByZWZpeENscywgXCItcGF0aC00XCIpLFxuICAgIGQ6IFwiTTQyLjY3OCA5Ljk1M2g1MC4yMzdhMiAyIDAgMCAxIDIgMlYzNi45MWEyIDIgMCAwIDEtMiAySDQyLjY3OGEyIDIgMCAwIDEtMi0yVjExLjk1M2EyIDIgMCAwIDEgMi0yek00Mi45NCA0OS43NjdoNDkuNzEzYTIuMjYyIDIuMjYyIDAgMSAxIDAgNC41MjRINDIuOTRhMi4yNjIgMi4yNjIgMCAwIDEgMC00LjUyNHpNNDIuOTQgNjEuNTNoNDkuNzEzYTIuMjYyIDIuMjYyIDAgMSAxIDAgNC41MjVINDIuOTRhMi4yNjIgMi4yNjIgMCAwIDEgMC00LjUyNXpNMTIxLjgxMyAxMDUuMDMyYy0uNzc1IDMuMDcxLTMuNDk3IDUuMzYtNi43MzUgNS4zNkgyMC41MTVjLTMuMjM4IDAtNS45Ni0yLjI5LTYuNzM0LTUuMzZhNy4zMDkgNy4zMDkgMCAwIDEtLjIyMi0xLjc5VjY5LjY3NWgyNi4zMThjMi45MDcgMCA1LjI1IDIuNDQ4IDUuMjUgNS40MnYuMDRjMCAyLjk3MSAyLjM3IDUuMzcgNS4yNzcgNS4zN2gzNC43ODVjMi45MDcgMCA1LjI3Ny0yLjQyMSA1LjI3Ny01LjM5M1Y3NS4xYzAtMi45NzIgMi4zNDMtNS40MjYgNS4yNS01LjQyNmgyNi4zMTh2MzMuNTY5YzAgLjYxNy0uMDc3IDEuMjE2LS4yMjEgMS43ODl6XCJcbiAgfSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1wYXRoLTVcIiksXG4gICAgZDogXCJNMTQ5LjEyMSAzMy4yOTJsLTYuODMgMi42NWExIDEgMCAwIDEtMS4zMTctMS4yM2wxLjkzNy02LjIwN2MtMi41ODktMi45NDQtNC4xMDktNi41MzQtNC4xMDktMTAuNDA4QzEzOC44MDIgOC4xMDIgMTQ4LjkyIDAgMTYxLjQwMiAwIDE3My44ODEgMCAxODQgOC4xMDIgMTg0IDE4LjA5N2MwIDkuOTk1LTEwLjExOCAxOC4wOTctMjIuNTk5IDE4LjA5Ny00LjUyOCAwLTguNzQ0LTEuMDY2LTEyLjI4LTIuOTAyelwiXG4gIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImdcIiwge1xuICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1nXCIpLFxuICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoMTQ5LjY1IDE1LjM4MylcIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImVsbGlwc2VcIiwge1xuICAgIGN4OiBcIjIwLjY1NFwiLFxuICAgIGN5OiBcIjMuMTY3XCIsXG4gICAgcng6IFwiMi44NDlcIixcbiAgICByeTogXCIyLjgxNVwiXG4gIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGQ6IFwiTTUuNjk4IDUuNjNIMEwyLjg5OC43MDR6TTkuMjU5LjcwNGg0Ljk4NVY1LjYzSDkuMjU5elwiXG4gIH0pKSkpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRW1wdHk7IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQ29uZmlnQ29udGV4dCB9IGZyb20gJy4uL2NvbmZpZy1wcm92aWRlcic7XG5cbnZhciBTaW1wbGUgPSBmdW5jdGlvbiBTaW1wbGUoKSB7XG4gIHZhciBfUmVhY3QkdXNlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoQ29uZmlnQ29udGV4dCksXG4gICAgICBnZXRQcmVmaXhDbHMgPSBfUmVhY3QkdXNlQ29udGV4dC5nZXRQcmVmaXhDbHM7XG5cbiAgdmFyIHByZWZpeENscyA9IGdldFByZWZpeENscygnZW1wdHktaW1nLXNpbXBsZScpO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwge1xuICAgIGNsYXNzTmFtZTogcHJlZml4Q2xzLFxuICAgIHdpZHRoOiBcIjY0XCIsXG4gICAgaGVpZ2h0OiBcIjQxXCIsXG4gICAgdmlld0JveDogXCIwIDAgNjQgNDFcIixcbiAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZ1wiLCB7XG4gICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZSgwIDEpXCIsXG4gICAgZmlsbDogXCJub25lXCIsXG4gICAgZmlsbFJ1bGU6IFwiZXZlbm9kZFwiXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZWxsaXBzZVwiLCB7XG4gICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLWVsbGlwc2VcIiksXG4gICAgY3g6IFwiMzJcIixcbiAgICBjeTogXCIzM1wiLFxuICAgIHJ4OiBcIjMyXCIsXG4gICAgcnk6IFwiN1wiXG4gIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImdcIiwge1xuICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1nXCIpLFxuICAgIGZpbGxSdWxlOiBcIm5vbnplcm9cIlxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGQ6IFwiTTU1IDEyLjc2TDQ0Ljg1NCAxLjI1OEM0NC4zNjcuNDc0IDQzLjY1NiAwIDQyLjkwNyAwSDIxLjA5M2MtLjc0OSAwLTEuNDYuNDc0LTEuOTQ3IDEuMjU3TDkgMTIuNzYxVjIyaDQ2di05LjI0elwiXG4gIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgIGQ6IFwiTTQxLjYxMyAxNS45MzFjMC0xLjYwNS45OTQtMi45MyAyLjIyNy0yLjkzMUg1NXYxOC4xMzdDNTUgMzMuMjYgNTMuNjggMzUgNTIuMDUgMzVoLTQwLjFDMTAuMzIgMzUgOSAzMy4yNTkgOSAzMS4xMzdWMTNoMTEuMTZjMS4yMzMgMCAyLjIyNyAxLjMyMyAyLjIyNyAyLjkyOHYuMDIyYzAgMS42MDUgMS4wMDUgMi45MDEgMi4yMzcgMi45MDFoMTQuNzUyYzEuMjMyIDAgMi4yMzctMS4zMDggMi4yMzctMi45MTN2LS4wMDd6XCIsXG4gICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLXBhdGhcIilcbiAgfSkpKSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTaW1wbGU7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHNcIjtcbmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHlcIjtcblxudmFyIF9fcmVzdCA9IHRoaXMgJiYgdGhpcy5fX3Jlc3QgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgdmFyIHQgPSB7fTtcblxuICBmb3IgKHZhciBwIGluIHMpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApIHRbcF0gPSBzW3BdO1xuICB9XG5cbiAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKSBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKSB0W3BbaV1dID0gc1twW2ldXTtcbiAgfVxuICByZXR1cm4gdDtcbn07XG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgQ29uZmlnQ29uc3VtZXIgfSBmcm9tICcuLi9jb25maWctcHJvdmlkZXInO1xuaW1wb3J0IExvY2FsZVJlY2VpdmVyIGZyb20gJy4uL2xvY2FsZS1wcm92aWRlci9Mb2NhbGVSZWNlaXZlcic7XG5pbXBvcnQgRGVmYXVsdEVtcHR5SW1nIGZyb20gJy4vZW1wdHknO1xuaW1wb3J0IFNpbXBsZUVtcHR5SW1nIGZyb20gJy4vc2ltcGxlJztcbnZhciBkZWZhdWx0RW1wdHlJbWcgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChEZWZhdWx0RW1wdHlJbWcsIG51bGwpO1xudmFyIHNpbXBsZUVtcHR5SW1nID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU2ltcGxlRW1wdHlJbWcsIG51bGwpO1xuXG52YXIgRW1wdHkgPSBmdW5jdGlvbiBFbXB0eShwcm9wcykge1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29uZmlnQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgdmFyIGdldFByZWZpeENscyA9IF9yZWYuZ2V0UHJlZml4Q2xzLFxuICAgICAgICBkaXJlY3Rpb24gPSBfcmVmLmRpcmVjdGlvbjtcblxuICAgIHZhciBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICAgIGN1c3RvbWl6ZVByZWZpeENscyA9IHByb3BzLnByZWZpeENscyxcbiAgICAgICAgX3Byb3BzJGltYWdlID0gcHJvcHMuaW1hZ2UsXG4gICAgICAgIGltYWdlID0gX3Byb3BzJGltYWdlID09PSB2b2lkIDAgPyBkZWZhdWx0RW1wdHlJbWcgOiBfcHJvcHMkaW1hZ2UsXG4gICAgICAgIGRlc2NyaXB0aW9uID0gcHJvcHMuZGVzY3JpcHRpb24sXG4gICAgICAgIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIGltYWdlU3R5bGUgPSBwcm9wcy5pbWFnZVN0eWxlLFxuICAgICAgICByZXN0UHJvcHMgPSBfX3Jlc3QocHJvcHMsIFtcImNsYXNzTmFtZVwiLCBcInByZWZpeENsc1wiLCBcImltYWdlXCIsIFwiZGVzY3JpcHRpb25cIiwgXCJjaGlsZHJlblwiLCBcImltYWdlU3R5bGVcIl0pO1xuXG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExvY2FsZVJlY2VpdmVyLCB7XG4gICAgICBjb21wb25lbnROYW1lOiBcIkVtcHR5XCJcbiAgICB9LCBmdW5jdGlvbiAobG9jYWxlKSB7XG4gICAgICB2YXIgX2NsYXNzTmFtZXM7XG5cbiAgICAgIHZhciBwcmVmaXhDbHMgPSBnZXRQcmVmaXhDbHMoJ2VtcHR5JywgY3VzdG9taXplUHJlZml4Q2xzKTtcbiAgICAgIHZhciBkZXMgPSB0eXBlb2YgZGVzY3JpcHRpb24gIT09ICd1bmRlZmluZWQnID8gZGVzY3JpcHRpb24gOiBsb2NhbGUuZGVzY3JpcHRpb247XG4gICAgICB2YXIgYWx0ID0gdHlwZW9mIGRlcyA9PT0gJ3N0cmluZycgPyBkZXMgOiAnZW1wdHknO1xuICAgICAgdmFyIGltYWdlTm9kZSA9IG51bGw7XG5cbiAgICAgIGlmICh0eXBlb2YgaW1hZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGltYWdlTm9kZSA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaW1nXCIsIHtcbiAgICAgICAgICBhbHQ6IGFsdCxcbiAgICAgICAgICBzcmM6IGltYWdlXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaW1hZ2VOb2RlID0gaW1hZ2U7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBfZXh0ZW5kcyh7XG4gICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcyhwcmVmaXhDbHMsIChfY2xhc3NOYW1lcyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTmFtZXMsIFwiXCIuY29uY2F0KHByZWZpeENscywgXCItbm9ybWFsXCIpLCBpbWFnZSA9PT0gc2ltcGxlRW1wdHlJbWcpLCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTmFtZXMsIFwiXCIuY29uY2F0KHByZWZpeENscywgXCItcnRsXCIpLCBkaXJlY3Rpb24gPT09ICdydGwnKSwgX2NsYXNzTmFtZXMpLCBjbGFzc05hbWUpXG4gICAgICB9LCByZXN0UHJvcHMpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1pbWFnZVwiKSxcbiAgICAgICAgc3R5bGU6IGltYWdlU3R5bGVcbiAgICAgIH0sIGltYWdlTm9kZSksIGRlcyAmJiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwiXCIuY29uY2F0KHByZWZpeENscywgXCItZGVzY3JpcHRpb25cIilcbiAgICAgIH0sIGRlcyksIGNoaWxkcmVuICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLWZvb3RlclwiKVxuICAgICAgfSwgY2hpbGRyZW4pKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuXG5FbXB0eS5QUkVTRU5URURfSU1BR0VfREVGQVVMVCA9IGRlZmF1bHRFbXB0eUltZztcbkVtcHR5LlBSRVNFTlRFRF9JTUFHRV9TSU1QTEUgPSBzaW1wbGVFbXB0eUltZztcbmV4cG9ydCBkZWZhdWx0IEVtcHR5OyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBFbXB0eSBmcm9tICcuLi9lbXB0eSc7XG5pbXBvcnQgeyBDb25maWdDb25zdW1lciB9IGZyb20gJy4nO1xuXG52YXIgcmVuZGVyRW1wdHkgPSBmdW5jdGlvbiByZW5kZXJFbXB0eShjb21wb25lbnROYW1lKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb25maWdDb25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKF9yZWYpIHtcbiAgICB2YXIgZ2V0UHJlZml4Q2xzID0gX3JlZi5nZXRQcmVmaXhDbHM7XG4gICAgdmFyIHByZWZpeCA9IGdldFByZWZpeENscygnZW1wdHknKTtcblxuICAgIHN3aXRjaCAoY29tcG9uZW50TmFtZSkge1xuICAgICAgY2FzZSAnVGFibGUnOlxuICAgICAgY2FzZSAnTGlzdCc6XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFbXB0eSwge1xuICAgICAgICAgIGltYWdlOiBFbXB0eS5QUkVTRU5URURfSU1BR0VfU0lNUExFXG4gICAgICAgIH0pO1xuXG4gICAgICBjYXNlICdTZWxlY3QnOlxuICAgICAgY2FzZSAnVHJlZVNlbGVjdCc6XG4gICAgICBjYXNlICdDYXNjYWRlcic6XG4gICAgICBjYXNlICdUcmFuc2Zlcic6XG4gICAgICBjYXNlICdNZW50aW9ucyc6XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChFbXB0eSwge1xuICAgICAgICAgIGltYWdlOiBFbXB0eS5QUkVTRU5URURfSU1BR0VfU0lNUExFLFxuICAgICAgICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQocHJlZml4LCBcIi1zbWFsbFwiKVxuICAgICAgICB9KTtcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEVtcHR5LCBudWxsKTtcbiAgICB9XG4gIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgcmVuZGVyRW1wdHk7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHNcIjtcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBkZWZhdWx0UmVuZGVyRW1wdHkgZnJvbSAnLi9yZW5kZXJFbXB0eSc7XG5leHBvcnQgdmFyIENvbmZpZ0NvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dCh7XG4gIC8vIFdlIHByb3ZpZGUgYSBkZWZhdWx0IGZ1bmN0aW9uIGZvciBDb250ZXh0IHdpdGhvdXQgcHJvdmlkZXJcbiAgZ2V0UHJlZml4Q2xzOiBmdW5jdGlvbiBnZXRQcmVmaXhDbHMoc3VmZml4Q2xzLCBjdXN0b21pemVQcmVmaXhDbHMpIHtcbiAgICBpZiAoY3VzdG9taXplUHJlZml4Q2xzKSByZXR1cm4gY3VzdG9taXplUHJlZml4Q2xzO1xuICAgIHJldHVybiBzdWZmaXhDbHMgPyBcImFudC1cIi5jb25jYXQoc3VmZml4Q2xzKSA6ICdhbnQnO1xuICB9LFxuICByZW5kZXJFbXB0eTogZGVmYXVsdFJlbmRlckVtcHR5XG59KTtcbmV4cG9ydCB2YXIgQ29uZmlnQ29uc3VtZXIgPSBDb25maWdDb250ZXh0LkNvbnN1bWVyO1xuZXhwb3J0IGZ1bmN0aW9uIHdpdGhDb25maWdDb25zdW1lcihjb25maWcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdpdGhDb25maWdDb25zdW1lckZ1bmMoQ29tcG9uZW50KSB7XG4gICAgLy8gV3JhcCB3aXRoIENvbmZpZ0NvbnN1bWVyLiBTaW5jZSB3ZSBuZWVkIGNvbXBhdGlibGUgd2l0aCByZWFjdCAxNSwgYmUgY2FyZSB3aGVuIHVzaW5nIHJlZiBtZXRob2RzXG4gICAgdmFyIFNGQyA9IGZ1bmN0aW9uIFNGQyhwcm9wcykge1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbmZpZ0NvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29uZmlnUHJvcHMpIHtcbiAgICAgICAgdmFyIGJhc2ljUHJlZml4Q2xzID0gY29uZmlnLnByZWZpeENscztcbiAgICAgICAgdmFyIGdldFByZWZpeENscyA9IGNvbmZpZ1Byb3BzLmdldFByZWZpeENscztcbiAgICAgICAgdmFyIGN1c3RvbWl6ZVByZWZpeENscyA9IHByb3BzLnByZWZpeENscztcbiAgICAgICAgdmFyIHByZWZpeENscyA9IGdldFByZWZpeENscyhiYXNpY1ByZWZpeENscywgY3VzdG9taXplUHJlZml4Q2xzKTtcbiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIGNvbmZpZ1Byb3BzLCBwcm9wcywge1xuICAgICAgICAgIHByZWZpeENsczogcHJlZml4Q2xzXG4gICAgICAgIH0pKTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICB2YXIgY29ucyA9IENvbXBvbmVudC5jb25zdHJ1Y3RvcjtcbiAgICB2YXIgbmFtZSA9IGNvbnMgJiYgY29ucy5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSB8fCAnQ29tcG9uZW50JztcbiAgICBTRkMuZGlzcGxheU5hbWUgPSBcIndpdGhDb25maWdDb25zdW1lcihcIi5jb25jYXQobmFtZSwgXCIpXCIpO1xuICAgIHJldHVybiBTRkM7XG4gIH07XG59IiwiaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b0NvbnN1bWFibGVBcnJheVwiO1xuaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eVwiO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHNcIjtcbmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjtcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlU3VwZXJcIjtcblxudmFyIF9fcmVzdCA9IHRoaXMgJiYgdGhpcy5fX3Jlc3QgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgdmFyIHQgPSB7fTtcblxuICBmb3IgKHZhciBwIGluIHMpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApIHRbcF0gPSBzW3BdO1xuICB9XG5cbiAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKSBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKSB0W3BbaV1dID0gc1twW2ldXTtcbiAgfVxuICByZXR1cm4gdDtcbn07XG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgQ29uZmlnQ29uc3VtZXIgfSBmcm9tICcuLi9jb25maWctcHJvdmlkZXInO1xuZXhwb3J0IHZhciBMYXlvdXRDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQoe1xuICBzaWRlckhvb2s6IHtcbiAgICBhZGRTaWRlcjogZnVuY3Rpb24gYWRkU2lkZXIoKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9LFxuICAgIHJlbW92ZVNpZGVyOiBmdW5jdGlvbiByZW1vdmVTaWRlcigpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxufSk7XG5cbmZ1bmN0aW9uIGdlbmVyYXRvcihfcmVmKSB7XG4gIHZhciBzdWZmaXhDbHMgPSBfcmVmLnN1ZmZpeENscyxcbiAgICAgIHRhZ05hbWUgPSBfcmVmLnRhZ05hbWUsXG4gICAgICBkaXNwbGF5TmFtZSA9IF9yZWYuZGlzcGxheU5hbWU7XG4gIHJldHVybiBmdW5jdGlvbiAoQmFzaWNDb21wb25lbnQpIHtcbiAgICB2YXIgX2E7XG5cbiAgICByZXR1cm4gX2EgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgICAgIF9pbmhlcml0cyhBZGFwdGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICAgICAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihBZGFwdGVyKTtcblxuICAgICAgZnVuY3Rpb24gQWRhcHRlcigpIHtcbiAgICAgICAgdmFyIF90aGlzO1xuXG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBZGFwdGVyKTtcblxuICAgICAgICBfdGhpcyA9IF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gICAgICAgIF90aGlzLnJlbmRlckNvbXBvbmVudCA9IGZ1bmN0aW9uIChfcmVmMikge1xuICAgICAgICAgIHZhciBnZXRQcmVmaXhDbHMgPSBfcmVmMi5nZXRQcmVmaXhDbHM7XG4gICAgICAgICAgdmFyIGN1c3RvbWl6ZVByZWZpeENscyA9IF90aGlzLnByb3BzLnByZWZpeENscztcbiAgICAgICAgICB2YXIgcHJlZml4Q2xzID0gZ2V0UHJlZml4Q2xzKHN1ZmZpeENscywgY3VzdG9taXplUHJlZml4Q2xzKTtcbiAgICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQmFzaWNDb21wb25lbnQsIF9leHRlbmRzKHtcbiAgICAgICAgICAgIHByZWZpeENsczogcHJlZml4Q2xzLFxuICAgICAgICAgICAgdGFnTmFtZTogdGFnTmFtZVxuICAgICAgICAgIH0sIF90aGlzLnByb3BzKSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgICAgfVxuXG4gICAgICBfY3JlYXRlQ2xhc3MoQWRhcHRlciwgW3tcbiAgICAgICAga2V5OiBcInJlbmRlclwiLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb25maWdDb25zdW1lciwgbnVsbCwgdGhpcy5yZW5kZXJDb21wb25lbnQpO1xuICAgICAgICB9XG4gICAgICB9XSk7XG5cbiAgICAgIHJldHVybiBBZGFwdGVyO1xuICAgIH0oUmVhY3QuQ29tcG9uZW50KSwgX2EuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZSwgX2E7XG4gIH07XG59XG5cbnZhciBCYXNpYyA9IGZ1bmN0aW9uIEJhc2ljKHByb3BzKSB7XG4gIHZhciBwcmVmaXhDbHMgPSBwcm9wcy5wcmVmaXhDbHMsXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgICAgdGFnTmFtZSA9IHByb3BzLnRhZ05hbWUsXG4gICAgICBvdGhlcnMgPSBfX3Jlc3QocHJvcHMsIFtcInByZWZpeENsc1wiLCBcImNsYXNzTmFtZVwiLCBcImNoaWxkcmVuXCIsIFwidGFnTmFtZVwiXSk7XG5cbiAgdmFyIGNsYXNzU3RyaW5nID0gY2xhc3NOYW1lcyhwcmVmaXhDbHMsIGNsYXNzTmFtZSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCh0YWdOYW1lLCBfZXh0ZW5kcyh7XG4gICAgY2xhc3NOYW1lOiBjbGFzc1N0cmluZ1xuICB9LCBvdGhlcnMpLCBjaGlsZHJlbik7XG59O1xuXG52YXIgQmFzaWNMYXlvdXQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQyKSB7XG4gIF9pbmhlcml0cyhCYXNpY0xheW91dCwgX1JlYWN0JENvbXBvbmVudDIpO1xuXG4gIHZhciBfc3VwZXIyID0gX2NyZWF0ZVN1cGVyKEJhc2ljTGF5b3V0KTtcblxuICBmdW5jdGlvbiBCYXNpY0xheW91dCgpIHtcbiAgICB2YXIgX3RoaXMyO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJhc2ljTGF5b3V0KTtcblxuICAgIF90aGlzMiA9IF9zdXBlcjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBfdGhpczIuc3RhdGUgPSB7XG4gICAgICBzaWRlcnM6IFtdXG4gICAgfTtcblxuICAgIF90aGlzMi5yZW5kZXJDb21wb25lbnQgPSBmdW5jdGlvbiAoX3JlZjMpIHtcbiAgICAgIHZhciBfY2xhc3NOYW1lcztcblxuICAgICAgdmFyIGRpcmVjdGlvbiA9IF9yZWYzLmRpcmVjdGlvbjtcblxuICAgICAgdmFyIF9hID0gX3RoaXMyLnByb3BzLFxuICAgICAgICAgIHByZWZpeENscyA9IF9hLnByZWZpeENscyxcbiAgICAgICAgICBjbGFzc05hbWUgPSBfYS5jbGFzc05hbWUsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfYS5jaGlsZHJlbixcbiAgICAgICAgICBoYXNTaWRlciA9IF9hLmhhc1NpZGVyLFxuICAgICAgICAgIFRhZyA9IF9hLnRhZ05hbWUsXG4gICAgICAgICAgb3RoZXJzID0gX19yZXN0KF9hLCBbXCJwcmVmaXhDbHNcIiwgXCJjbGFzc05hbWVcIiwgXCJjaGlsZHJlblwiLCBcImhhc1NpZGVyXCIsIFwidGFnTmFtZVwiXSk7XG5cbiAgICAgIHZhciBjbGFzc1N0cmluZyA9IGNsYXNzTmFtZXMocHJlZml4Q2xzLCAoX2NsYXNzTmFtZXMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc05hbWVzLCBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLWhhcy1zaWRlclwiKSwgdHlwZW9mIGhhc1NpZGVyID09PSAnYm9vbGVhbicgPyBoYXNTaWRlciA6IF90aGlzMi5zdGF0ZS5zaWRlcnMubGVuZ3RoID4gMCksIF9kZWZpbmVQcm9wZXJ0eShfY2xhc3NOYW1lcywgXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1ydGxcIiksIGRpcmVjdGlvbiA9PT0gJ3J0bCcpLCBfY2xhc3NOYW1lcyksIGNsYXNzTmFtZSk7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTGF5b3V0Q29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICB2YWx1ZToge1xuICAgICAgICAgIHNpZGVySG9vazogX3RoaXMyLmdldFNpZGVySG9vaygpXG4gICAgICAgIH1cbiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRhZywgX2V4dGVuZHMoe1xuICAgICAgICBjbGFzc05hbWU6IGNsYXNzU3RyaW5nXG4gICAgICB9LCBvdGhlcnMpLCBjaGlsZHJlbikpO1xuICAgIH07XG5cbiAgICByZXR1cm4gX3RoaXMyO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEJhc2ljTGF5b3V0LCBbe1xuICAgIGtleTogXCJnZXRTaWRlckhvb2tcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U2lkZXJIb29rKCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGFkZFNpZGVyOiBmdW5jdGlvbiBhZGRTaWRlcihpZCkge1xuICAgICAgICAgIF90aGlzMy5zZXRTdGF0ZShmdW5jdGlvbiAoc3RhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIHNpZGVyczogW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShzdGF0ZS5zaWRlcnMpLCBbaWRdKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVtb3ZlU2lkZXI6IGZ1bmN0aW9uIHJlbW92ZVNpZGVyKGlkKSB7XG4gICAgICAgICAgX3RoaXMzLnNldFN0YXRlKGZ1bmN0aW9uIChzdGF0ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgc2lkZXJzOiBzdGF0ZS5zaWRlcnMuZmlsdGVyKGZ1bmN0aW9uIChjdXJyZW50SWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudElkICE9PSBpZDtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29uZmlnQ29uc3VtZXIsIG51bGwsIHRoaXMucmVuZGVyQ29tcG9uZW50KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQmFzaWNMYXlvdXQ7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbnZhciBMYXlvdXQgPSBnZW5lcmF0b3Ioe1xuICBzdWZmaXhDbHM6ICdsYXlvdXQnLFxuICB0YWdOYW1lOiAnc2VjdGlvbicsXG4gIGRpc3BsYXlOYW1lOiAnTGF5b3V0J1xufSkoQmFzaWNMYXlvdXQpO1xudmFyIEhlYWRlciA9IGdlbmVyYXRvcih7XG4gIHN1ZmZpeENsczogJ2xheW91dC1oZWFkZXInLFxuICB0YWdOYW1lOiAnaGVhZGVyJyxcbiAgZGlzcGxheU5hbWU6ICdIZWFkZXInXG59KShCYXNpYyk7XG52YXIgRm9vdGVyID0gZ2VuZXJhdG9yKHtcbiAgc3VmZml4Q2xzOiAnbGF5b3V0LWZvb3RlcicsXG4gIHRhZ05hbWU6ICdmb290ZXInLFxuICBkaXNwbGF5TmFtZTogJ0Zvb3Rlcidcbn0pKEJhc2ljKTtcbnZhciBDb250ZW50ID0gZ2VuZXJhdG9yKHtcbiAgc3VmZml4Q2xzOiAnbGF5b3V0LWNvbnRlbnQnLFxuICB0YWdOYW1lOiAnbWFpbicsXG4gIGRpc3BsYXlOYW1lOiAnQ29udGVudCdcbn0pKEJhc2ljKTtcbkxheW91dC5IZWFkZXIgPSBIZWFkZXI7XG5MYXlvdXQuRm9vdGVyID0gRm9vdGVyO1xuTGF5b3V0LkNvbnRlbnQgPSBDb250ZW50O1xuZXhwb3J0IGRlZmF1bHQgTGF5b3V0OyIsImZ1bmN0aW9uIG9taXQob2JqLCBmaWVsZHMpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1vYmplY3Qtc3ByZWFkXG4gIHZhciBzaGFsbG93Q29weSA9IE9iamVjdC5hc3NpZ24oe30sIG9iaik7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBmaWVsZHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICB2YXIga2V5ID0gZmllbGRzW2ldO1xuICAgIGRlbGV0ZSBzaGFsbG93Q29weVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHNoYWxsb3dDb3B5O1xufVxuXG5leHBvcnQgZGVmYXVsdCBvbWl0OyIsImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHlcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9leHRlbmRzXCI7XG5pbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzXCI7XG5pbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZVN1cGVyXCI7XG5cbnZhciBfX3Jlc3QgPSB0aGlzICYmIHRoaXMuX19yZXN0IHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gIHZhciB0ID0ge307XG5cbiAgZm9yICh2YXIgcCBpbiBzKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKSB0W3BdID0gc1twXTtcbiAgfVxuXG4gIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIikgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSkgdFtwW2ldXSA9IHNbcFtpXV07XG4gIH1cbiAgcmV0dXJuIHQ7XG59O1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBvbWl0IGZyb20gJ29taXQuanMnO1xuaW1wb3J0IEJhcnNPdXRsaW5lZCBmcm9tICdAYW50LWRlc2lnbi9pY29ucy9CYXJzT3V0bGluZWQnO1xuaW1wb3J0IFJpZ2h0T3V0bGluZWQgZnJvbSAnQGFudC1kZXNpZ24vaWNvbnMvUmlnaHRPdXRsaW5lZCc7XG5pbXBvcnQgTGVmdE91dGxpbmVkIGZyb20gJ0BhbnQtZGVzaWduL2ljb25zL0xlZnRPdXRsaW5lZCc7XG5pbXBvcnQgeyBMYXlvdXRDb250ZXh0IH0gZnJvbSAnLi9sYXlvdXQnO1xuaW1wb3J0IHsgQ29uZmlnQ29uc3VtZXIgfSBmcm9tICcuLi9jb25maWctcHJvdmlkZXInO1xuaW1wb3J0IGlzTnVtZXJpYyBmcm9tICcuLi9fdXRpbC9pc051bWVyaWMnO1xudmFyIGRpbWVuc2lvbk1heE1hcCA9IHtcbiAgeHM6ICc0NzkuOThweCcsXG4gIHNtOiAnNTc1Ljk4cHgnLFxuICBtZDogJzc2Ny45OHB4JyxcbiAgbGc6ICc5OTEuOThweCcsXG4gIHhsOiAnMTE5OS45OHB4JyxcbiAgeHhsOiAnMTU5OS45OHB4J1xufTtcbmV4cG9ydCB2YXIgU2lkZXJDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQoe30pO1xuXG52YXIgZ2VuZXJhdGVJZCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGkgPSAwO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBwcmVmaXggPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6ICcnO1xuICAgIGkgKz0gMTtcbiAgICByZXR1cm4gXCJcIi5jb25jYXQocHJlZml4KS5jb25jYXQoaSk7XG4gIH07XG59KCk7XG5cbnZhciBJbnRlcm5hbFNpZGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhJbnRlcm5hbFNpZGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEludGVybmFsU2lkZXIpO1xuXG4gIGZ1bmN0aW9uIEludGVybmFsU2lkZXIocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW50ZXJuYWxTaWRlcik7XG5cbiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKTtcblxuICAgIF90aGlzLnJlc3BvbnNpdmVIYW5kbGVyID0gZnVuY3Rpb24gKG1xbCkge1xuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBiZWxvdzogbXFsLm1hdGNoZXNcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgb25CcmVha3BvaW50ID0gX3RoaXMucHJvcHMub25CcmVha3BvaW50O1xuICAgICAgdmFyIGNvbGxhcHNlZCA9IF90aGlzLnN0YXRlLmNvbGxhcHNlZDtcblxuICAgICAgaWYgKG9uQnJlYWtwb2ludCkge1xuICAgICAgICBvbkJyZWFrcG9pbnQobXFsLm1hdGNoZXMpO1xuICAgICAgfVxuXG4gICAgICBpZiAoY29sbGFwc2VkICE9PSBtcWwubWF0Y2hlcykge1xuICAgICAgICBfdGhpcy5zZXRDb2xsYXBzZWQobXFsLm1hdGNoZXMsICdyZXNwb25zaXZlJyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF90aGlzLnNldENvbGxhcHNlZCA9IGZ1bmN0aW9uIChjb2xsYXBzZWQsIHR5cGUpIHtcbiAgICAgIGlmICghKCdjb2xsYXBzZWQnIGluIF90aGlzLnByb3BzKSkge1xuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgY29sbGFwc2VkOiBjb2xsYXBzZWRcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBvbkNvbGxhcHNlID0gX3RoaXMucHJvcHMub25Db2xsYXBzZTtcblxuICAgICAgaWYgKG9uQ29sbGFwc2UpIHtcbiAgICAgICAgb25Db2xsYXBzZShjb2xsYXBzZWQsIHR5cGUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy50b2dnbGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgY29sbGFwc2VkID0gIV90aGlzLnN0YXRlLmNvbGxhcHNlZDtcblxuICAgICAgX3RoaXMuc2V0Q29sbGFwc2VkKGNvbGxhcHNlZCwgJ2NsaWNrVHJpZ2dlcicpO1xuICAgIH07XG5cbiAgICBfdGhpcy5yZW5kZXJTaWRlciA9IGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICB2YXIgX2NsYXNzTmFtZXM7XG5cbiAgICAgIHZhciBnZXRQcmVmaXhDbHMgPSBfcmVmLmdldFByZWZpeENscztcblxuICAgICAgdmFyIF9hID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgY3VzdG9taXplUHJlZml4Q2xzID0gX2EucHJlZml4Q2xzLFxuICAgICAgICAgIGNsYXNzTmFtZSA9IF9hLmNsYXNzTmFtZSxcbiAgICAgICAgICB0aGVtZSA9IF9hLnRoZW1lLFxuICAgICAgICAgIGNvbGxhcHNpYmxlID0gX2EuY29sbGFwc2libGUsXG4gICAgICAgICAgcmV2ZXJzZUFycm93ID0gX2EucmV2ZXJzZUFycm93LFxuICAgICAgICAgIHRyaWdnZXIgPSBfYS50cmlnZ2VyLFxuICAgICAgICAgIHN0eWxlID0gX2Euc3R5bGUsXG4gICAgICAgICAgd2lkdGggPSBfYS53aWR0aCxcbiAgICAgICAgICBjb2xsYXBzZWRXaWR0aCA9IF9hLmNvbGxhcHNlZFdpZHRoLFxuICAgICAgICAgIHplcm9XaWR0aFRyaWdnZXJTdHlsZSA9IF9hLnplcm9XaWR0aFRyaWdnZXJTdHlsZSxcbiAgICAgICAgICBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuLFxuICAgICAgICAgIG90aGVycyA9IF9fcmVzdChfYSwgW1wicHJlZml4Q2xzXCIsIFwiY2xhc3NOYW1lXCIsIFwidGhlbWVcIiwgXCJjb2xsYXBzaWJsZVwiLCBcInJldmVyc2VBcnJvd1wiLCBcInRyaWdnZXJcIiwgXCJzdHlsZVwiLCBcIndpZHRoXCIsIFwiY29sbGFwc2VkV2lkdGhcIiwgXCJ6ZXJvV2lkdGhUcmlnZ2VyU3R5bGVcIiwgXCJjaGlsZHJlblwiXSk7XG5cbiAgICAgIHZhciBfdGhpcyRzdGF0ZSA9IF90aGlzLnN0YXRlLFxuICAgICAgICAgIGNvbGxhcHNlZCA9IF90aGlzJHN0YXRlLmNvbGxhcHNlZCxcbiAgICAgICAgICBiZWxvdyA9IF90aGlzJHN0YXRlLmJlbG93O1xuICAgICAgdmFyIHByZWZpeENscyA9IGdldFByZWZpeENscygnbGF5b3V0LXNpZGVyJywgY3VzdG9taXplUHJlZml4Q2xzKTtcbiAgICAgIHZhciBkaXZQcm9wcyA9IG9taXQob3RoZXJzLCBbJ2NvbGxhcHNlZCcsICdkZWZhdWx0Q29sbGFwc2VkJywgJ29uQ29sbGFwc2UnLCAnYnJlYWtwb2ludCcsICdvbkJyZWFrcG9pbnQnLCAnc2lkZXJIb29rJywgJ3plcm9XaWR0aFRyaWdnZXJTdHlsZSddKTtcbiAgICAgIHZhciByYXdXaWR0aCA9IGNvbGxhcHNlZCA/IGNvbGxhcHNlZFdpZHRoIDogd2lkdGg7IC8vIHVzZSBcInB4XCIgYXMgZmFsbGJhY2sgdW5pdCBmb3Igd2lkdGhcblxuICAgICAgdmFyIHNpZGVyV2lkdGggPSBpc051bWVyaWMocmF3V2lkdGgpID8gXCJcIi5jb25jYXQocmF3V2lkdGgsIFwicHhcIikgOiBTdHJpbmcocmF3V2lkdGgpOyAvLyBzcGVjaWFsIHRyaWdnZXIgd2hlbiBjb2xsYXBzZWRXaWR0aCA9PSAwXG5cbiAgICAgIHZhciB6ZXJvV2lkdGhUcmlnZ2VyID0gcGFyc2VGbG9hdChTdHJpbmcoY29sbGFwc2VkV2lkdGggfHwgMCkpID09PSAwID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgICAgb25DbGljazogX3RoaXMudG9nZ2xlLFxuICAgICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMoXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi16ZXJvLXdpZHRoLXRyaWdnZXJcIiksIFwiXCIuY29uY2F0KHByZWZpeENscywgXCItemVyby13aWR0aC10cmlnZ2VyLVwiKS5jb25jYXQocmV2ZXJzZUFycm93ID8gJ3JpZ2h0JyA6ICdsZWZ0JykpLFxuICAgICAgICBzdHlsZTogemVyb1dpZHRoVHJpZ2dlclN0eWxlXG4gICAgICB9LCB0cmlnZ2VyIHx8IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEJhcnNPdXRsaW5lZCwgbnVsbCkpIDogbnVsbDtcbiAgICAgIHZhciBpY29uT2JqID0ge1xuICAgICAgICBleHBhbmRlZDogcmV2ZXJzZUFycm93ID8gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmlnaHRPdXRsaW5lZCwgbnVsbCkgOiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMZWZ0T3V0bGluZWQsIG51bGwpLFxuICAgICAgICBjb2xsYXBzZWQ6IHJldmVyc2VBcnJvdyA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExlZnRPdXRsaW5lZCwgbnVsbCkgOiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSaWdodE91dGxpbmVkLCBudWxsKVxuICAgICAgfTtcbiAgICAgIHZhciBzdGF0dXMgPSBjb2xsYXBzZWQgPyAnY29sbGFwc2VkJyA6ICdleHBhbmRlZCc7XG4gICAgICB2YXIgZGVmYXVsdFRyaWdnZXIgPSBpY29uT2JqW3N0YXR1c107XG4gICAgICB2YXIgdHJpZ2dlckRvbSA9IHRyaWdnZXIgIT09IG51bGwgPyB6ZXJvV2lkdGhUcmlnZ2VyIHx8IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChwcmVmaXhDbHMsIFwiLXRyaWdnZXJcIiksXG4gICAgICAgIG9uQ2xpY2s6IF90aGlzLnRvZ2dsZSxcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICB3aWR0aDogc2lkZXJXaWR0aFxuICAgICAgICB9XG4gICAgICB9LCB0cmlnZ2VyIHx8IGRlZmF1bHRUcmlnZ2VyKSA6IG51bGw7XG5cbiAgICAgIHZhciBkaXZTdHlsZSA9IF9leHRlbmRzKF9leHRlbmRzKHt9LCBzdHlsZSksIHtcbiAgICAgICAgZmxleDogXCIwIDAgXCIuY29uY2F0KHNpZGVyV2lkdGgpLFxuICAgICAgICBtYXhXaWR0aDogc2lkZXJXaWR0aCxcbiAgICAgICAgbWluV2lkdGg6IHNpZGVyV2lkdGgsXG4gICAgICAgIHdpZHRoOiBzaWRlcldpZHRoXG4gICAgICB9KTtcblxuICAgICAgdmFyIHNpZGVyQ2xzID0gY2xhc3NOYW1lcyhwcmVmaXhDbHMsIFwiXCIuY29uY2F0KHByZWZpeENscywgXCItXCIpLmNvbmNhdCh0aGVtZSksIChfY2xhc3NOYW1lcyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTmFtZXMsIFwiXCIuY29uY2F0KHByZWZpeENscywgXCItY29sbGFwc2VkXCIpLCAhIWNvbGxhcHNlZCksIF9kZWZpbmVQcm9wZXJ0eShfY2xhc3NOYW1lcywgXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1oYXMtdHJpZ2dlclwiKSwgY29sbGFwc2libGUgJiYgdHJpZ2dlciAhPT0gbnVsbCAmJiAhemVyb1dpZHRoVHJpZ2dlciksIF9kZWZpbmVQcm9wZXJ0eShfY2xhc3NOYW1lcywgXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1iZWxvd1wiKSwgISFiZWxvdyksIF9kZWZpbmVQcm9wZXJ0eShfY2xhc3NOYW1lcywgXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi16ZXJvLXdpZHRoXCIpLCBwYXJzZUZsb2F0KHNpZGVyV2lkdGgpID09PSAwKSwgX2NsYXNzTmFtZXMpLCBjbGFzc05hbWUpO1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiYXNpZGVcIiwgX2V4dGVuZHMoe1xuICAgICAgICBjbGFzc05hbWU6IHNpZGVyQ2xzXG4gICAgICB9LCBkaXZQcm9wcywge1xuICAgICAgICBzdHlsZTogZGl2U3R5bGVcbiAgICAgIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJcIi5jb25jYXQocHJlZml4Q2xzLCBcIi1jaGlsZHJlblwiKVxuICAgICAgfSwgY2hpbGRyZW4pLCBjb2xsYXBzaWJsZSB8fCBiZWxvdyAmJiB6ZXJvV2lkdGhUcmlnZ2VyID8gdHJpZ2dlckRvbSA6IG51bGwpO1xuICAgIH07XG5cbiAgICBfdGhpcy51bmlxdWVJZCA9IGdlbmVyYXRlSWQoJ2FudC1zaWRlci0nKTtcbiAgICB2YXIgbWF0Y2hNZWRpYTtcblxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgbWF0Y2hNZWRpYSA9IHdpbmRvdy5tYXRjaE1lZGlhO1xuICAgIH1cblxuICAgIGlmIChtYXRjaE1lZGlhICYmIHByb3BzLmJyZWFrcG9pbnQgJiYgcHJvcHMuYnJlYWtwb2ludCBpbiBkaW1lbnNpb25NYXhNYXApIHtcbiAgICAgIF90aGlzLm1xbCA9IG1hdGNoTWVkaWEoXCIobWF4LXdpZHRoOiBcIi5jb25jYXQoZGltZW5zaW9uTWF4TWFwW3Byb3BzLmJyZWFrcG9pbnRdLCBcIilcIikpO1xuICAgIH1cblxuICAgIHZhciBjb2xsYXBzZWQ7XG5cbiAgICBpZiAoJ2NvbGxhcHNlZCcgaW4gcHJvcHMpIHtcbiAgICAgIGNvbGxhcHNlZCA9IHByb3BzLmNvbGxhcHNlZDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29sbGFwc2VkID0gcHJvcHMuZGVmYXVsdENvbGxhcHNlZDtcbiAgICB9XG5cbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGNvbGxhcHNlZDogY29sbGFwc2VkLFxuICAgICAgYmVsb3c6IGZhbHNlXG4gICAgfTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoSW50ZXJuYWxTaWRlciwgW3tcbiAgICBrZXk6IFwiY29tcG9uZW50RGlkTW91bnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICB2YXIgX2E7XG5cbiAgICAgIGlmICh0aGlzLm1xbCkge1xuICAgICAgICB0aGlzLm1xbC5hZGRMaXN0ZW5lcih0aGlzLnJlc3BvbnNpdmVIYW5kbGVyKTtcbiAgICAgICAgdGhpcy5yZXNwb25zaXZlSGFuZGxlcih0aGlzLm1xbCk7XG4gICAgICB9XG5cbiAgICAgIChfYSA9IHRoaXMucHJvcHMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zaWRlckhvb2suYWRkU2lkZXIodGhpcy51bmlxdWVJZCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNvbXBvbmVudFdpbGxVbm1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgdmFyIF9hLCBfYjtcblxuICAgICAgKF9hID0gdGhpcyA9PT0gbnVsbCB8fCB0aGlzID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0aGlzLm1xbCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJlbW92ZUxpc3RlbmVyKHRoaXMucmVzcG9uc2l2ZUhhbmRsZXIpO1xuICAgICAgKF9iID0gdGhpcy5wcm9wcykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnNpZGVySG9vay5yZW1vdmVTaWRlcih0aGlzLnVuaXF1ZUlkKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBjb2xsYXBzZWQgPSB0aGlzLnN0YXRlLmNvbGxhcHNlZDtcbiAgICAgIHZhciBjb2xsYXBzZWRXaWR0aCA9IHRoaXMucHJvcHMuY29sbGFwc2VkV2lkdGg7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU2lkZXJDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgc2lkZXJDb2xsYXBzZWQ6IGNvbGxhcHNlZCxcbiAgICAgICAgICBjb2xsYXBzZWRXaWR0aDogY29sbGFwc2VkV2lkdGhcbiAgICAgICAgfVxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29uZmlnQ29uc3VtZXIsIG51bGwsIHRoaXMucmVuZGVyU2lkZXIpKTtcbiAgICB9XG4gIH1dLCBbe1xuICAgIGtleTogXCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzKG5leHRQcm9wcykge1xuICAgICAgaWYgKCdjb2xsYXBzZWQnIGluIG5leHRQcm9wcykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGNvbGxhcHNlZDogbmV4dFByb3BzLmNvbGxhcHNlZFxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSW50ZXJuYWxTaWRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuSW50ZXJuYWxTaWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGNvbGxhcHNpYmxlOiBmYWxzZSxcbiAgZGVmYXVsdENvbGxhcHNlZDogZmFsc2UsXG4gIHJldmVyc2VBcnJvdzogZmFsc2UsXG4gIHdpZHRoOiAyMDAsXG4gIGNvbGxhcHNlZFdpZHRoOiA4MCxcbiAgc3R5bGU6IHt9LFxuICB0aGVtZTogJ2RhcmsnXG59OyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvcHJlZmVyLXN0YXRlbGVzcy1mdW5jdGlvblxuXG52YXIgU2lkZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQyKSB7XG4gIF9pbmhlcml0cyhTaWRlciwgX1JlYWN0JENvbXBvbmVudDIpO1xuXG4gIHZhciBfc3VwZXIyID0gX2NyZWF0ZVN1cGVyKFNpZGVyKTtcblxuICBmdW5jdGlvbiBTaWRlcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU2lkZXIpO1xuXG4gICAgcmV0dXJuIF9zdXBlcjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTaWRlciwgW3tcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTGF5b3V0Q29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEludGVybmFsU2lkZXIsIF9leHRlbmRzKHt9LCBjb250ZXh0LCBfdGhpczIucHJvcHMpKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTaWRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgU2lkZXIgYXMgZGVmYXVsdCB9OyIsInZhciBpc051bWVyaWMgPSBmdW5jdGlvbiBpc051bWVyaWModmFsdWUpIHtcbiAgcmV0dXJuICFpc05hTihwYXJzZUZsb2F0KHZhbHVlKSkgJiYgaXNGaW5pdGUodmFsdWUpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgaXNOdW1lcmljOyIsImltcG9ydCBMYXlvdXQgZnJvbSAnLi9sYXlvdXQnO1xuaW1wb3J0IFNpZGVyIGZyb20gJy4vU2lkZXInO1xuTGF5b3V0LlNpZGVyID0gU2lkZXI7XG5leHBvcnQgZGVmYXVsdCBMYXlvdXQ7IiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bywgZnJvbSkge1xuICBpZiAoZnJvbSA9PT0gdW5kZWZpbmVkKSBmcm9tID0gJyc7XG5cbiAgdmFyIHRvUGFydHMgPSAodG8gJiYgdG8uc3BsaXQoJy8nKSkgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSAoZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2g7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG5cbiAgaWYgKFxuICAgIG11c3RFbmRBYnMgJiZcbiAgICBmcm9tUGFydHNbMF0gIT09ICcnICYmXG4gICAgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSlcbiAgKVxuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTtcbiIsImZ1bmN0aW9uIHZhbHVlT2Yob2JqKSB7XG4gIHJldHVybiBvYmoudmFsdWVPZiA/IG9iai52YWx1ZU9mKCkgOiBPYmplY3QucHJvdG90eXBlLnZhbHVlT2YuY2FsbChvYmopO1xufVxuXG5mdW5jdGlvbiB2YWx1ZUVxdWFsKGEsIGIpIHtcbiAgLy8gVGVzdCBmb3Igc3RyaWN0IGVxdWFsaXR5IGZpcnN0LlxuICBpZiAoYSA9PT0gYikgcmV0dXJuIHRydWU7XG5cbiAgLy8gT3RoZXJ3aXNlLCBpZiBlaXRoZXIgb2YgdGhlbSA9PSBudWxsIHRoZXkgYXJlIG5vdCBlcXVhbC5cbiAgaWYgKGEgPT0gbnVsbCB8fCBiID09IG51bGwpIHJldHVybiBmYWxzZTtcblxuICBpZiAoQXJyYXkuaXNBcnJheShhKSkge1xuICAgIHJldHVybiAoXG4gICAgICBBcnJheS5pc0FycmF5KGIpICYmXG4gICAgICBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiZcbiAgICAgIGEuZXZlcnkoZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoaXRlbSwgYltpbmRleF0pO1xuICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBhID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIgYVZhbHVlID0gdmFsdWVPZihhKTtcbiAgICB2YXIgYlZhbHVlID0gdmFsdWVPZihiKTtcblxuICAgIGlmIChhVmFsdWUgIT09IGEgfHwgYlZhbHVlICE9PSBiKSByZXR1cm4gdmFsdWVFcXVhbChhVmFsdWUsIGJWYWx1ZSk7XG5cbiAgICByZXR1cm4gT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgYSwgYikpLmV2ZXJ5KGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoYVtrZXldLCBiW2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2YWx1ZUVxdWFsO1xuIiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICAgIGlmIChjb25kaXRpb24pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaXNQcm9kdWN0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCI6IFwiICsgKG1lc3NhZ2UgfHwgJycpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW52YXJpYW50O1xuIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIHBhdGgudG9Mb3dlckNhc2UoKS5pbmRleE9mKHByZWZpeC50b0xvd2VyQ2FzZSgpKSA9PT0gMCAmJiAnLz8jJy5pbmRleE9mKHBhdGguY2hhckF0KHByZWZpeC5sZW5ndGgpKSAhPT0gLTE7XG59XG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdChwYXRoLmxlbmd0aCAtIDEpID09PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuICB2YXIgaGFzaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignIycpO1xuXG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG5cbiAgaWYgKHNlYXJjaEluZGV4ICE9PSAtMSkge1xuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuICB2YXIgcGF0aCA9IHBhdGhuYW1lIHx8ICcvJztcbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogXCIjXCIgKyBoYXNoO1xuICByZXR1cm4gcGF0aDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSwgY3VycmVudExvY2F0aW9uKSB7XG4gIHZhciBsb2NhdGlvbjtcblxuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIHBhdGgpO1xuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5wYXRobmFtZSA9ICcnO1xuXG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09ICc/JykgbG9jYXRpb24uc2VhcmNoID0gJz8nICsgbG9jYXRpb24uc2VhcmNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5zZWFyY2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSAnIycpIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBsb2NhdGlvbi5oYXNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5oYXNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKHN0YXRlICE9PSB1bmRlZmluZWQgJiYgbG9jYXRpb24uc3RhdGUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBVUklFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArICdUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYW4gaW52YWxpZCBwZXJjZW50LWVuY29kaW5nLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChrZXkpIGxvY2F0aW9uLmtleSA9IGtleTtcblxuICBpZiAoY3VycmVudExvY2F0aW9uKSB7XG4gICAgLy8gUmVzb2x2ZSBpbmNvbXBsZXRlL3JlbGF0aXZlIHBhdGhuYW1lIHJlbGF0aXZlIHRvIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByb21wdCA9PSBudWxsLCAnQSBoaXN0b3J5IHN1cHBvcnRzIG9ubHkgb25lIHByb21wdCBhdCBhIHRpbWUnKSA6IHZvaWQgMDtcbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJvbXB0ID09PSBuZXh0UHJvbXB0KSBwcm9tcHQgPSBudWxsO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXG4gICAgLy8gdGhlIHByZXZpb3VzIG9uZSwgd2UgbWF5IGVuZCB1cCBpbiBhIHdlaXJkIHN0YXRlLiBGaWd1cmUgb3V0IHRoZVxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHR5cGVvZiBwcm9tcHQgPT09ICdmdW5jdGlvbicgPyBwcm9tcHQobG9jYXRpb24sIGFjdGlvbikgOiBwcm9tcHQ7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlJykgOiB2b2lkIDA7XG4gICAgICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJldHVybiBmYWxzZSBmcm9tIGEgdHJhbnNpdGlvbiBob29rIHRvIGNhbmNlbCB0aGUgdHJhbnNpdGlvbi5cbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcblxuICBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xuICAgIHZhciBpc0FjdGl2ZSA9IHRydWU7XG5cbiAgICBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgIGlmIChpc0FjdGl2ZSkgZm4uYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5vdGlmeUxpc3RlbmVycygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXG4gICAgY29uZmlybVRyYW5zaXRpb25UbzogY29uZmlybVRyYW5zaXRpb25UbyxcbiAgICBhcHBlbmRMaXN0ZW5lcjogYXBwZW5kTGlzdGVuZXIsXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcbiAgfTtcbn1cblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5mdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gd2luZG93Lmhpc3RvcnkgJiYgJ3B1c2hTdGF0ZScgaW4gd2luZG93Lmhpc3Rvcnk7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBicm93c2VyIGZpcmVzIHBvcHN0YXRlIG9uIGhhc2ggY2hhbmdlLlxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0ZpcmVmb3gnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIGdpdmVuIHBvcHN0YXRlIGV2ZW50IGlzIGFuIGV4dHJhbmVvdXMgV2ViS2l0IGV2ZW50LlxuICogQWNjb3VudHMgZm9yIHRoZSBmYWN0IHRoYXQgQ2hyb21lIG9uIGlPUyBmaXJlcyByZWFsIHBvcHN0YXRlIGV2ZW50c1xuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXG4gKi9cblxuZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xuICByZXR1cm4gZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufVxuXG52YXIgUG9wU3RhdGVFdmVudCA9ICdwb3BzdGF0ZSc7XG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG5mdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZm9yY2VSZWZyZXNoID0gX3Byb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQkMSA9ICdoYXNoY2hhbmdlJztcbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG5mdW5jdGlvbiBzdHJpcEhhc2godXJsKSB7XG4gIHZhciBoYXNoSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xufVxuXG5mdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn1cblxuZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpICsgJyMnICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IF9wcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB2b2lkIDAgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsJCQxKGEsIGIpIHtcbiAgICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2g7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG4gICAgICBpZiAoIWZvcmNlTmV4dFBvcCAmJiBsb2NhdGlvbnNBcmVFcXVhbCQkMShwcmV2TG9jYXRpb24sIGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBBIGhhc2hjaGFuZ2UgZG9lc24ndCBhbHdheXMgPT0gbG9jYXRpb24gY2hhbmdlLlxuXG4gICAgICBpZiAoaWdub3JlUGF0aCA9PT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHJldHVybjsgLy8gSWdub3JlIHRoaXMgY2hhbmdlOyB3ZSBhbHJlYWR5IHNldFN0YXRlIGluIHB1c2gvcmVwbGFjZS5cblxuICAgICAgaWdub3JlUGF0aCA9IG51bGw7XG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH0gLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG5cblxuICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHZhciBiYXNlVGFnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYmFzZScpO1xuICAgIHZhciBocmVmID0gJyc7XG5cbiAgICBpZiAoYmFzZVRhZyAmJiBiYXNlVGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpKSB7XG4gICAgICBocmVmID0gc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaHJlZiArICcjJyArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgIG5leHRQYXRocy5wdXNoKHBhdGgpO1xuICAgICAgICBhbGxQYXRocyA9IG5leHRQYXRocztcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKSA6IHZvaWQgMDtcbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBSRVBMQUNFLCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMuaW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKSA6IHZvaWQgMDtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZnVuY3Rpb24gY2xhbXAobiwgbG93ZXJCb3VuZCwgdXBwZXJCb3VuZCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCBzdG9yZXMgbG9jYXRpb25zIGluIG1lbW9yeS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gX3Byb3BzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHZvaWQgMCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IF9wcm9wcy5pbml0aWFsSW5kZXgsXG4gICAgICBpbml0aWFsSW5kZXggPSBfcHJvcHMkaW5pdGlhbEluZGV4ID09PSB2b2lkIDAgPyAwIDogX3Byb3BzJGluaXRpYWxJbmRleCxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGNyZWF0ZVBhdGg7XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwcmV2SW5kZXggPSBoaXN0b3J5LmluZGV4O1xuICAgICAgdmFyIG5leHRJbmRleCA9IHByZXZJbmRleCArIDE7XG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG5cbiAgICAgIGlmIChuZXh0RW50cmllcy5sZW5ndGggPiBuZXh0SW5kZXgpIHtcbiAgICAgICAgbmV4dEVudHJpZXMuc3BsaWNlKG5leHRJbmRleCwgbmV4dEVudHJpZXMubGVuZ3RoIC0gbmV4dEluZGV4LCBsb2NhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0RW50cmllcy5wdXNoKGxvY2F0aW9uKTtcbiAgICAgIH1cblxuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBpbmRleDogbmV4dEluZGV4LFxuICAgICAgICBlbnRyaWVzOiBuZXh0RW50cmllc1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgaGlzdG9yeS5lbnRyaWVzW2hpc3RvcnkuaW5kZXhdID0gbG9jYXRpb247XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKG9rKSB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XG4gICAgICAgIC8vIGNhdXNpbmcgYSByZW5kZXIgYWZ0ZXIgYSBjYW5jZWxsZWQgUE9QLlxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNhbkdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gaGlzdG9yeS5pbmRleCArIG47XG4gICAgcmV0dXJuIG5leHRJbmRleCA+PSAwICYmIG5leHRJbmRleCA8IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gIH1cblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGVudHJpZXNbaW5kZXhdLFxuICAgIGluZGV4OiBpbmRleCxcbiAgICBlbnRyaWVzOiBlbnRyaWVzLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBjYW5HbzogY2FuR28sXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5leHBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgcGFyc2VQYXRoLCBjcmVhdGVQYXRoIH07XG4iLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgY3JlYXRlUGF0aCB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBjcmVhdGVDb250ZXh0IGZyb20gJ21pbmktY3JlYXRlLXJlYWN0LWNvbnRleHQnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gJ3BhdGgtdG8tcmVnZXhwJztcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSkge1xuICB2YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxudmFyIGhpc3RvcnlDb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZU5hbWVkQ29udGV4dChcIlJvdXRlci1IaXN0b3J5XCIpO1xuXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQkMSA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG52YXIgY29udGV4dCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVOYW1lZENvbnRleHQkMShcIlJvdXRlclwiKTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIFJvdXRlci5jb21wdXRlUm9vdE1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxvY2F0aW9uOiBwcm9wcy5oaXN0b3J5LmxvY2F0aW9uXG4gICAgfTsgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxuICAgIC8vIGNoYW5nZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3IgaW4gY2FzZSB0aGVyZSBhcmUgYW55IDxSZWRpcmVjdD5zXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XG4gICAgLy8gZ2V0IGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0aGUgPFJvdXRlcj4gaXMgbW91bnRlZC5cblxuICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbnVsbDtcblxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xuICAgICAgX3RoaXMudW5saXN0ZW4gPSBwcm9wcy5oaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgICAgaWYgKF90aGlzLl9pc01vdW50ZWQpIHtcbiAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbG9jYXRpb247XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XG5cbiAgICBpZiAodGhpcy5fcGVuZGluZ0xvY2F0aW9uKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbG9jYXRpb246IHRoaXMuX3BlbmRpbmdMb2NhdGlvblxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnVubGlzdGVuKSB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICB2YWx1ZToge1xuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLnN0YXRlLmxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogUm91dGVyLmNvbXB1dGVSb290TWF0Y2godGhpcy5zdGF0ZS5sb2NhdGlvbi5wYXRobmFtZSksXG4gICAgICAgIHN0YXRpY0NvbnRleHQ6IHRoaXMucHJvcHMuc3RhdGljQ29udGV4dFxuICAgICAgfVxuICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoaGlzdG9yeUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIHx8IG51bGwsXG4gICAgICB2YWx1ZTogdGhpcy5wcm9wcy5oaXN0b3J5XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHN0b3JlcyBsb2NhdGlvbiBpbiBtZW1vcnkuXG4gKi9cblxudmFyIE1lbW9yeVJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShNZW1vcnlSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1lbW9yeVJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlTWVtb3J5SGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE1lbW9yeVJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIE1lbW9yeVJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBNZW1vcnlSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgaW5pdGlhbEluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbiAgfTtcblxuICBNZW1vcnlSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8TWVtb3J5Um91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgTWVtb3J5Um91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciBMaWZlY3ljbGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTGlmZWN5Y2xlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaWZlY3ljbGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IExpZmVjeWNsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Nb3VudCkgdGhpcy5wcm9wcy5vbk1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVwZGF0ZSkgdGhpcy5wcm9wcy5vblVwZGF0ZS5jYWxsKHRoaXMsIHRoaXMsIHByZXZQcm9wcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Vbm1vdW50KSB0aGlzLnByb3BzLm9uVW5tb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIExpZmVjeWNsZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHJvbXB0aW5nIHRoZSB1c2VyIGJlZm9yZSBuYXZpZ2F0aW5nIGF3YXkgZnJvbSBhIHNjcmVlbi5cbiAqL1xuXG5mdW5jdGlvbiBQcm9tcHQoX3JlZikge1xuICB2YXIgbWVzc2FnZSA9IF9yZWYubWVzc2FnZSxcbiAgICAgIF9yZWYkd2hlbiA9IF9yZWYud2hlbixcbiAgICAgIHdoZW4gPSBfcmVmJHdoZW4gPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJHdoZW47XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxQcm9tcHQ+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgaWYgKCF3aGVuIHx8IGNvbnRleHQuc3RhdGljQ29udGV4dCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIG1ldGhvZCA9IGNvbnRleHQuaGlzdG9yeS5ibG9jaztcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICBpZiAocHJldlByb3BzLm1lc3NhZ2UgIT09IG1lc3NhZ2UpIHtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvblVubW91bnQ6IGZ1bmN0aW9uIG9uVW5tb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgfSxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIG1lc3NhZ2VUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKTtcbiAgUHJvbXB0LnByb3BUeXBlcyA9IHtcbiAgICB3aGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBtZXNzYWdlOiBtZXNzYWdlVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCkge1xuICBpZiAoY2FjaGVbcGF0aF0pIHJldHVybiBjYWNoZVtwYXRoXTtcbiAgdmFyIGdlbmVyYXRvciA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKHBhdGgpO1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdGhdID0gZ2VuZXJhdG9yO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0b3I7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIGdlbmVyYXRpbmcgYSBVUkwgcGF0aG5hbWUgZnJvbSBhIHBhdGggYW5kIHBhcmFtZXRlcnMuXG4gKi9cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXRoID09PSB2b2lkIDApIHtcbiAgICBwYXRoID0gXCIvXCI7XG4gIH1cblxuICBpZiAocGFyYW1zID09PSB2b2lkIDApIHtcbiAgICBwYXJhbXMgPSB7fTtcbiAgfVxuXG4gIHJldHVybiBwYXRoID09PSBcIi9cIiA/IHBhdGggOiBjb21waWxlUGF0aChwYXRoKShwYXJhbXMsIHtcbiAgICBwcmV0dHk6IHRydWVcbiAgfSk7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG5hdmlnYXRpbmcgcHJvZ3JhbW1hdGljYWxseSB3aXRoIGEgY29tcG9uZW50LlxuICovXG5cbmZ1bmN0aW9uIFJlZGlyZWN0KF9yZWYpIHtcbiAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBfcmVmJHB1c2ggPSBfcmVmLnB1c2gsXG4gICAgICBwdXNoID0gX3JlZiRwdXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYkcHVzaDtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJlZGlyZWN0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dC5oaXN0b3J5LFxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gY29udGV4dC5zdGF0aWNDb250ZXh0O1xuICAgIHZhciBtZXRob2QgPSBwdXNoID8gaGlzdG9yeS5wdXNoIDogaGlzdG9yeS5yZXBsYWNlO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKGNvbXB1dGVkTWF0Y2ggPyB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBnZW5lcmF0ZVBhdGgodG8sIGNvbXB1dGVkTWF0Y2gucGFyYW1zKSA6IF9leHRlbmRzKHt9LCB0bywge1xuICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aCh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgfSkgOiB0byk7IC8vIFdoZW4gcmVuZGVyaW5nIGluIGEgc3RhdGljIGNvbnRleHQsXG4gICAgLy8gc2V0IHRoZSBuZXcgbG9jYXRpb24gaW1tZWRpYXRlbHkuXG5cbiAgICBpZiAoc3RhdGljQ29udGV4dCkge1xuICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudCgpIHtcbiAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwcmV2UHJvcHMudG8pO1xuXG4gICAgICAgIGlmICghbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICAgICAgICBrZXk6IHByZXZMb2NhdGlvbi5rZXlcbiAgICAgICAgfSkpKSB7XG4gICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRvOiB0b1xuICAgIH0pO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSZWRpcmVjdC5wcm9wVHlwZXMgPSB7XG4gICAgcHVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGNhY2hlJDEgPSB7fTtcbnZhciBjYWNoZUxpbWl0JDEgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50JDEgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aCQxKHBhdGgsIG9wdGlvbnMpIHtcbiAgdmFyIGNhY2hlS2V5ID0gXCJcIiArIG9wdGlvbnMuZW5kICsgb3B0aW9ucy5zdHJpY3QgKyBvcHRpb25zLnNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhDYWNoZSA9IGNhY2hlJDFbY2FjaGVLZXldIHx8IChjYWNoZSQxW2NhY2hlS2V5XSA9IHt9KTtcbiAgaWYgKHBhdGhDYWNoZVtwYXRoXSkgcmV0dXJuIHBhdGhDYWNoZVtwYXRoXTtcbiAgdmFyIGtleXMgPSBbXTtcbiAgdmFyIHJlZ2V4cCA9IHBhdGhUb1JlZ2V4cChwYXRoLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIHJlc3VsdCA9IHtcbiAgICByZWdleHA6IHJlZ2V4cCxcbiAgICBrZXlzOiBrZXlzXG4gIH07XG5cbiAgaWYgKGNhY2hlQ291bnQkMSA8IGNhY2hlTGltaXQkMSkge1xuICAgIHBhdGhDYWNoZVtwYXRoXSA9IHJlc3VsdDtcbiAgICBjYWNoZUNvdW50JDErKztcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aC5cbiAqL1xuXG5cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXRobmFtZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkob3B0aW9ucykpIHtcbiAgICBvcHRpb25zID0ge1xuICAgICAgcGF0aDogb3B0aW9uc1xuICAgIH07XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcbiAgICAgIF9vcHRpb25zJHN0cmljdCA9IF9vcHRpb25zLnN0cmljdCxcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXG4gICAgICBzZW5zaXRpdmUgPSBfb3B0aW9ucyRzZW5zaXRpdmUgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc2Vuc2l0aXZlO1xuICB2YXIgcGF0aHMgPSBbXS5jb25jYXQocGF0aCk7XG4gIHJldHVybiBwYXRocy5yZWR1Y2UoZnVuY3Rpb24gKG1hdGNoZWQsIHBhdGgpIHtcbiAgICBpZiAoIXBhdGggJiYgcGF0aCAhPT0gXCJcIikgcmV0dXJuIG51bGw7XG4gICAgaWYgKG1hdGNoZWQpIHJldHVybiBtYXRjaGVkO1xuXG4gICAgdmFyIF9jb21waWxlUGF0aCA9IGNvbXBpbGVQYXRoJDEocGF0aCwge1xuICAgICAgZW5kOiBleGFjdCxcbiAgICAgIHN0cmljdDogc3RyaWN0LFxuICAgICAgc2Vuc2l0aXZlOiBzZW5zaXRpdmVcbiAgICB9KSxcbiAgICAgICAgcmVnZXhwID0gX2NvbXBpbGVQYXRoLnJlZ2V4cCxcbiAgICAgICAga2V5cyA9IF9jb21waWxlUGF0aC5rZXlzO1xuXG4gICAgdmFyIG1hdGNoID0gcmVnZXhwLmV4ZWMocGF0aG5hbWUpO1xuICAgIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuICAgIHZhciB1cmwgPSBtYXRjaFswXSxcbiAgICAgICAgdmFsdWVzID0gbWF0Y2guc2xpY2UoMSk7XG4gICAgdmFyIGlzRXhhY3QgPSBwYXRobmFtZSA9PT0gdXJsO1xuICAgIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IHBhdGgsXG4gICAgICAvLyB0aGUgcGF0aCB1c2VkIHRvIG1hdGNoXG4gICAgICB1cmw6IHBhdGggPT09IFwiL1wiICYmIHVybCA9PT0gXCJcIiA/IFwiL1wiIDogdXJsLFxuICAgICAgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgICBpc0V4YWN0OiBpc0V4YWN0LFxuICAgICAgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgICBwYXJhbXM6IGtleXMucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBrZXksIGluZGV4KSB7XG4gICAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICB9LCB7fSlcbiAgICB9O1xuICB9LCBudWxsKTtcbn1cblxuZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59XG5cbmZ1bmN0aW9uIGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIHBhdGgpIHtcbiAgdmFyIHZhbHVlID0gY2hpbGRyZW4ocHJvcHMpO1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHZhbHVlICE9PSB1bmRlZmluZWQsIFwiWW91IHJldHVybmVkIGB1bmRlZmluZWRgIGZyb20gdGhlIGBjaGlsZHJlbmAgZnVuY3Rpb24gb2YgXCIgKyAoXCI8Um91dGVcIiArIChwYXRoID8gXCIgcGF0aD1cXFwiXCIgKyBwYXRoICsgXCJcXFwiXCIgOiBcIlwiKSArIFwiPiwgYnV0IHlvdSBcIikgKyBcInNob3VsZCBoYXZlIHJldHVybmVkIGEgUmVhY3QgZWxlbWVudCBvciBgbnVsbGBcIikgOiB2b2lkIDA7XG4gIHJldHVybiB2YWx1ZSB8fCBudWxsO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBzaW5nbGUgcGF0aCBhbmQgcmVuZGVyaW5nLlxuICovXG5cblxudmFyIFJvdXRlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUm91dGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0JDEpIHtcbiAgICAgICFjb250ZXh0JDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQkMS5sb2NhdGlvbjtcbiAgICAgIHZhciBtYXRjaCA9IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggPyBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoIC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuICAgICAgOiBfdGhpcy5wcm9wcy5wYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfdGhpcy5wcm9wcykgOiBjb250ZXh0JDEubWF0Y2g7XG5cbiAgICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCBjb250ZXh0JDEsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogbWF0Y2hcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgIGNvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcbiAgICAgICAgICByZW5kZXIgPSBfdGhpcyRwcm9wcy5yZW5kZXI7IC8vIFByZWFjdCB1c2VzIGFuIGVtcHR5IGFycmF5IGFzIGNoaWxkcmVuIGJ5XG4gICAgICAvLyBkZWZhdWx0LCBzbyB1c2UgbnVsbCBpZiB0aGF0J3MgdGhlIGNhc2UuXG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJiBjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgY2hpbGRyZW4gPSBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBwcm9wc1xuICAgICAgfSwgcHJvcHMubWF0Y2ggPyBjaGlsZHJlbiA/IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBjaGlsZHJlbiA6IGNvbXBvbmVudCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiByZW5kZXIgPyByZW5kZXIocHJvcHMpIDogbnVsbCA6IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBudWxsKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGUucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChwcm9wcywgcHJvcE5hbWUpIHtcbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gJiYgIWlzVmFsaWRFbGVtZW50VHlwZShwcm9wc1twcm9wTmFtZV0pKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgJ2NvbXBvbmVudCcgc3VwcGxpZWQgdG8gJ1JvdXRlJzogdGhlIHByb3AgaXMgbm90IGEgdmFsaWQgUmVhY3QgY29tcG9uZW50XCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHBhdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXSksXG4gICAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2xcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLmNvbXBvbmVudCksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY29tcG9uZW50PiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpICsgbG9jYXRpb24ucGF0aG5hbWVcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgdmFyIGJhc2UgPSBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpO1xuICBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZihiYXNlKSAhPT0gMCkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLnN1YnN0cihiYXNlLmxlbmd0aClcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVVSTChsb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbn1cblxuZnVuY3Rpb24gc3RhdGljSGFuZGxlcihtZXRob2ROYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSkgOiBpbnZhcmlhbnQoZmFsc2UpIDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG4vKipcbiAqIFRoZSBwdWJsaWMgdG9wLWxldmVsIEFQSSBmb3IgYSBcInN0YXRpY1wiIDxSb3V0ZXI+LCBzby1jYWxsZWQgYmVjYXVzZSBpdFxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxuICogc2VydmVyLXJlbmRlcmluZyBzY2VuYXJpb3MuXG4gKi9cblxuXG52YXIgU3RhdGljUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN0YXRpY1JvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3RhdGljUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgX3RoaXMuaGFuZGxlUHVzaCA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUFVTSFwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlUmVwbGFjZSA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUkVQTEFDRVwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlTGlzdGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUJsb2NrID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTdGF0aWNSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5uYXZpZ2F0ZVRvID0gZnVuY3Rpb24gbmF2aWdhdGVUbyhsb2NhdGlvbiwgYWN0aW9uKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMkYmFzZW5hbWUgPSBfdGhpcyRwcm9wcy5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wcyRjb250ZXh0ID0gX3RoaXMkcHJvcHMuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMkY29udGV4dDtcbiAgICBjb250ZXh0LmFjdGlvbiA9IGFjdGlvbjtcbiAgICBjb250ZXh0LmxvY2F0aW9uID0gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSk7XG4gICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzMiRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzMiRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGNvbnRleHQgPSBfdGhpcyRwcm9wczIuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzMiRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzMiRjb250ZXh0LFxuICAgICAgICBfdGhpcyRwcm9wczIkbG9jYXRpb24gPSBfdGhpcyRwcm9wczIubG9jYXRpb24sXG4gICAgICAgIGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyJGxvY2F0aW9uID09PSB2b2lkIDAgPyBcIi9cIiA6IF90aGlzJHByb3BzMiRsb2NhdGlvbixcbiAgICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzMiwgW1wiYmFzZW5hbWVcIiwgXCJjb250ZXh0XCIsIFwibG9jYXRpb25cIl0pO1xuXG4gICAgdmFyIGhpc3RvcnkgPSB7XG4gICAgICBjcmVhdGVIcmVmOiBmdW5jdGlvbiBjcmVhdGVIcmVmKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSArIGNyZWF0ZVVSTChwYXRoKSk7XG4gICAgICB9LFxuICAgICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgICAgbG9jYXRpb246IHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSksXG4gICAgICBwdXNoOiB0aGlzLmhhbmRsZVB1c2gsXG4gICAgICByZXBsYWNlOiB0aGlzLmhhbmRsZVJlcGxhY2UsXG4gICAgICBnbzogc3RhdGljSGFuZGxlcihcImdvXCIpLFxuICAgICAgZ29CYWNrOiBzdGF0aWNIYW5kbGVyKFwiZ29CYWNrXCIpLFxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKFwiZ29Gb3J3YXJkXCIpLFxuICAgICAgbGlzdGVuOiB0aGlzLmhhbmRsZUxpc3RlbixcbiAgICAgIGJsb2NrOiB0aGlzLmhhbmRsZUJsb2NrXG4gICAgfTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBoaXN0b3J5OiBoaXN0b3J5LFxuICAgICAgc3RhdGljQ29udGV4dDogY29udGV4dFxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gU3RhdGljUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN0YXRpY1JvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pXG4gIH07XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPFN0YXRpY1JvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IFN0YXRpY1JvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgdGhlIGZpcnN0IDxSb3V0ZT4gdGhhdCBtYXRjaGVzLlxuICovXG5cbnZhciBTd2l0Y2ggPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3dpdGNoLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTd2l0Y2goKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN3aXRjaC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICAgIHZhciBlbGVtZW50LCBtYXRjaDsgLy8gV2UgdXNlIFJlYWN0LkNoaWxkcmVuLmZvckVhY2ggaW5zdGVhZCBvZiBSZWFjdC5DaGlsZHJlbi50b0FycmF5KCkuZmluZCgpXG4gICAgICAvLyBoZXJlIGJlY2F1c2UgdG9BcnJheSBhZGRzIGtleXMgdG8gYWxsIGNoaWxkIGVsZW1lbnRzIGFuZCB3ZSBkbyBub3Qgd2FudFxuICAgICAgLy8gdG8gdHJpZ2dlciBhbiB1bm1vdW50L3JlbW91bnQgZm9yIHR3byA8Um91dGU+cyB0aGF0IHJlbmRlciB0aGUgc2FtZVxuICAgICAgLy8gY29tcG9uZW50IGF0IGRpZmZlcmVudCBVUkxzLlxuXG4gICAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKF90aGlzLnByb3BzLmNoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgZWxlbWVudCA9IGNoaWxkO1xuICAgICAgICAgIHZhciBwYXRoID0gY2hpbGQucHJvcHMucGF0aCB8fCBjaGlsZC5wcm9wcy5mcm9tO1xuICAgICAgICAgIG1hdGNoID0gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX2V4dGVuZHMoe30sIGNoaWxkLnByb3BzLCB7XG4gICAgICAgICAgICBwYXRoOiBwYXRoXG4gICAgICAgICAgfSkpIDogY29udGV4dC5tYXRjaDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jbG9uZUVsZW1lbnQoZWxlbWVudCwge1xuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGNvbXB1dGVkTWF0Y2g6IG1hdGNoXG4gICAgICB9KSA6IG51bGw7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFN3aXRjaDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTd2l0Y2gucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBBIHB1YmxpYyBoaWdoZXItb3JkZXIgY29tcG9uZW50IHRvIGFjY2VzcyB0aGUgaW1wZXJhdGl2ZSBBUElcbiAqL1xuXG5mdW5jdGlvbiB3aXRoUm91dGVyKENvbXBvbmVudCkge1xuICB2YXIgZGlzcGxheU5hbWUgPSBcIndpdGhSb3V0ZXIoXCIgKyAoQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lKSArIFwiKVwiO1xuXG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wid3JhcHBlZENvbXBvbmVudFJlZlwiXSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxcIiArIGRpc3BsYXlOYW1lICsgXCIgLz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHJlbWFpbmluZ1Byb3BzLCBjb250ZXh0LCB7XG4gICAgICAgIHJlZjogd3JhcHBlZENvbXBvbmVudFJlZlxuICAgICAgfSkpO1xuICAgIH0pO1xuICB9O1xuXG4gIEMuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgQy5XcmFwcGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBDLnByb3BUeXBlcyA9IHtcbiAgICAgIHdyYXBwZWRDb21wb25lbnRSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGhvaXN0U3RhdGljcyhDLCBDb21wb25lbnQpO1xufVxuXG52YXIgdXNlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQ7XG5mdW5jdGlvbiB1c2VIaXN0b3J5KCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlSGlzdG9yeSgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGhpc3RvcnlDb250ZXh0KTtcbn1cbmZ1bmN0aW9uIHVzZUxvY2F0aW9uKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlTG9jYXRpb24oKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KS5sb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIHVzZVBhcmFtcygpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVBhcmFtcygpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHZhciBtYXRjaCA9IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG4gIHJldHVybiBtYXRjaCA/IG1hdGNoLnBhcmFtcyA6IHt9O1xufVxuZnVuY3Rpb24gdXNlUm91dGVNYXRjaChwYXRoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VSb3V0ZU1hdGNoKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgdmFyIGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHBhdGgpIDogbWF0Y2g7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgZ2xvYmFsID0gd2luZG93O1xuICAgIHZhciBrZXkgPSBcIl9fcmVhY3Rfcm91dGVyX2J1aWxkX19cIjtcbiAgICB2YXIgYnVpbGROYW1lcyA9IHtcbiAgICAgIGNqczogXCJDb21tb25KU1wiLFxuICAgICAgZXNtOiBcIkVTIG1vZHVsZXNcIixcbiAgICAgIHVtZDogXCJVTURcIlxuICAgIH07XG5cbiAgICBpZiAoZ2xvYmFsW2tleV0gJiYgZ2xvYmFsW2tleV0gIT09IFwiZXNtXCIpIHtcbiAgICAgIHZhciBpbml0aWFsQnVpbGROYW1lID0gYnVpbGROYW1lc1tnbG9iYWxba2V5XV07XG4gICAgICB2YXIgc2Vjb25kYXJ5QnVpbGROYW1lID0gYnVpbGROYW1lc1tcImVzbVwiXTsgLy8gVE9ETzogQWRkIGxpbmsgdG8gYXJ0aWNsZSB0aGF0IGV4cGxhaW5zIGluIGRldGFpbCBob3cgdG8gYXZvaWRcbiAgICAgIC8vIGxvYWRpbmcgMiBkaWZmZXJlbnQgYnVpbGRzLlxuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgYXJlIGxvYWRpbmcgdGhlIFwiICsgc2Vjb25kYXJ5QnVpbGROYW1lICsgXCIgYnVpbGQgb2YgUmVhY3QgUm91dGVyIFwiICsgKFwib24gYSBwYWdlIHRoYXQgaXMgYWxyZWFkeSBydW5uaW5nIHRoZSBcIiArIGluaXRpYWxCdWlsZE5hbWUgKyBcIiBcIikgKyBcImJ1aWxkLCBzbyB0aGluZ3Mgd29uJ3Qgd29yayByaWdodC5cIik7XG4gICAgfVxuXG4gICAgZ2xvYmFsW2tleV0gPSBcImVzbVwiO1xuICB9XG59XG5cbmV4cG9ydCB7IE1lbW9yeVJvdXRlciwgUHJvbXB0LCBSZWRpcmVjdCwgUm91dGUsIFJvdXRlciwgU3RhdGljUm91dGVyLCBTd2l0Y2gsIGhpc3RvcnlDb250ZXh0IGFzIF9fSGlzdG9yeUNvbnRleHQsIGNvbnRleHQgYXMgX19Sb3V0ZXJDb250ZXh0LCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3Qtcm91dGVyLmpzLm1hcFxuIiwiaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIG1hdGNoUGF0aCB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVCcm93c2VySGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlclxuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXG4gKi9cblxudmFyIEhhc2hSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoSGFzaFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSGFzaFJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGFzaEhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBIYXNoUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gSGFzaFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSlcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciByZXNvbHZlVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJmdW5jdGlvblwiID8gdG8oY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcbnZhciBub3JtYWxpemVUb0xvY2F0aW9uID0gZnVuY3Rpb24gbm9ybWFsaXplVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcblxudmFyIGZvcndhcmRSZWZTaGltID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xuICByZXR1cm4gQztcbn07XG5cbnZhciBmb3J3YXJkUmVmID0gUmVhY3QuZm9yd2FyZFJlZjtcblxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcbn1cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn1cblxudmFyIExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcbiAgICAgIG5hdmlnYXRlID0gX3JlZi5uYXZpZ2F0ZSxcbiAgICAgIF9vbkNsaWNrID0gX3JlZi5vbkNsaWNrLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImlubmVyUmVmXCIsIFwibmF2aWdhdGVcIiwgXCJvbkNsaWNrXCJdKTtcblxuICB2YXIgdGFyZ2V0ID0gcmVzdC50YXJnZXQ7XG5cbiAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoX29uQ2xpY2spIF9vbkNsaWNrKGV2ZW50KTtcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRocm93IGV4O1xuICAgICAgfVxuXG4gICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmICggLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgICAhdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbmF2aWdhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICB9IGVsc2Uge1xuICAgIHByb3BzLnJlZiA9IGlubmVyUmVmO1xuICB9XG4gIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnQgKi9cblxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBwcm9wcyk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG5cbnZhciBMaW5rID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZjIsIGZvcndhcmRlZFJlZikge1xuICB2YXIgX3JlZjIkY29tcG9uZW50ID0gX3JlZjIuY29tcG9uZW50LFxuICAgICAgY29tcG9uZW50ID0gX3JlZjIkY29tcG9uZW50ID09PSB2b2lkIDAgPyBMaW5rQW5jaG9yIDogX3JlZjIkY29tcG9uZW50LFxuICAgICAgcmVwbGFjZSA9IF9yZWYyLnJlcGxhY2UsXG4gICAgICB0byA9IF9yZWYyLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmMi5pbm5lclJlZixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiY29tcG9uZW50XCIsIFwicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3Rvcnk7XG4gICAgdmFyIGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksIGNvbnRleHQubG9jYXRpb24pO1xuICAgIHZhciBocmVmID0gbG9jYXRpb24gPyBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBocmVmOiBocmVmLFxuICAgICAgbmF2aWdhdGU6IGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xuICAgICAgICB2YXIgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XG4gICAgICAgIHZhciBtZXRob2QgPSByZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfVxuICAgIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XG4gIHZhciByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY3VycmVudDogUHJvcFR5cGVzLmFueVxuICB9KV0pO1xuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiByZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGZvcndhcmRSZWZTaGltJDEgPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiQxID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIGk7XG4gIH0pLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuXG5cbnZhciBOYXZMaW5rID0gZm9yd2FyZFJlZiQxKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvblByb3AgPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmUsXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIHN0eWxlUHJvcCA9IF9yZWYuc3R5bGUsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXJpYS1jdXJyZW50XCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJjbGFzc05hbWVcIiwgXCJleGFjdFwiLCBcImlzQWN0aXZlXCIsIFwibG9jYXRpb25cIiwgXCJzZW5zaXRpdmVcIiwgXCJzdHJpY3RcIiwgXCJzdHlsZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPE5hdkxpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGN1cnJlbnRMb2NhdGlvbiA9IGxvY2F0aW9uUHJvcCB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgIHZhciB0b0xvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSwgY3VycmVudExvY2F0aW9uKTtcbiAgICB2YXIgcGF0aCA9IHRvTG9jYXRpb24ucGF0aG5hbWU7IC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG5cbiAgICB2YXIgZXNjYXBlZFBhdGggPSBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xuICAgIHZhciBtYXRjaCA9IGVzY2FwZWRQYXRoID8gbWF0Y2hQYXRoKGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSwge1xuICAgICAgcGF0aDogZXNjYXBlZFBhdGgsXG4gICAgICBleGFjdDogZXhhY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZSxcbiAgICAgIHN0cmljdDogc3RyaWN0XG4gICAgfSkgOiBudWxsO1xuICAgIHZhciBpc0FjdGl2ZSA9ICEhKGlzQWN0aXZlUHJvcCA/IGlzQWN0aXZlUHJvcChtYXRjaCwgY3VycmVudExvY2F0aW9uKSA6IG1hdGNoKTtcbiAgICB2YXIgY2xhc3NOYW1lID0gaXNBY3RpdmUgPyBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWVQcm9wLCBhY3RpdmVDbGFzc05hbWUpIDogY2xhc3NOYW1lUHJvcDtcbiAgICB2YXIgc3R5bGUgPSBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZVByb3AsIHt9LCBhY3RpdmVTdHlsZSkgOiBzdHlsZVByb3A7XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7XG4gICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICBzdHlsZTogc3R5bGUsXG4gICAgICB0bzogdG9Mb2NhdGlvblxuICAgIH0sIHJlc3QpOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltJDEgIT09IGZvcndhcmRSZWYkMSkge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHByb3BzKTtcbiAgfSk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG4gIHZhciBhcmlhQ3VycmVudFR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1wicGFnZVwiLCBcInN0ZXBcIiwgXCJsb2NhdGlvblwiLCBcImRhdGVcIiwgXCJ0aW1lXCIsIFwidHJ1ZVwiXSk7XG4gIE5hdkxpbmsucHJvcFR5cGVzID0gX2V4dGVuZHMoe30sIExpbmsucHJvcFR5cGVzLCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfSk7XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJSb3V0ZXIsIEhhc2hSb3V0ZXIsIExpbmssIE5hdkxpbmsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci1kb20uanMubWFwXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtcbiAgTGF5b3V0LFxufSBmcm9tICdhbnRkJztcbmltcG9ydCB7XG4gIEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyLFxufSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbi8vIGltcG9ydCBCcmVhZGNydW1iTmFtZXMgZnJvbSAnLi9jb25maWcvYnJlYWRjcnVtYk5hbWVNYXAnO1xuXG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IChcbiAgPFJvdXRlcj5cbiAgICA8TGF5b3V0IHN0eWxlPXt7IGhlaWdodDogJzEwMHZoJyB9fT5cbiAgICAgIDEyM1xuICAgIDwvTGF5b3V0PlxuICA8L1JvdXRlcj5cbik7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgUm91dGVyIGZyb20gJy4vUm91dGVyJztcblxuXG5jb25zdCBlbnYgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gJ3Byb2QnIDogJ2Rldic7XG5cbmltcG9ydChgLi9zdG9yZS9jb25maWd1cmVTdG9yZS4ke2Vudn1gKS50aGVuKCh7IGRlZmF1bHQ6IGNvbmZpZ3VyZVN0b3JlIH0pID0+IHtcbiAgcmVuZGVyKFxuICAgICAgPFByb3ZpZGVyIHN0b3JlPXtjb25maWd1cmVTdG9yZSgpfT5cbiAgICAgICAgPFJvdXRlciAvPlxuICAgICAgPC9Qcm92aWRlcj4sXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcCcpLFxuICApO1xufSk7XG4iLCJ2YXIgYXJyYXlMaWtlVG9BcnJheSA9IHJlcXVpcmUoXCIuL2FycmF5TGlrZVRvQXJyYXlcIik7XG5cbmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkoYXJyKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfYXJyYXlXaXRob3V0SG9sZXM7IiwidmFyIGFycmF5V2l0aEhvbGVzID0gcmVxdWlyZShcIi4vYXJyYXlXaXRoSG9sZXNcIik7XG5cbnZhciBpdGVyYWJsZVRvQXJyYXlMaW1pdCA9IHJlcXVpcmUoXCIuL2l0ZXJhYmxlVG9BcnJheUxpbWl0XCIpO1xuXG52YXIgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgPSByZXF1aXJlKFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheVwiKTtcblxudmFyIG5vbkl0ZXJhYmxlUmVzdCA9IHJlcXVpcmUoXCIuL25vbkl0ZXJhYmxlUmVzdFwiKTtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7XG4gIHJldHVybiBhcnJheVdpdGhIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBub25JdGVyYWJsZVJlc3QoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfc2xpY2VkVG9BcnJheTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVXaWxkY2FyZFwiKTtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfc2xpY2VkVG9BcnJheTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3NsaWNlZFRvQXJyYXlcIikpO1xuXG52YXIgX2RlZmluZVByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHlcIikpO1xuXG52YXIgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvb2JqZWN0V2l0aG91dFByb3BlcnRpZXNcIikpO1xuXG52YXIgUmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xuXG52YXIgX2NsYXNzbmFtZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJjbGFzc25hbWVzXCIpKTtcblxudmFyIF9JY29uQmFzZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vSWNvbkJhc2VcIikpO1xuXG52YXIgX3R3b1RvbmVQcmltYXJ5Q29sb3IgPSByZXF1aXJlKFwiLi90d29Ub25lUHJpbWFyeUNvbG9yXCIpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xuXG4vLyBJbml0aWFsIHNldHRpbmdcbi8vIHNob3VsZCBtb3ZlIGl0IHRvIGFudGQgbWFpbiByZXBvP1xuKDAsIF90d29Ub25lUHJpbWFyeUNvbG9yLnNldFR3b1RvbmVDb2xvcikoJyMxODkwZmYnKTtcbnZhciBJY29uID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiAocHJvcHMsIHJlZikge1xuICB2YXIgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgaWNvbiA9IHByb3BzLmljb24sXG4gICAgICBzcGluID0gcHJvcHMuc3BpbixcbiAgICAgIHJvdGF0ZSA9IHByb3BzLnJvdGF0ZSxcbiAgICAgIHRhYkluZGV4ID0gcHJvcHMudGFiSW5kZXgsXG4gICAgICBvbkNsaWNrID0gcHJvcHMub25DbGljayxcbiAgICAgIHR3b1RvbmVDb2xvciA9IHByb3BzLnR3b1RvbmVDb2xvcixcbiAgICAgIHJlc3RQcm9wcyA9ICgwLCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMyLmRlZmF1bHQpKHByb3BzLCBbXCJjbGFzc05hbWVcIiwgXCJpY29uXCIsIFwic3BpblwiLCBcInJvdGF0ZVwiLCBcInRhYkluZGV4XCIsIFwib25DbGlja1wiLCBcInR3b1RvbmVDb2xvclwiXSk7XG4gIHZhciBjbGFzc1N0cmluZyA9ICgwLCBfY2xhc3NuYW1lcy5kZWZhdWx0KSgnYW50aWNvbicsICgwLCBfZGVmaW5lUHJvcGVydHkyLmRlZmF1bHQpKHt9LCBcImFudGljb24tXCIuY29uY2F0KGljb24ubmFtZSksIEJvb2xlYW4oaWNvbi5uYW1lKSksIGNsYXNzTmFtZSk7XG4gIHZhciBzdmdDbGFzc1N0cmluZyA9ICgwLCBfY2xhc3NuYW1lcy5kZWZhdWx0KSh7XG4gICAgJ2FudGljb24tc3Bpbic6ICEhc3BpbiB8fCBpY29uLm5hbWUgPT09ICdsb2FkaW5nJ1xuICB9KTtcbiAgdmFyIGljb25UYWJJbmRleCA9IHRhYkluZGV4O1xuXG4gIGlmIChpY29uVGFiSW5kZXggPT09IHVuZGVmaW5lZCAmJiBvbkNsaWNrKSB7XG4gICAgaWNvblRhYkluZGV4ID0gLTE7XG4gIH1cblxuICB2YXIgc3ZnU3R5bGUgPSByb3RhdGUgPyB7XG4gICAgbXNUcmFuc2Zvcm06IFwicm90YXRlKFwiLmNvbmNhdChyb3RhdGUsIFwiZGVnKVwiKSxcbiAgICB0cmFuc2Zvcm06IFwicm90YXRlKFwiLmNvbmNhdChyb3RhdGUsIFwiZGVnKVwiKVxuICB9IDogdW5kZWZpbmVkO1xuXG4gIHZhciBfbm9ybWFsaXplVHdvVG9uZUNvbG8gPSAoMCwgX3V0aWxzLm5vcm1hbGl6ZVR3b1RvbmVDb2xvcnMpKHR3b1RvbmVDb2xvciksXG4gICAgICBfbm9ybWFsaXplVHdvVG9uZUNvbG8yID0gKDAsIF9zbGljZWRUb0FycmF5Mi5kZWZhdWx0KShfbm9ybWFsaXplVHdvVG9uZUNvbG8sIDIpLFxuICAgICAgcHJpbWFyeUNvbG9yID0gX25vcm1hbGl6ZVR3b1RvbmVDb2xvMlswXSxcbiAgICAgIHNlY29uZGFyeUNvbG9yID0gX25vcm1hbGl6ZVR3b1RvbmVDb2xvMlsxXTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgT2JqZWN0LmFzc2lnbih7XG4gICAgcm9sZTogXCJpbWdcIixcbiAgICBcImFyaWEtbGFiZWxcIjogaWNvbi5uYW1lXG4gIH0sIHJlc3RQcm9wcywge1xuICAgIHJlZjogcmVmLFxuICAgIHRhYkluZGV4OiBpY29uVGFiSW5kZXgsXG4gICAgb25DbGljazogb25DbGljayxcbiAgICBjbGFzc05hbWU6IGNsYXNzU3RyaW5nXG4gIH0pLCBSZWFjdC5jcmVhdGVFbGVtZW50KF9JY29uQmFzZS5kZWZhdWx0LCB7XG4gICAgY2xhc3NOYW1lOiBzdmdDbGFzc1N0cmluZyxcbiAgICBpY29uOiBpY29uLFxuICAgIHByaW1hcnlDb2xvcjogcHJpbWFyeUNvbG9yLFxuICAgIHNlY29uZGFyeUNvbG9yOiBzZWNvbmRhcnlDb2xvcixcbiAgICBzdHlsZTogc3ZnU3R5bGVcbiAgfSkpO1xufSk7XG5JY29uLmRpc3BsYXlOYW1lID0gJ0FudGRJY29uJztcbkljb24uZ2V0VHdvVG9uZUNvbG9yID0gX3R3b1RvbmVQcmltYXJ5Q29sb3IuZ2V0VHdvVG9uZUNvbG9yO1xuSWNvbi5zZXRUd29Ub25lQ29sb3IgPSBfdHdvVG9uZVByaW1hcnlDb2xvci5zZXRUd29Ub25lQ29sb3I7XG52YXIgX2RlZmF1bHQgPSBJY29uO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7IiwiIWZ1bmN0aW9uKGUsdCl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9dCgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUodCk6ZS5kYXlqc19wbHVnaW5fd2Vla09mWWVhcj10KCl9KHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgZT1cIndlZWtcIix0PVwieWVhclwiO3JldHVybiBmdW5jdGlvbihpLG4scil7dmFyIGY9bi5wcm90b3R5cGU7Zi53ZWVrPWZ1bmN0aW9uKGkpe2lmKHZvaWQgMD09PWkmJihpPW51bGwpLG51bGwhPT1pKXJldHVybiB0aGlzLmFkZCg3KihpLXRoaXMud2VlaygpKSxcImRheVwiKTt2YXIgbj10aGlzLiRsb2NhbGUoKS55ZWFyU3RhcnR8fDE7aWYoMTE9PT10aGlzLm1vbnRoKCkmJnRoaXMuZGF0ZSgpPjI1KXt2YXIgZj1yKHRoaXMpLnN0YXJ0T2YodCkuYWRkKDEsdCkuZGF0ZShuKSxzPXIodGhpcykuZW5kT2YoZSk7aWYoZi5pc0JlZm9yZShzKSlyZXR1cm4gMX12YXIgYT1yKHRoaXMpLnN0YXJ0T2YodCkuZGF0ZShuKS5zdGFydE9mKGUpLnN1YnRyYWN0KDEsXCJtaWxsaXNlY29uZFwiKSxkPXRoaXMuZGlmZihhLGUsITApO3JldHVybiBkPDA/cih0aGlzKS5zdGFydE9mKFwid2Vla1wiKS53ZWVrKCk6TWF0aC5jZWlsKGQpfSxmLndlZWtzPWZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT1udWxsKSx0aGlzLndlZWsoZSl9fX0pO1xuIiwidmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4vZ2V0UHJvdG90eXBlT2ZcIik7XG5cbnZhciBpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSByZXF1aXJlKFwiLi9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3RcIik7XG5cbnZhciBwb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuID0gcmVxdWlyZShcIi4vcG9zc2libGVDb25zdHJ1Y3RvclJldHVyblwiKTtcblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHtcbiAgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkge1xuICAgIHZhciBTdXBlciA9IGdldFByb3RvdHlwZU9mKERlcml2ZWQpLFxuICAgICAgICByZXN1bHQ7XG5cbiAgICBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkge1xuICAgICAgdmFyIE5ld1RhcmdldCA9IGdldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICAgICAgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jcmVhdGVTdXBlcjsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIGJ0b2EpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyIHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlO1xuICB2YXIgdXBkYXRlO1xuICB2YXIgcmVtb3ZlO1xuXG4gIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuICAgIHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuICAgIHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUgPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblxuICAgIHJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG4gICAgfTtcbiAgfVxuXG4gIHVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmUoKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307IC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cbiAgaWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09ICdib29sZWFuJykge1xuICAgIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuICB9XG5cbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuZXdMaXN0KSAhPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRvbVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5Eb21bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5Eb20uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gIH07XG4gIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2dldFByb3RvdHlwZU9mOyIsImZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIHNlbGY7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2Fzc2VydFRoaXNJbml0aWFsaXplZDsiLCJcInVzZSBzdHJpY3RcIjtcbi8vIFRoaXMgaWNvbiBmaWxlIGlzIGdlbmVyYXRlZCBhdXRvbWF0aWNhbGx5LlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIEJhcnNPdXRsaW5lZCA9IHsgXCJpY29uXCI6IHsgXCJ0YWdcIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwidmlld0JveFwiOiBcIjAgMCAxMDI0IDEwMjRcIiwgXCJmb2N1c2FibGVcIjogXCJmYWxzZVwiIH0sIFwiY2hpbGRyZW5cIjogW3sgXCJ0YWdcIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNOTEyIDE5MkgzMjhjLTQuNCAwLTggMy42LTggOHY1NmMwIDQuNCAzLjYgOCA4IDhoNTg0YzQuNCAwIDgtMy42IDgtOHYtNTZjMC00LjQtMy42LTgtOC04em0wIDI4NEgzMjhjLTQuNCAwLTggMy42LTggOHY1NmMwIDQuNCAzLjYgOCA4IDhoNTg0YzQuNCAwIDgtMy42IDgtOHYtNTZjMC00LjQtMy42LTgtOC04em0wIDI4NEgzMjhjLTQuNCAwLTggMy42LTggOHY1NmMwIDQuNCAzLjYgOCA4IDhoNTg0YzQuNCAwIDgtMy42IDgtOHYtNTZjMC00LjQtMy42LTgtOC04ek0xMDQgMjI4YTU2IDU2IDAgMTAxMTIgMCA1NiA1NiAwIDEwLTExMiAwem0wIDI4NGE1NiA1NiAwIDEwMTEyIDAgNTYgNTYgMCAxMC0xMTIgMHptMCAyODRhNTYgNTYgMCAxMDExMiAwIDU2IDU2IDAgMTAtMTEyIDB6XCIgfSB9XSB9LCBcIm5hbWVcIjogXCJiYXJzXCIsIFwidGhlbWVcIjogXCJvdXRsaW5lZFwiIH07XG5leHBvcnRzLmRlZmF1bHQgPSBCYXJzT3V0bGluZWQ7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwidmFyIG9iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgPSByZXF1aXJlKFwiLi9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCIpO1xuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IG9iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCk7XG4gIHZhciBrZXksIGk7XG5cbiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICB2YXIgc291cmNlU3ltYm9sS2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXkgPSBzb3VyY2VTeW1ib2xLZXlzW2ldO1xuICAgICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHNvdXJjZSwga2V5KSkgY29udGludWU7XG4gICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzOyIsInZhciBhcnJheVdpdGhvdXRIb2xlcyA9IHJlcXVpcmUoXCIuL2FycmF5V2l0aG91dEhvbGVzXCIpO1xuXG52YXIgaXRlcmFibGVUb0FycmF5ID0gcmVxdWlyZShcIi4vaXRlcmFibGVUb0FycmF5XCIpO1xuXG52YXIgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgPSByZXF1aXJlKFwiLi91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheVwiKTtcblxudmFyIG5vbkl0ZXJhYmxlU3ByZWFkID0gcmVxdWlyZShcIi4vbm9uSXRlcmFibGVTcHJlYWRcIik7XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIGFycmF5V2l0aG91dEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5KGFycikgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBub25JdGVyYWJsZVNwcmVhZCgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF90b0NvbnN1bWFibGVBcnJheTsiLCJjb25zdCBsb2NhbGVNYXAgPSB7XG4gIGVuX0dCOiAnZW4tZ2InLFxuICBlbl9VUzogJ2VuJyxcbiAgemhfQ046ICd6aC1jbicsXG4gIHpoX1RXOiAnemgtdHcnXG59O1xuXG5jb25zdCBwYXJzZUxvY2FsZSA9IGZ1bmN0aW9uIHBhcnNlTG9jYWxlKGxvY2FsZSkge1xuICB2YXIgbWFwTG9jYWxlID0gbG9jYWxlTWFwW2xvY2FsZV07XG4gIHJldHVybiBtYXBMb2NhbGUgfHwgbG9jYWxlLnNwbGl0KCdfJylbMF07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcHRpb24sIGRheWpzQ2xhc3MsIGRheWpzRmFjdG9yeSkge1xuICBjb25zdCBvbGRMb2NhbGUgPSBkYXlqc0NsYXNzLnByb3RvdHlwZS5sb2NhbGVcbiAgZGF5anNDbGFzcy5wcm90b3R5cGUubG9jYWxlID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgaWYgKHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnKSB7XG4gICAgICBhcmcgPSBwYXJzZUxvY2FsZShhcmcpXG4gICAgfVxuICAgIHJldHVybiBvbGRMb2NhbGUuY2FsbCh0aGlzLCBhcmcpXG4gIH1cbn0iLCIhZnVuY3Rpb24oZSxuKXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz1uKCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShuKTplLmRheWpzX3BsdWdpbl9pc01vbWVudD1uKCl9KHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtyZXR1cm4gZnVuY3Rpb24oZSxuLHQpe3QuaXNNb21lbnQ9ZnVuY3Rpb24oZSl7cmV0dXJuIHQuaXNEYXlqcyhlKX19fSk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzeW1ib2xPYnNlcnZhYmxlUG9ueWZpbGwocm9vdCkge1xuXHR2YXIgcmVzdWx0O1xuXHR2YXIgU3ltYm9sID0gcm9vdC5TeW1ib2w7XG5cblx0aWYgKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicpIHtcblx0XHRpZiAoU3ltYm9sLm9ic2VydmFibGUpIHtcblx0XHRcdHJlc3VsdCA9IFN5bWJvbC5vYnNlcnZhYmxlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXN1bHQgPSBTeW1ib2woJ29ic2VydmFibGUnKTtcblx0XHRcdFN5bWJvbC5vYnNlcnZhYmxlID0gcmVzdWx0O1xuXHRcdH1cblx0fSBlbHNlIHtcblx0XHRyZXN1bHQgPSAnQEBvYnNlcnZhYmxlJztcblx0fVxuXG5cdHJldHVybiByZXN1bHQ7XG59O1xuIiwiZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG5cbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfc2V0UHJvdG90eXBlT2Y7IiwiJ3VzZSBzdHJpY3QnO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxuICB9KTtcbiAgZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuICBcbiAgdmFyIF9CYXJzT3V0bGluZWQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoJy4vbGliL2ljb25zL0JhcnNPdXRsaW5lZCcpKTtcbiAgXG4gIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cbiAgXG4gIHZhciBfZGVmYXVsdCA9IF9CYXJzT3V0bGluZWQ7XG4gIGV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuICBtb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyohXG4gIENvcHlyaWdodCAoYykgMjAxNyBKZWQgV2F0c29uLlxuICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuICBodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMgKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSAmJiBhcmcubGVuZ3RoKSB7XG5cdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0aWYgKGlubmVyKSB7XG5cdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGlubmVyKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIGlmIChhcmdUeXBlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRcdFx0aWYgKGhhc093bi5jYWxsKGFyZywga2V5KSAmJiBhcmdba2V5XSkge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGtleSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuam9pbignICcpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIiwiZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICBcImRlZmF1bHRcIjogb2JqXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdDsiLCJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2NyZWF0ZUNsYXNzOyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiIWZ1bmN0aW9uKHQsZSl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9ZSgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZSk6dC5kYXlqcz1lKCl9KHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgdD1cIm1pbGxpc2Vjb25kXCIsZT1cInNlY29uZFwiLG49XCJtaW51dGVcIixyPVwiaG91clwiLGk9XCJkYXlcIixzPVwid2Vla1wiLHU9XCJtb250aFwiLGE9XCJxdWFydGVyXCIsbz1cInllYXJcIixmPVwiZGF0ZVwiLGg9L14oXFxkezR9KVstL10/KFxcZHsxLDJ9KT9bLS9dPyhcXGR7MCwyfSlbXjAtOV0qKFxcZHsxLDJ9KT86PyhcXGR7MSwyfSk/Oj8oXFxkezEsMn0pPy4/KFxcZCspPyQvLGM9L1xcWyhbXlxcXV0rKV18WXsyLDR9fE17MSw0fXxEezEsMn18ZHsxLDR9fEh7MSwyfXxoezEsMn18YXxBfG17MSwyfXxzezEsMn18WnsxLDJ9fFNTUy9nLGQ9ZnVuY3Rpb24odCxlLG4pe3ZhciByPVN0cmluZyh0KTtyZXR1cm4hcnx8ci5sZW5ndGg+PWU/dDpcIlwiK0FycmF5KGUrMS1yLmxlbmd0aCkuam9pbihuKSt0fSwkPXtzOmQsejpmdW5jdGlvbih0KXt2YXIgZT0tdC51dGNPZmZzZXQoKSxuPU1hdGguYWJzKGUpLHI9TWF0aC5mbG9vcihuLzYwKSxpPW4lNjA7cmV0dXJuKGU8PTA/XCIrXCI6XCItXCIpK2QociwyLFwiMFwiKStcIjpcIitkKGksMixcIjBcIil9LG06ZnVuY3Rpb24gdChlLG4pe2lmKGUuZGF0ZSgpPG4uZGF0ZSgpKXJldHVybi10KG4sZSk7dmFyIHI9MTIqKG4ueWVhcigpLWUueWVhcigpKSsobi5tb250aCgpLWUubW9udGgoKSksaT1lLmNsb25lKCkuYWRkKHIsdSkscz1uLWk8MCxhPWUuY2xvbmUoKS5hZGQocisocz8tMToxKSx1KTtyZXR1cm4rKC0ocisobi1pKS8ocz9pLWE6YS1pKSl8fDApfSxhOmZ1bmN0aW9uKHQpe3JldHVybiB0PDA/TWF0aC5jZWlsKHQpfHwwOk1hdGguZmxvb3IodCl9LHA6ZnVuY3Rpb24oaCl7cmV0dXJue006dSx5Om8sdzpzLGQ6aSxEOmYsaDpyLG06bixzOmUsbXM6dCxROmF9W2hdfHxTdHJpbmcoaHx8XCJcIikudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9zJC8sXCJcIil9LHU6ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXR9fSxsPXtuYW1lOlwiZW5cIix3ZWVrZGF5czpcIlN1bmRheV9Nb25kYXlfVHVlc2RheV9XZWRuZXNkYXlfVGh1cnNkYXlfRnJpZGF5X1NhdHVyZGF5XCIuc3BsaXQoXCJfXCIpLG1vbnRoczpcIkphbnVhcnlfRmVicnVhcnlfTWFyY2hfQXByaWxfTWF5X0p1bmVfSnVseV9BdWd1c3RfU2VwdGVtYmVyX09jdG9iZXJfTm92ZW1iZXJfRGVjZW1iZXJcIi5zcGxpdChcIl9cIil9LHk9XCJlblwiLE09e307TVt5XT1sO3ZhciBtPWZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgU30sRD1mdW5jdGlvbih0LGUsbil7dmFyIHI7aWYoIXQpcmV0dXJuIHk7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpTVt0XSYmKHI9dCksZSYmKE1bdF09ZSxyPXQpO2Vsc2V7dmFyIGk9dC5uYW1lO01baV09dCxyPWl9cmV0dXJuIW4mJnImJih5PXIpLHJ8fCFuJiZ5fSx2PWZ1bmN0aW9uKHQsZSl7aWYobSh0KSlyZXR1cm4gdC5jbG9uZSgpO3ZhciBuPVwib2JqZWN0XCI9PXR5cGVvZiBlP2U6e307cmV0dXJuIG4uZGF0ZT10LG4uYXJncz1hcmd1bWVudHMsbmV3IFMobil9LGc9JDtnLmw9RCxnLmk9bSxnLnc9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdih0LHtsb2NhbGU6ZS4kTCx1dGM6ZS4kdSwkb2Zmc2V0OmUuJG9mZnNldH0pfTt2YXIgUz1mdW5jdGlvbigpe2Z1bmN0aW9uIGQodCl7dGhpcy4kTD10aGlzLiRMfHxEKHQubG9jYWxlLG51bGwsITApLHRoaXMucGFyc2UodCl9dmFyICQ9ZC5wcm90b3R5cGU7cmV0dXJuICQucGFyc2U9ZnVuY3Rpb24odCl7dGhpcy4kZD1mdW5jdGlvbih0KXt2YXIgZT10LmRhdGUsbj10LnV0YztpZihudWxsPT09ZSlyZXR1cm4gbmV3IERhdGUoTmFOKTtpZihnLnUoZSkpcmV0dXJuIG5ldyBEYXRlO2lmKGUgaW5zdGFuY2VvZiBEYXRlKXJldHVybiBuZXcgRGF0ZShlKTtpZihcInN0cmluZ1wiPT10eXBlb2YgZSYmIS9aJC9pLnRlc3QoZSkpe3ZhciByPWUubWF0Y2goaCk7aWYocil7dmFyIGk9clsyXS0xfHwwLHM9KHJbN118fFwiMFwiKS5zdWJzdHJpbmcoMCwzKTtyZXR1cm4gbj9uZXcgRGF0ZShEYXRlLlVUQyhyWzFdLGksclszXXx8MSxyWzRdfHwwLHJbNV18fDAscls2XXx8MCxzKSk6bmV3IERhdGUoclsxXSxpLHJbM118fDEscls0XXx8MCxyWzVdfHwwLHJbNl18fDAscyl9fXJldHVybiBuZXcgRGF0ZShlKX0odCksdGhpcy5pbml0KCl9LCQuaW5pdD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuJGQ7dGhpcy4keT10LmdldEZ1bGxZZWFyKCksdGhpcy4kTT10LmdldE1vbnRoKCksdGhpcy4kRD10LmdldERhdGUoKSx0aGlzLiRXPXQuZ2V0RGF5KCksdGhpcy4kSD10LmdldEhvdXJzKCksdGhpcy4kbT10LmdldE1pbnV0ZXMoKSx0aGlzLiRzPXQuZ2V0U2Vjb25kcygpLHRoaXMuJG1zPXQuZ2V0TWlsbGlzZWNvbmRzKCl9LCQuJHV0aWxzPWZ1bmN0aW9uKCl7cmV0dXJuIGd9LCQuaXNWYWxpZD1mdW5jdGlvbigpe3JldHVybiEoXCJJbnZhbGlkIERhdGVcIj09PXRoaXMuJGQudG9TdHJpbmcoKSl9LCQuaXNTYW1lPWZ1bmN0aW9uKHQsZSl7dmFyIG49dih0KTtyZXR1cm4gdGhpcy5zdGFydE9mKGUpPD1uJiZuPD10aGlzLmVuZE9mKGUpfSwkLmlzQWZ0ZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdih0KTx0aGlzLnN0YXJ0T2YoZSl9LCQuaXNCZWZvcmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5lbmRPZihlKTx2KHQpfSwkLiRnPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZy51KHQpP3RoaXNbZV06dGhpcy5zZXQobix0KX0sJC51bml4PWZ1bmN0aW9uKCl7cmV0dXJuIE1hdGguZmxvb3IodGhpcy52YWx1ZU9mKCkvMWUzKX0sJC52YWx1ZU9mPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJGQuZ2V0VGltZSgpfSwkLnN0YXJ0T2Y9ZnVuY3Rpb24odCxhKXt2YXIgaD10aGlzLGM9ISFnLnUoYSl8fGEsZD1nLnAodCksJD1mdW5jdGlvbih0LGUpe3ZhciBuPWcudyhoLiR1P0RhdGUuVVRDKGguJHksZSx0KTpuZXcgRGF0ZShoLiR5LGUsdCksaCk7cmV0dXJuIGM/bjpuLmVuZE9mKGkpfSxsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGcudyhoLnRvRGF0ZSgpW3RdLmFwcGx5KGgudG9EYXRlKFwic1wiKSwoYz9bMCwwLDAsMF06WzIzLDU5LDU5LDk5OV0pLnNsaWNlKGUpKSxoKX0seT10aGlzLiRXLE09dGhpcy4kTSxtPXRoaXMuJEQsRD1cInNldFwiKyh0aGlzLiR1P1wiVVRDXCI6XCJcIik7c3dpdGNoKGQpe2Nhc2UgbzpyZXR1cm4gYz8kKDEsMCk6JCgzMSwxMSk7Y2FzZSB1OnJldHVybiBjPyQoMSxNKTokKDAsTSsxKTtjYXNlIHM6dmFyIHY9dGhpcy4kbG9jYWxlKCkud2Vla1N0YXJ0fHwwLFM9KHk8dj95Kzc6eSktdjtyZXR1cm4gJChjP20tUzptKyg2LVMpLE0pO2Nhc2UgaTpjYXNlIGY6cmV0dXJuIGwoRCtcIkhvdXJzXCIsMCk7Y2FzZSByOnJldHVybiBsKEQrXCJNaW51dGVzXCIsMSk7Y2FzZSBuOnJldHVybiBsKEQrXCJTZWNvbmRzXCIsMik7Y2FzZSBlOnJldHVybiBsKEQrXCJNaWxsaXNlY29uZHNcIiwzKTtkZWZhdWx0OnJldHVybiB0aGlzLmNsb25lKCl9fSwkLmVuZE9mPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnN0YXJ0T2YodCwhMSl9LCQuJHNldD1mdW5jdGlvbihzLGEpe3ZhciBoLGM9Zy5wKHMpLGQ9XCJzZXRcIisodGhpcy4kdT9cIlVUQ1wiOlwiXCIpLCQ9KGg9e30saFtpXT1kK1wiRGF0ZVwiLGhbZl09ZCtcIkRhdGVcIixoW3VdPWQrXCJNb250aFwiLGhbb109ZCtcIkZ1bGxZZWFyXCIsaFtyXT1kK1wiSG91cnNcIixoW25dPWQrXCJNaW51dGVzXCIsaFtlXT1kK1wiU2Vjb25kc1wiLGhbdF09ZCtcIk1pbGxpc2Vjb25kc1wiLGgpW2NdLGw9Yz09PWk/dGhpcy4kRCsoYS10aGlzLiRXKTphO2lmKGM9PT11fHxjPT09byl7dmFyIHk9dGhpcy5jbG9uZSgpLnNldChmLDEpO3kuJGRbJF0obCkseS5pbml0KCksdGhpcy4kZD15LnNldChmLE1hdGgubWluKHRoaXMuJEQseS5kYXlzSW5Nb250aCgpKSkuJGR9ZWxzZSAkJiZ0aGlzLiRkWyRdKGwpO3JldHVybiB0aGlzLmluaXQoKSx0aGlzfSwkLnNldD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmNsb25lKCkuJHNldCh0LGUpfSwkLmdldD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpc1tnLnAodCldKCl9LCQuYWRkPWZ1bmN0aW9uKHQsYSl7dmFyIGYsaD10aGlzO3Q9TnVtYmVyKHQpO3ZhciBjPWcucChhKSxkPWZ1bmN0aW9uKGUpe3ZhciBuPXYoaCk7cmV0dXJuIGcudyhuLmRhdGUobi5kYXRlKCkrTWF0aC5yb3VuZChlKnQpKSxoKX07aWYoYz09PXUpcmV0dXJuIHRoaXMuc2V0KHUsdGhpcy4kTSt0KTtpZihjPT09bylyZXR1cm4gdGhpcy5zZXQobyx0aGlzLiR5K3QpO2lmKGM9PT1pKXJldHVybiBkKDEpO2lmKGM9PT1zKXJldHVybiBkKDcpO3ZhciAkPShmPXt9LGZbbl09NmU0LGZbcl09MzZlNSxmW2VdPTFlMyxmKVtjXXx8MSxsPXRoaXMuJGQuZ2V0VGltZSgpK3QqJDtyZXR1cm4gZy53KGwsdGhpcyl9LCQuc3VidHJhY3Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hZGQoLTEqdCxlKX0sJC5mb3JtYXQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztpZighdGhpcy5pc1ZhbGlkKCkpcmV0dXJuXCJJbnZhbGlkIERhdGVcIjt2YXIgbj10fHxcIllZWVktTU0tRERUSEg6bW06c3NaXCIscj1nLnoodGhpcyksaT10aGlzLiRsb2NhbGUoKSxzPXRoaXMuJEgsdT10aGlzLiRtLGE9dGhpcy4kTSxvPWkud2Vla2RheXMsZj1pLm1vbnRocyxoPWZ1bmN0aW9uKHQscixpLHMpe3JldHVybiB0JiYodFtyXXx8dChlLG4pKXx8aVtyXS5zdWJzdHIoMCxzKX0sZD1mdW5jdGlvbih0KXtyZXR1cm4gZy5zKHMlMTJ8fDEyLHQsXCIwXCIpfSwkPWkubWVyaWRpZW18fGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10PDEyP1wiQU1cIjpcIlBNXCI7cmV0dXJuIG4/ci50b0xvd2VyQ2FzZSgpOnJ9LGw9e1lZOlN0cmluZyh0aGlzLiR5KS5zbGljZSgtMiksWVlZWTp0aGlzLiR5LE06YSsxLE1NOmcucyhhKzEsMixcIjBcIiksTU1NOmgoaS5tb250aHNTaG9ydCxhLGYsMyksTU1NTTpoKGYsYSksRDp0aGlzLiRELEREOmcucyh0aGlzLiRELDIsXCIwXCIpLGQ6U3RyaW5nKHRoaXMuJFcpLGRkOmgoaS53ZWVrZGF5c01pbix0aGlzLiRXLG8sMiksZGRkOmgoaS53ZWVrZGF5c1Nob3J0LHRoaXMuJFcsbywzKSxkZGRkOm9bdGhpcy4kV10sSDpTdHJpbmcocyksSEg6Zy5zKHMsMixcIjBcIiksaDpkKDEpLGhoOmQoMiksYTokKHMsdSwhMCksQTokKHMsdSwhMSksbTpTdHJpbmcodSksbW06Zy5zKHUsMixcIjBcIiksczpTdHJpbmcodGhpcy4kcyksc3M6Zy5zKHRoaXMuJHMsMixcIjBcIiksU1NTOmcucyh0aGlzLiRtcywzLFwiMFwiKSxaOnJ9O3JldHVybiBuLnJlcGxhY2UoYyxmdW5jdGlvbih0LGUpe3JldHVybiBlfHxsW3RdfHxyLnJlcGxhY2UoXCI6XCIsXCJcIil9KX0sJC51dGNPZmZzZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gMTUqLU1hdGgucm91bmQodGhpcy4kZC5nZXRUaW1lem9uZU9mZnNldCgpLzE1KX0sJC5kaWZmPWZ1bmN0aW9uKHQsZixoKXt2YXIgYyxkPWcucChmKSwkPXYodCksbD02ZTQqKCQudXRjT2Zmc2V0KCktdGhpcy51dGNPZmZzZXQoKSkseT10aGlzLSQsTT1nLm0odGhpcywkKTtyZXR1cm4gTT0oYz17fSxjW29dPU0vMTIsY1t1XT1NLGNbYV09TS8zLGNbc109KHktbCkvNjA0OGU1LGNbaV09KHktbCkvODY0ZTUsY1tyXT15LzM2ZTUsY1tuXT15LzZlNCxjW2VdPXkvMWUzLGMpW2RdfHx5LGg/TTpnLmEoTSl9LCQuZGF5c0luTW9udGg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbmRPZih1KS4kRH0sJC4kbG9jYWxlPWZ1bmN0aW9uKCl7cmV0dXJuIE1bdGhpcy4kTF19LCQubG9jYWxlPWZ1bmN0aW9uKHQsZSl7aWYoIXQpcmV0dXJuIHRoaXMuJEw7dmFyIG49dGhpcy5jbG9uZSgpLHI9RCh0LGUsITApO3JldHVybiByJiYobi4kTD1yKSxufSwkLmNsb25lPWZ1bmN0aW9uKCl7cmV0dXJuIGcudyh0aGlzLiRkLHRoaXMpfSwkLnRvRGF0ZT1mdW5jdGlvbigpe3JldHVybiBuZXcgRGF0ZSh0aGlzLnZhbHVlT2YoKSl9LCQudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNWYWxpZCgpP3RoaXMudG9JU09TdHJpbmcoKTpudWxsfSwkLnRvSVNPU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJGQudG9JU09TdHJpbmcoKX0sJC50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLiRkLnRvVVRDU3RyaW5nKCl9LGR9KCkscD1TLnByb3RvdHlwZTtyZXR1cm4gdi5wcm90b3R5cGU9cCxbW1wiJG1zXCIsdF0sW1wiJHNcIixlXSxbXCIkbVwiLG5dLFtcIiRIXCIscl0sW1wiJFdcIixpXSxbXCIkTVwiLHVdLFtcIiR5XCIsb10sW1wiJERcIixmXV0uZm9yRWFjaChmdW5jdGlvbih0KXtwW3RbMV1dPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLiRnKGUsdFswXSx0WzFdKX19KSx2LmV4dGVuZD1mdW5jdGlvbih0LGUpe3JldHVybiB0KGUsUyx2KSx2fSx2LmxvY2FsZT1ELHYuaXNEYXlqcz1tLHYudW5peD1mdW5jdGlvbih0KXtyZXR1cm4gdigxZTMqdCl9LHYuZW49TVt5XSx2LkxzPU0sdn0pO1xuIiwiZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYXJyMltpXSA9IGFycltpXTtcbiAgfVxuXG4gIHJldHVybiBhcnIyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9hcnJheUxpa2VUb0FycmF5OyIsIiFmdW5jdGlvbihuLHQpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPXQoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKHQpOm4uZGF5anNfcGx1Z2luX2xvY2FsZURhdGE9dCgpfSh0aGlzLGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7cmV0dXJuIGZ1bmN0aW9uKG4sdCxlKXt2YXIgcj1mdW5jdGlvbihuKXtyZXR1cm4gbiYmKG4uaW5kZXhPZj9uOm4ucyl9LG89ZnVuY3Rpb24obix0LGUsbyx1KXt2YXIgYT1uLm5hbWU/bjpuLiRsb2NhbGUoKSxzPXIoYVt0XSksaT1yKGFbZV0pLGY9c3x8aS5tYXAoZnVuY3Rpb24obil7cmV0dXJuIG4uc3Vic3RyKDAsbyl9KTtpZighdSlyZXR1cm4gZjt2YXIgZD1hLndlZWtTdGFydDtyZXR1cm4gZi5tYXAoZnVuY3Rpb24obix0KXtyZXR1cm4gZlsodCsoZHx8MCkpJTddfSl9LHU9ZnVuY3Rpb24oKXtyZXR1cm4gZS5Mc1tlLmxvY2FsZSgpXX07dC5wcm90b3R5cGUubG9jYWxlRGF0YT1mdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXRoaXM7cmV0dXJue21vbnRoczpmdW5jdGlvbih0KXtyZXR1cm4gdD90LmZvcm1hdChcIk1NTU1cIik6byhuLFwibW9udGhzXCIpfSxtb250aHNTaG9ydDpmdW5jdGlvbih0KXtyZXR1cm4gdD90LmZvcm1hdChcIk1NTVwiKTpvKG4sXCJtb250aHNTaG9ydFwiLFwibW9udGhzXCIsMyl9LGZpcnN0RGF5T2ZXZWVrOmZ1bmN0aW9uKCl7cmV0dXJuIG4uJGxvY2FsZSgpLndlZWtTdGFydHx8MH0sd2Vla2RheXM6ZnVuY3Rpb24odCl7cmV0dXJuIHQ/dC5mb3JtYXQoXCJkZGRkXCIpOm8obixcIndlZWtkYXlzXCIpfSx3ZWVrZGF5c01pbjpmdW5jdGlvbih0KXtyZXR1cm4gdD90LmZvcm1hdChcImRkXCIpOm8obixcIndlZWtkYXlzTWluXCIsXCJ3ZWVrZGF5c1wiLDIpfSx3ZWVrZGF5c1Nob3J0OmZ1bmN0aW9uKHQpe3JldHVybiB0P3QuZm9ybWF0KFwiZGRkXCIpOm8obixcIndlZWtkYXlzU2hvcnRcIixcIndlZWtkYXlzXCIsMyl9LGxvbmdEYXRlRm9ybWF0OmZ1bmN0aW9uKHQpe3JldHVybiBuLiRsb2NhbGUoKS5mb3JtYXRzW3RdfX19LmJpbmQodGhpcykoKX0sZS5sb2NhbGVEYXRhPWZ1bmN0aW9uKCl7dmFyIG49dSgpO3JldHVybntmaXJzdERheU9mV2VlazpmdW5jdGlvbigpe3JldHVybiBuLndlZWtTdGFydHx8MH0sd2Vla2RheXM6ZnVuY3Rpb24oKXtyZXR1cm4gZS53ZWVrZGF5cygpfSx3ZWVrZGF5c1Nob3J0OmZ1bmN0aW9uKCl7cmV0dXJuIGUud2Vla2RheXNTaG9ydCgpfSx3ZWVrZGF5c01pbjpmdW5jdGlvbigpe3JldHVybiBlLndlZWtkYXlzTWluKCl9LG1vbnRoczpmdW5jdGlvbigpe3JldHVybiBlLm1vbnRocygpfSxtb250aHNTaG9ydDpmdW5jdGlvbigpe3JldHVybiBlLm1vbnRoc1Nob3J0KCl9fX0sZS5tb250aHM9ZnVuY3Rpb24oKXtyZXR1cm4gbyh1KCksXCJtb250aHNcIil9LGUubW9udGhzU2hvcnQ9ZnVuY3Rpb24oKXtyZXR1cm4gbyh1KCksXCJtb250aHNTaG9ydFwiLFwibW9udGhzXCIsMyl9LGUud2Vla2RheXM9ZnVuY3Rpb24obil7cmV0dXJuIG8odSgpLFwid2Vla2RheXNcIixudWxsLG51bGwsbil9LGUud2Vla2RheXNTaG9ydD1mdW5jdGlvbihuKXtyZXR1cm4gbyh1KCksXCJ3ZWVrZGF5c1Nob3J0XCIsXCJ3ZWVrZGF5c1wiLDMsbil9LGUud2Vla2RheXNNaW49ZnVuY3Rpb24obil7cmV0dXJuIG8odSgpLFwid2Vla2RheXNNaW5cIixcIndlZWtkYXlzXCIsMixuKX19fSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBnZW5lcmF0ZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2dlbmVyYXRlXCIpKTtcbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZV8xLmRlZmF1bHQ7XG52YXIgcHJlc2V0UHJpbWFyeUNvbG9ycyA9IHtcbiAgICByZWQ6ICcjRjUyMjJEJyxcbiAgICB2b2xjYW5vOiAnI0ZBNTQxQycsXG4gICAgb3JhbmdlOiAnI0ZBOEMxNicsXG4gICAgZ29sZDogJyNGQUFEMTQnLFxuICAgIHllbGxvdzogJyNGQURCMTQnLFxuICAgIGxpbWU6ICcjQTBEOTExJyxcbiAgICBncmVlbjogJyM1MkM0MUEnLFxuICAgIGN5YW46ICcjMTNDMkMyJyxcbiAgICBibHVlOiAnIzE4OTBGRicsXG4gICAgZ2Vla2JsdWU6ICcjMkY1NEVCJyxcbiAgICBwdXJwbGU6ICcjNzIyRUQxJyxcbiAgICBtYWdlbnRhOiAnI0VCMkY5NicsXG4gICAgZ3JleTogJyM2NjY2NjYnLFxufTtcbmV4cG9ydHMucHJlc2V0UHJpbWFyeUNvbG9ycyA9IHByZXNldFByaW1hcnlDb2xvcnM7XG52YXIgcHJlc2V0UGFsZXR0ZXMgPSB7fTtcbmV4cG9ydHMucHJlc2V0UGFsZXR0ZXMgPSBwcmVzZXRQYWxldHRlcztcbk9iamVjdC5rZXlzKHByZXNldFByaW1hcnlDb2xvcnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHByZXNldFBhbGV0dGVzW2tleV0gPSBnZW5lcmF0ZV8xLmRlZmF1bHQocHJlc2V0UHJpbWFyeUNvbG9yc1trZXldKTtcbiAgICBwcmVzZXRQYWxldHRlc1trZXldLnByaW1hcnkgPSBwcmVzZXRQYWxldHRlc1trZXldWzVdO1xufSk7XG52YXIgcmVkID0gcHJlc2V0UGFsZXR0ZXMucmVkO1xuZXhwb3J0cy5yZWQgPSByZWQ7XG52YXIgdm9sY2FubyA9IHByZXNldFBhbGV0dGVzLnZvbGNhbm87XG5leHBvcnRzLnZvbGNhbm8gPSB2b2xjYW5vO1xudmFyIGdvbGQgPSBwcmVzZXRQYWxldHRlcy5nb2xkO1xuZXhwb3J0cy5nb2xkID0gZ29sZDtcbnZhciBvcmFuZ2UgPSBwcmVzZXRQYWxldHRlcy5vcmFuZ2U7XG5leHBvcnRzLm9yYW5nZSA9IG9yYW5nZTtcbnZhciB5ZWxsb3cgPSBwcmVzZXRQYWxldHRlcy55ZWxsb3c7XG5leHBvcnRzLnllbGxvdyA9IHllbGxvdztcbnZhciBsaW1lID0gcHJlc2V0UGFsZXR0ZXMubGltZTtcbmV4cG9ydHMubGltZSA9IGxpbWU7XG52YXIgZ3JlZW4gPSBwcmVzZXRQYWxldHRlcy5ncmVlbjtcbmV4cG9ydHMuZ3JlZW4gPSBncmVlbjtcbnZhciBjeWFuID0gcHJlc2V0UGFsZXR0ZXMuY3lhbjtcbmV4cG9ydHMuY3lhbiA9IGN5YW47XG52YXIgYmx1ZSA9IHByZXNldFBhbGV0dGVzLmJsdWU7XG5leHBvcnRzLmJsdWUgPSBibHVlO1xudmFyIGdlZWtibHVlID0gcHJlc2V0UGFsZXR0ZXMuZ2Vla2JsdWU7XG5leHBvcnRzLmdlZWtibHVlID0gZ2Vla2JsdWU7XG52YXIgcHVycGxlID0gcHJlc2V0UGFsZXR0ZXMucHVycGxlO1xuZXhwb3J0cy5wdXJwbGUgPSBwdXJwbGU7XG52YXIgbWFnZW50YSA9IHByZXNldFBhbGV0dGVzLm1hZ2VudGE7XG5leHBvcnRzLm1hZ2VudGEgPSBtYWdlbnRhO1xudmFyIGdyZXkgPSBwcmVzZXRQYWxldHRlcy5ncmV5O1xuZXhwb3J0cy5ncmV5ID0gZ3JleTtcbiIsInZhciBhcnJheUxpa2VUb0FycmF5ID0gcmVxdWlyZShcIi4vYXJyYXlMaWtlVG9BcnJheVwiKTtcblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXk7IiwiLy8gVGlueUNvbG9yIHYxLjQuMVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2Jncmlucy9UaW55Q29sb3Jcbi8vIEJyaWFuIEdyaW5zdGVhZCwgTUlUIExpY2Vuc2VcblxuKGZ1bmN0aW9uKE1hdGgpIHtcblxudmFyIHRyaW1MZWZ0ID0gL15cXHMrLyxcbiAgICB0cmltUmlnaHQgPSAvXFxzKyQvLFxuICAgIHRpbnlDb3VudGVyID0gMCxcbiAgICBtYXRoUm91bmQgPSBNYXRoLnJvdW5kLFxuICAgIG1hdGhNaW4gPSBNYXRoLm1pbixcbiAgICBtYXRoTWF4ID0gTWF0aC5tYXgsXG4gICAgbWF0aFJhbmRvbSA9IE1hdGgucmFuZG9tO1xuXG5mdW5jdGlvbiB0aW55Y29sb3IgKGNvbG9yLCBvcHRzKSB7XG5cbiAgICBjb2xvciA9IChjb2xvcikgPyBjb2xvciA6ICcnO1xuICAgIG9wdHMgPSBvcHRzIHx8IHsgfTtcblxuICAgIC8vIElmIGlucHV0IGlzIGFscmVhZHkgYSB0aW55Y29sb3IsIHJldHVybiBpdHNlbGZcbiAgICBpZiAoY29sb3IgaW5zdGFuY2VvZiB0aW55Y29sb3IpIHtcbiAgICAgICByZXR1cm4gY29sb3I7XG4gICAgfVxuICAgIC8vIElmIHdlIGFyZSBjYWxsZWQgYXMgYSBmdW5jdGlvbiwgY2FsbCB1c2luZyBuZXcgaW5zdGVhZFxuICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiB0aW55Y29sb3IpKSB7XG4gICAgICAgIHJldHVybiBuZXcgdGlueWNvbG9yKGNvbG9yLCBvcHRzKTtcbiAgICB9XG5cbiAgICB2YXIgcmdiID0gaW5wdXRUb1JHQihjb2xvcik7XG4gICAgdGhpcy5fb3JpZ2luYWxJbnB1dCA9IGNvbG9yLFxuICAgIHRoaXMuX3IgPSByZ2IucixcbiAgICB0aGlzLl9nID0gcmdiLmcsXG4gICAgdGhpcy5fYiA9IHJnYi5iLFxuICAgIHRoaXMuX2EgPSByZ2IuYSxcbiAgICB0aGlzLl9yb3VuZEEgPSBtYXRoUm91bmQoMTAwKnRoaXMuX2EpIC8gMTAwLFxuICAgIHRoaXMuX2Zvcm1hdCA9IG9wdHMuZm9ybWF0IHx8IHJnYi5mb3JtYXQ7XG4gICAgdGhpcy5fZ3JhZGllbnRUeXBlID0gb3B0cy5ncmFkaWVudFR5cGU7XG5cbiAgICAvLyBEb24ndCBsZXQgdGhlIHJhbmdlIG9mIFswLDI1NV0gY29tZSBiYWNrIGluIFswLDFdLlxuICAgIC8vIFBvdGVudGlhbGx5IGxvc2UgYSBsaXR0bGUgYml0IG9mIHByZWNpc2lvbiBoZXJlLCBidXQgd2lsbCBmaXggaXNzdWVzIHdoZXJlXG4gICAgLy8gLjUgZ2V0cyBpbnRlcnByZXRlZCBhcyBoYWxmIG9mIHRoZSB0b3RhbCwgaW5zdGVhZCBvZiBoYWxmIG9mIDFcbiAgICAvLyBJZiBpdCB3YXMgc3VwcG9zZWQgdG8gYmUgMTI4LCB0aGlzIHdhcyBhbHJlYWR5IHRha2VuIGNhcmUgb2YgYnkgYGlucHV0VG9SZ2JgXG4gICAgaWYgKHRoaXMuX3IgPCAxKSB7IHRoaXMuX3IgPSBtYXRoUm91bmQodGhpcy5fcik7IH1cbiAgICBpZiAodGhpcy5fZyA8IDEpIHsgdGhpcy5fZyA9IG1hdGhSb3VuZCh0aGlzLl9nKTsgfVxuICAgIGlmICh0aGlzLl9iIDwgMSkgeyB0aGlzLl9iID0gbWF0aFJvdW5kKHRoaXMuX2IpOyB9XG5cbiAgICB0aGlzLl9vayA9IHJnYi5vaztcbiAgICB0aGlzLl90Y19pZCA9IHRpbnlDb3VudGVyKys7XG59XG5cbnRpbnljb2xvci5wcm90b3R5cGUgPSB7XG4gICAgaXNEYXJrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QnJpZ2h0bmVzcygpIDwgMTI4O1xuICAgIH0sXG4gICAgaXNMaWdodDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5pc0RhcmsoKTtcbiAgICB9LFxuICAgIGlzVmFsaWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fb2s7XG4gICAgfSxcbiAgICBnZXRPcmlnaW5hbElucHV0OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl9vcmlnaW5hbElucHV0O1xuICAgIH0sXG4gICAgZ2V0Rm9ybWF0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Zvcm1hdDtcbiAgICB9LFxuICAgIGdldEFscGhhOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2E7XG4gICAgfSxcbiAgICBnZXRCcmlnaHRuZXNzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgLy9odHRwOi8vd3d3LnczLm9yZy9UUi9BRVJUI2NvbG9yLWNvbnRyYXN0XG4gICAgICAgIHZhciByZ2IgPSB0aGlzLnRvUmdiKCk7XG4gICAgICAgIHJldHVybiAocmdiLnIgKiAyOTkgKyByZ2IuZyAqIDU4NyArIHJnYi5iICogMTE0KSAvIDEwMDA7XG4gICAgfSxcbiAgICBnZXRMdW1pbmFuY2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICAvL2h0dHA6Ly93d3cudzMub3JnL1RSLzIwMDgvUkVDLVdDQUcyMC0yMDA4MTIxMS8jcmVsYXRpdmVsdW1pbmFuY2VkZWZcbiAgICAgICAgdmFyIHJnYiA9IHRoaXMudG9SZ2IoKTtcbiAgICAgICAgdmFyIFJzUkdCLCBHc1JHQiwgQnNSR0IsIFIsIEcsIEI7XG4gICAgICAgIFJzUkdCID0gcmdiLnIvMjU1O1xuICAgICAgICBHc1JHQiA9IHJnYi5nLzI1NTtcbiAgICAgICAgQnNSR0IgPSByZ2IuYi8yNTU7XG5cbiAgICAgICAgaWYgKFJzUkdCIDw9IDAuMDM5MjgpIHtSID0gUnNSR0IgLyAxMi45Mjt9IGVsc2Uge1IgPSBNYXRoLnBvdygoKFJzUkdCICsgMC4wNTUpIC8gMS4wNTUpLCAyLjQpO31cbiAgICAgICAgaWYgKEdzUkdCIDw9IDAuMDM5MjgpIHtHID0gR3NSR0IgLyAxMi45Mjt9IGVsc2Uge0cgPSBNYXRoLnBvdygoKEdzUkdCICsgMC4wNTUpIC8gMS4wNTUpLCAyLjQpO31cbiAgICAgICAgaWYgKEJzUkdCIDw9IDAuMDM5MjgpIHtCID0gQnNSR0IgLyAxMi45Mjt9IGVsc2Uge0IgPSBNYXRoLnBvdygoKEJzUkdCICsgMC4wNTUpIC8gMS4wNTUpLCAyLjQpO31cbiAgICAgICAgcmV0dXJuICgwLjIxMjYgKiBSKSArICgwLjcxNTIgKiBHKSArICgwLjA3MjIgKiBCKTtcbiAgICB9LFxuICAgIHNldEFscGhhOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICB0aGlzLl9hID0gYm91bmRBbHBoYSh2YWx1ZSk7XG4gICAgICAgIHRoaXMuX3JvdW5kQSA9IG1hdGhSb3VuZCgxMDAqdGhpcy5fYSkgLyAxMDA7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgdG9Ic3Y6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgaHN2ID0gcmdiVG9Ic3YodGhpcy5fciwgdGhpcy5fZywgdGhpcy5fYik7XG4gICAgICAgIHJldHVybiB7IGg6IGhzdi5oICogMzYwLCBzOiBoc3YucywgdjogaHN2LnYsIGE6IHRoaXMuX2EgfTtcbiAgICB9LFxuICAgIHRvSHN2U3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGhzdiA9IHJnYlRvSHN2KHRoaXMuX3IsIHRoaXMuX2csIHRoaXMuX2IpO1xuICAgICAgICB2YXIgaCA9IG1hdGhSb3VuZChoc3YuaCAqIDM2MCksIHMgPSBtYXRoUm91bmQoaHN2LnMgKiAxMDApLCB2ID0gbWF0aFJvdW5kKGhzdi52ICogMTAwKTtcbiAgICAgICAgcmV0dXJuICh0aGlzLl9hID09IDEpID9cbiAgICAgICAgICBcImhzdihcIiAgKyBoICsgXCIsIFwiICsgcyArIFwiJSwgXCIgKyB2ICsgXCIlKVwiIDpcbiAgICAgICAgICBcImhzdmEoXCIgKyBoICsgXCIsIFwiICsgcyArIFwiJSwgXCIgKyB2ICsgXCIlLCBcIisgdGhpcy5fcm91bmRBICsgXCIpXCI7XG4gICAgfSxcbiAgICB0b0hzbDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBoc2wgPSByZ2JUb0hzbCh0aGlzLl9yLCB0aGlzLl9nLCB0aGlzLl9iKTtcbiAgICAgICAgcmV0dXJuIHsgaDogaHNsLmggKiAzNjAsIHM6IGhzbC5zLCBsOiBoc2wubCwgYTogdGhpcy5fYSB9O1xuICAgIH0sXG4gICAgdG9Ic2xTdHJpbmc6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgaHNsID0gcmdiVG9Ic2wodGhpcy5fciwgdGhpcy5fZywgdGhpcy5fYik7XG4gICAgICAgIHZhciBoID0gbWF0aFJvdW5kKGhzbC5oICogMzYwKSwgcyA9IG1hdGhSb3VuZChoc2wucyAqIDEwMCksIGwgPSBtYXRoUm91bmQoaHNsLmwgKiAxMDApO1xuICAgICAgICByZXR1cm4gKHRoaXMuX2EgPT0gMSkgP1xuICAgICAgICAgIFwiaHNsKFwiICArIGggKyBcIiwgXCIgKyBzICsgXCIlLCBcIiArIGwgKyBcIiUpXCIgOlxuICAgICAgICAgIFwiaHNsYShcIiArIGggKyBcIiwgXCIgKyBzICsgXCIlLCBcIiArIGwgKyBcIiUsIFwiKyB0aGlzLl9yb3VuZEEgKyBcIilcIjtcbiAgICB9LFxuICAgIHRvSGV4OiBmdW5jdGlvbihhbGxvdzNDaGFyKSB7XG4gICAgICAgIHJldHVybiByZ2JUb0hleCh0aGlzLl9yLCB0aGlzLl9nLCB0aGlzLl9iLCBhbGxvdzNDaGFyKTtcbiAgICB9LFxuICAgIHRvSGV4U3RyaW5nOiBmdW5jdGlvbihhbGxvdzNDaGFyKSB7XG4gICAgICAgIHJldHVybiAnIycgKyB0aGlzLnRvSGV4KGFsbG93M0NoYXIpO1xuICAgIH0sXG4gICAgdG9IZXg4OiBmdW5jdGlvbihhbGxvdzRDaGFyKSB7XG4gICAgICAgIHJldHVybiByZ2JhVG9IZXgodGhpcy5fciwgdGhpcy5fZywgdGhpcy5fYiwgdGhpcy5fYSwgYWxsb3c0Q2hhcik7XG4gICAgfSxcbiAgICB0b0hleDhTdHJpbmc6IGZ1bmN0aW9uKGFsbG93NENoYXIpIHtcbiAgICAgICAgcmV0dXJuICcjJyArIHRoaXMudG9IZXg4KGFsbG93NENoYXIpO1xuICAgIH0sXG4gICAgdG9SZ2I6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4geyByOiBtYXRoUm91bmQodGhpcy5fciksIGc6IG1hdGhSb3VuZCh0aGlzLl9nKSwgYjogbWF0aFJvdW5kKHRoaXMuX2IpLCBhOiB0aGlzLl9hIH07XG4gICAgfSxcbiAgICB0b1JnYlN0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5fYSA9PSAxKSA/XG4gICAgICAgICAgXCJyZ2IoXCIgICsgbWF0aFJvdW5kKHRoaXMuX3IpICsgXCIsIFwiICsgbWF0aFJvdW5kKHRoaXMuX2cpICsgXCIsIFwiICsgbWF0aFJvdW5kKHRoaXMuX2IpICsgXCIpXCIgOlxuICAgICAgICAgIFwicmdiYShcIiArIG1hdGhSb3VuZCh0aGlzLl9yKSArIFwiLCBcIiArIG1hdGhSb3VuZCh0aGlzLl9nKSArIFwiLCBcIiArIG1hdGhSb3VuZCh0aGlzLl9iKSArIFwiLCBcIiArIHRoaXMuX3JvdW5kQSArIFwiKVwiO1xuICAgIH0sXG4gICAgdG9QZXJjZW50YWdlUmdiOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHsgcjogbWF0aFJvdW5kKGJvdW5kMDEodGhpcy5fciwgMjU1KSAqIDEwMCkgKyBcIiVcIiwgZzogbWF0aFJvdW5kKGJvdW5kMDEodGhpcy5fZywgMjU1KSAqIDEwMCkgKyBcIiVcIiwgYjogbWF0aFJvdW5kKGJvdW5kMDEodGhpcy5fYiwgMjU1KSAqIDEwMCkgKyBcIiVcIiwgYTogdGhpcy5fYSB9O1xuICAgIH0sXG4gICAgdG9QZXJjZW50YWdlUmdiU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLl9hID09IDEpID9cbiAgICAgICAgICBcInJnYihcIiAgKyBtYXRoUm91bmQoYm91bmQwMSh0aGlzLl9yLCAyNTUpICogMTAwKSArIFwiJSwgXCIgKyBtYXRoUm91bmQoYm91bmQwMSh0aGlzLl9nLCAyNTUpICogMTAwKSArIFwiJSwgXCIgKyBtYXRoUm91bmQoYm91bmQwMSh0aGlzLl9iLCAyNTUpICogMTAwKSArIFwiJSlcIiA6XG4gICAgICAgICAgXCJyZ2JhKFwiICsgbWF0aFJvdW5kKGJvdW5kMDEodGhpcy5fciwgMjU1KSAqIDEwMCkgKyBcIiUsIFwiICsgbWF0aFJvdW5kKGJvdW5kMDEodGhpcy5fZywgMjU1KSAqIDEwMCkgKyBcIiUsIFwiICsgbWF0aFJvdW5kKGJvdW5kMDEodGhpcy5fYiwgMjU1KSAqIDEwMCkgKyBcIiUsIFwiICsgdGhpcy5fcm91bmRBICsgXCIpXCI7XG4gICAgfSxcbiAgICB0b05hbWU6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5fYSA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIFwidHJhbnNwYXJlbnRcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLl9hIDwgMSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGhleE5hbWVzW3JnYlRvSGV4KHRoaXMuX3IsIHRoaXMuX2csIHRoaXMuX2IsIHRydWUpXSB8fCBmYWxzZTtcbiAgICB9LFxuICAgIHRvRmlsdGVyOiBmdW5jdGlvbihzZWNvbmRDb2xvcikge1xuICAgICAgICB2YXIgaGV4OFN0cmluZyA9ICcjJyArIHJnYmFUb0FyZ2JIZXgodGhpcy5fciwgdGhpcy5fZywgdGhpcy5fYiwgdGhpcy5fYSk7XG4gICAgICAgIHZhciBzZWNvbmRIZXg4U3RyaW5nID0gaGV4OFN0cmluZztcbiAgICAgICAgdmFyIGdyYWRpZW50VHlwZSA9IHRoaXMuX2dyYWRpZW50VHlwZSA/IFwiR3JhZGllbnRUeXBlID0gMSwgXCIgOiBcIlwiO1xuXG4gICAgICAgIGlmIChzZWNvbmRDb2xvcikge1xuICAgICAgICAgICAgdmFyIHMgPSB0aW55Y29sb3Ioc2Vjb25kQ29sb3IpO1xuICAgICAgICAgICAgc2Vjb25kSGV4OFN0cmluZyA9ICcjJyArIHJnYmFUb0FyZ2JIZXgocy5fciwgcy5fZywgcy5fYiwgcy5fYSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gXCJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoXCIrZ3JhZGllbnRUeXBlK1wic3RhcnRDb2xvcnN0cj1cIitoZXg4U3RyaW5nK1wiLGVuZENvbG9yc3RyPVwiK3NlY29uZEhleDhTdHJpbmcrXCIpXCI7XG4gICAgfSxcbiAgICB0b1N0cmluZzogZnVuY3Rpb24oZm9ybWF0KSB7XG4gICAgICAgIHZhciBmb3JtYXRTZXQgPSAhIWZvcm1hdDtcbiAgICAgICAgZm9ybWF0ID0gZm9ybWF0IHx8IHRoaXMuX2Zvcm1hdDtcblxuICAgICAgICB2YXIgZm9ybWF0dGVkU3RyaW5nID0gZmFsc2U7XG4gICAgICAgIHZhciBoYXNBbHBoYSA9IHRoaXMuX2EgPCAxICYmIHRoaXMuX2EgPj0gMDtcbiAgICAgICAgdmFyIG5lZWRzQWxwaGFGb3JtYXQgPSAhZm9ybWF0U2V0ICYmIGhhc0FscGhhICYmIChmb3JtYXQgPT09IFwiaGV4XCIgfHwgZm9ybWF0ID09PSBcImhleDZcIiB8fCBmb3JtYXQgPT09IFwiaGV4M1wiIHx8IGZvcm1hdCA9PT0gXCJoZXg0XCIgfHwgZm9ybWF0ID09PSBcImhleDhcIiB8fCBmb3JtYXQgPT09IFwibmFtZVwiKTtcblxuICAgICAgICBpZiAobmVlZHNBbHBoYUZvcm1hdCkge1xuICAgICAgICAgICAgLy8gU3BlY2lhbCBjYXNlIGZvciBcInRyYW5zcGFyZW50XCIsIGFsbCBvdGhlciBub24tYWxwaGEgZm9ybWF0c1xuICAgICAgICAgICAgLy8gd2lsbCByZXR1cm4gcmdiYSB3aGVuIHRoZXJlIGlzIHRyYW5zcGFyZW5jeS5cbiAgICAgICAgICAgIGlmIChmb3JtYXQgPT09IFwibmFtZVwiICYmIHRoaXMuX2EgPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy50b05hbWUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRvUmdiU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZvcm1hdCA9PT0gXCJyZ2JcIikge1xuICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b1JnYlN0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmb3JtYXQgPT09IFwicHJnYlwiKSB7XG4gICAgICAgICAgICBmb3JtYXR0ZWRTdHJpbmcgPSB0aGlzLnRvUGVyY2VudGFnZVJnYlN0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmb3JtYXQgPT09IFwiaGV4XCIgfHwgZm9ybWF0ID09PSBcImhleDZcIikge1xuICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b0hleFN0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmb3JtYXQgPT09IFwiaGV4M1wiKSB7XG4gICAgICAgICAgICBmb3JtYXR0ZWRTdHJpbmcgPSB0aGlzLnRvSGV4U3RyaW5nKHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmb3JtYXQgPT09IFwiaGV4NFwiKSB7XG4gICAgICAgICAgICBmb3JtYXR0ZWRTdHJpbmcgPSB0aGlzLnRvSGV4OFN0cmluZyh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZm9ybWF0ID09PSBcImhleDhcIikge1xuICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b0hleDhTdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZm9ybWF0ID09PSBcIm5hbWVcIikge1xuICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b05hbWUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZm9ybWF0ID09PSBcImhzbFwiKSB7XG4gICAgICAgICAgICBmb3JtYXR0ZWRTdHJpbmcgPSB0aGlzLnRvSHNsU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZvcm1hdCA9PT0gXCJoc3ZcIikge1xuICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b0hzdlN0cmluZygpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGZvcm1hdHRlZFN0cmluZyB8fCB0aGlzLnRvSGV4U3RyaW5nKCk7XG4gICAgfSxcbiAgICBjbG9uZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aW55Y29sb3IodGhpcy50b1N0cmluZygpKTtcbiAgICB9LFxuXG4gICAgX2FwcGx5TW9kaWZpY2F0aW9uOiBmdW5jdGlvbihmbiwgYXJncykge1xuICAgICAgICB2YXIgY29sb3IgPSBmbi5hcHBseShudWxsLCBbdGhpc10uY29uY2F0KFtdLnNsaWNlLmNhbGwoYXJncykpKTtcbiAgICAgICAgdGhpcy5fciA9IGNvbG9yLl9yO1xuICAgICAgICB0aGlzLl9nID0gY29sb3IuX2c7XG4gICAgICAgIHRoaXMuX2IgPSBjb2xvci5fYjtcbiAgICAgICAgdGhpcy5zZXRBbHBoYShjb2xvci5fYSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgbGlnaHRlbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hcHBseU1vZGlmaWNhdGlvbihsaWdodGVuLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgYnJpZ2h0ZW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYXBwbHlNb2RpZmljYXRpb24oYnJpZ2h0ZW4sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBkYXJrZW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYXBwbHlNb2RpZmljYXRpb24oZGFya2VuLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgZGVzYXR1cmF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hcHBseU1vZGlmaWNhdGlvbihkZXNhdHVyYXRlLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgc2F0dXJhdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYXBwbHlNb2RpZmljYXRpb24oc2F0dXJhdGUsIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBncmV5c2NhbGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYXBwbHlNb2RpZmljYXRpb24oZ3JleXNjYWxlLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgc3BpbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hcHBseU1vZGlmaWNhdGlvbihzcGluLCBhcmd1bWVudHMpO1xuICAgIH0sXG5cbiAgICBfYXBwbHlDb21iaW5hdGlvbjogZnVuY3Rpb24oZm4sIGFyZ3MpIHtcbiAgICAgICAgcmV0dXJuIGZuLmFwcGx5KG51bGwsIFt0aGlzXS5jb25jYXQoW10uc2xpY2UuY2FsbChhcmdzKSkpO1xuICAgIH0sXG4gICAgYW5hbG9nb3VzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FwcGx5Q29tYmluYXRpb24oYW5hbG9nb3VzLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgY29tcGxlbWVudDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hcHBseUNvbWJpbmF0aW9uKGNvbXBsZW1lbnQsIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBtb25vY2hyb21hdGljOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FwcGx5Q29tYmluYXRpb24obW9ub2Nocm9tYXRpYywgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHNwbGl0Y29tcGxlbWVudDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hcHBseUNvbWJpbmF0aW9uKHNwbGl0Y29tcGxlbWVudCwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHRyaWFkOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FwcGx5Q29tYmluYXRpb24odHJpYWQsIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICB0ZXRyYWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYXBwbHlDb21iaW5hdGlvbih0ZXRyYWQsIGFyZ3VtZW50cyk7XG4gICAgfVxufTtcblxuLy8gSWYgaW5wdXQgaXMgYW4gb2JqZWN0LCBmb3JjZSAxIGludG8gXCIxLjBcIiB0byBoYW5kbGUgcmF0aW9zIHByb3Blcmx5XG4vLyBTdHJpbmcgaW5wdXQgcmVxdWlyZXMgXCIxLjBcIiBhcyBpbnB1dCwgc28gMSB3aWxsIGJlIHRyZWF0ZWQgYXMgMVxudGlueWNvbG9yLmZyb21SYXRpbyA9IGZ1bmN0aW9uKGNvbG9yLCBvcHRzKSB7XG4gICAgaWYgKHR5cGVvZiBjb2xvciA9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIHZhciBuZXdDb2xvciA9IHt9O1xuICAgICAgICBmb3IgKHZhciBpIGluIGNvbG9yKSB7XG4gICAgICAgICAgICBpZiAoY29sb3IuaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoaSA9PT0gXCJhXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3Q29sb3JbaV0gPSBjb2xvcltpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld0NvbG9yW2ldID0gY29udmVydFRvUGVyY2VudGFnZShjb2xvcltpXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbG9yID0gbmV3Q29sb3I7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvciwgb3B0cyk7XG59O1xuXG4vLyBHaXZlbiBhIHN0cmluZyBvciBvYmplY3QsIGNvbnZlcnQgdGhhdCBpbnB1dCB0byBSR0Jcbi8vIFBvc3NpYmxlIHN0cmluZyBpbnB1dHM6XG4vL1xuLy8gICAgIFwicmVkXCJcbi8vICAgICBcIiNmMDBcIiBvciBcImYwMFwiXG4vLyAgICAgXCIjZmYwMDAwXCIgb3IgXCJmZjAwMDBcIlxuLy8gICAgIFwiI2ZmMDAwMDAwXCIgb3IgXCJmZjAwMDAwMFwiXG4vLyAgICAgXCJyZ2IgMjU1IDAgMFwiIG9yIFwicmdiICgyNTUsIDAsIDApXCJcbi8vICAgICBcInJnYiAxLjAgMCAwXCIgb3IgXCJyZ2IgKDEsIDAsIDApXCJcbi8vICAgICBcInJnYmEgKDI1NSwgMCwgMCwgMSlcIiBvciBcInJnYmEgMjU1LCAwLCAwLCAxXCJcbi8vICAgICBcInJnYmEgKDEuMCwgMCwgMCwgMSlcIiBvciBcInJnYmEgMS4wLCAwLCAwLCAxXCJcbi8vICAgICBcImhzbCgwLCAxMDAlLCA1MCUpXCIgb3IgXCJoc2wgMCAxMDAlIDUwJVwiXG4vLyAgICAgXCJoc2xhKDAsIDEwMCUsIDUwJSwgMSlcIiBvciBcImhzbGEgMCAxMDAlIDUwJSwgMVwiXG4vLyAgICAgXCJoc3YoMCwgMTAwJSwgMTAwJSlcIiBvciBcImhzdiAwIDEwMCUgMTAwJVwiXG4vL1xuZnVuY3Rpb24gaW5wdXRUb1JHQihjb2xvcikge1xuXG4gICAgdmFyIHJnYiA9IHsgcjogMCwgZzogMCwgYjogMCB9O1xuICAgIHZhciBhID0gMTtcbiAgICB2YXIgcyA9IG51bGw7XG4gICAgdmFyIHYgPSBudWxsO1xuICAgIHZhciBsID0gbnVsbDtcbiAgICB2YXIgb2sgPSBmYWxzZTtcbiAgICB2YXIgZm9ybWF0ID0gZmFsc2U7XG5cbiAgICBpZiAodHlwZW9mIGNvbG9yID09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY29sb3IgPSBzdHJpbmdJbnB1dFRvT2JqZWN0KGNvbG9yKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGNvbG9yID09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgaWYgKGlzVmFsaWRDU1NVbml0KGNvbG9yLnIpICYmIGlzVmFsaWRDU1NVbml0KGNvbG9yLmcpICYmIGlzVmFsaWRDU1NVbml0KGNvbG9yLmIpKSB7XG4gICAgICAgICAgICByZ2IgPSByZ2JUb1JnYihjb2xvci5yLCBjb2xvci5nLCBjb2xvci5iKTtcbiAgICAgICAgICAgIG9rID0gdHJ1ZTtcbiAgICAgICAgICAgIGZvcm1hdCA9IFN0cmluZyhjb2xvci5yKS5zdWJzdHIoLTEpID09PSBcIiVcIiA/IFwicHJnYlwiIDogXCJyZ2JcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc1ZhbGlkQ1NTVW5pdChjb2xvci5oKSAmJiBpc1ZhbGlkQ1NTVW5pdChjb2xvci5zKSAmJiBpc1ZhbGlkQ1NTVW5pdChjb2xvci52KSkge1xuICAgICAgICAgICAgcyA9IGNvbnZlcnRUb1BlcmNlbnRhZ2UoY29sb3Iucyk7XG4gICAgICAgICAgICB2ID0gY29udmVydFRvUGVyY2VudGFnZShjb2xvci52KTtcbiAgICAgICAgICAgIHJnYiA9IGhzdlRvUmdiKGNvbG9yLmgsIHMsIHYpO1xuICAgICAgICAgICAgb2sgPSB0cnVlO1xuICAgICAgICAgICAgZm9ybWF0ID0gXCJoc3ZcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc1ZhbGlkQ1NTVW5pdChjb2xvci5oKSAmJiBpc1ZhbGlkQ1NTVW5pdChjb2xvci5zKSAmJiBpc1ZhbGlkQ1NTVW5pdChjb2xvci5sKSkge1xuICAgICAgICAgICAgcyA9IGNvbnZlcnRUb1BlcmNlbnRhZ2UoY29sb3Iucyk7XG4gICAgICAgICAgICBsID0gY29udmVydFRvUGVyY2VudGFnZShjb2xvci5sKTtcbiAgICAgICAgICAgIHJnYiA9IGhzbFRvUmdiKGNvbG9yLmgsIHMsIGwpO1xuICAgICAgICAgICAgb2sgPSB0cnVlO1xuICAgICAgICAgICAgZm9ybWF0ID0gXCJoc2xcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb2xvci5oYXNPd25Qcm9wZXJ0eShcImFcIikpIHtcbiAgICAgICAgICAgIGEgPSBjb2xvci5hO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYSA9IGJvdW5kQWxwaGEoYSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBvazogb2ssXG4gICAgICAgIGZvcm1hdDogY29sb3IuZm9ybWF0IHx8IGZvcm1hdCxcbiAgICAgICAgcjogbWF0aE1pbigyNTUsIG1hdGhNYXgocmdiLnIsIDApKSxcbiAgICAgICAgZzogbWF0aE1pbigyNTUsIG1hdGhNYXgocmdiLmcsIDApKSxcbiAgICAgICAgYjogbWF0aE1pbigyNTUsIG1hdGhNYXgocmdiLmIsIDApKSxcbiAgICAgICAgYTogYVxuICAgIH07XG59XG5cblxuLy8gQ29udmVyc2lvbiBGdW5jdGlvbnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIGByZ2JUb0hzbGAsIGByZ2JUb0hzdmAsIGBoc2xUb1JnYmAsIGBoc3ZUb1JnYmAgbW9kaWZpZWQgZnJvbTpcbi8vIDxodHRwOi8vbWppamFja3Nvbi5jb20vMjAwOC8wMi9yZ2ItdG8taHNsLWFuZC1yZ2ItdG8taHN2LWNvbG9yLW1vZGVsLWNvbnZlcnNpb24tYWxnb3JpdGhtcy1pbi1qYXZhc2NyaXB0PlxuXG4vLyBgcmdiVG9SZ2JgXG4vLyBIYW5kbGUgYm91bmRzIC8gcGVyY2VudGFnZSBjaGVja2luZyB0byBjb25mb3JtIHRvIENTUyBjb2xvciBzcGVjXG4vLyA8aHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1jb2xvci8+XG4vLyAqQXNzdW1lczoqIHIsIGcsIGIgaW4gWzAsIDI1NV0gb3IgWzAsIDFdXG4vLyAqUmV0dXJuczoqIHsgciwgZywgYiB9IGluIFswLCAyNTVdXG5mdW5jdGlvbiByZ2JUb1JnYihyLCBnLCBiKXtcbiAgICByZXR1cm4ge1xuICAgICAgICByOiBib3VuZDAxKHIsIDI1NSkgKiAyNTUsXG4gICAgICAgIGc6IGJvdW5kMDEoZywgMjU1KSAqIDI1NSxcbiAgICAgICAgYjogYm91bmQwMShiLCAyNTUpICogMjU1XG4gICAgfTtcbn1cblxuLy8gYHJnYlRvSHNsYFxuLy8gQ29udmVydHMgYW4gUkdCIGNvbG9yIHZhbHVlIHRvIEhTTC5cbi8vICpBc3N1bWVzOiogciwgZywgYW5kIGIgYXJlIGNvbnRhaW5lZCBpbiBbMCwgMjU1XSBvciBbMCwgMV1cbi8vICpSZXR1cm5zOiogeyBoLCBzLCBsIH0gaW4gWzAsMV1cbmZ1bmN0aW9uIHJnYlRvSHNsKHIsIGcsIGIpIHtcblxuICAgIHIgPSBib3VuZDAxKHIsIDI1NSk7XG4gICAgZyA9IGJvdW5kMDEoZywgMjU1KTtcbiAgICBiID0gYm91bmQwMShiLCAyNTUpO1xuXG4gICAgdmFyIG1heCA9IG1hdGhNYXgociwgZywgYiksIG1pbiA9IG1hdGhNaW4ociwgZywgYik7XG4gICAgdmFyIGgsIHMsIGwgPSAobWF4ICsgbWluKSAvIDI7XG5cbiAgICBpZihtYXggPT0gbWluKSB7XG4gICAgICAgIGggPSBzID0gMDsgLy8gYWNocm9tYXRpY1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdmFyIGQgPSBtYXggLSBtaW47XG4gICAgICAgIHMgPSBsID4gMC41ID8gZCAvICgyIC0gbWF4IC0gbWluKSA6IGQgLyAobWF4ICsgbWluKTtcbiAgICAgICAgc3dpdGNoKG1heCkge1xuICAgICAgICAgICAgY2FzZSByOiBoID0gKGcgLSBiKSAvIGQgKyAoZyA8IGIgPyA2IDogMCk7IGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBnOiBoID0gKGIgLSByKSAvIGQgKyAyOyBicmVhaztcbiAgICAgICAgICAgIGNhc2UgYjogaCA9IChyIC0gZykgLyBkICsgNDsgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBoIC89IDY7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgaDogaCwgczogcywgbDogbCB9O1xufVxuXG4vLyBgaHNsVG9SZ2JgXG4vLyBDb252ZXJ0cyBhbiBIU0wgY29sb3IgdmFsdWUgdG8gUkdCLlxuLy8gKkFzc3VtZXM6KiBoIGlzIGNvbnRhaW5lZCBpbiBbMCwgMV0gb3IgWzAsIDM2MF0gYW5kIHMgYW5kIGwgYXJlIGNvbnRhaW5lZCBbMCwgMV0gb3IgWzAsIDEwMF1cbi8vICpSZXR1cm5zOiogeyByLCBnLCBiIH0gaW4gdGhlIHNldCBbMCwgMjU1XVxuZnVuY3Rpb24gaHNsVG9SZ2IoaCwgcywgbCkge1xuICAgIHZhciByLCBnLCBiO1xuXG4gICAgaCA9IGJvdW5kMDEoaCwgMzYwKTtcbiAgICBzID0gYm91bmQwMShzLCAxMDApO1xuICAgIGwgPSBib3VuZDAxKGwsIDEwMCk7XG5cbiAgICBmdW5jdGlvbiBodWUycmdiKHAsIHEsIHQpIHtcbiAgICAgICAgaWYodCA8IDApIHQgKz0gMTtcbiAgICAgICAgaWYodCA+IDEpIHQgLT0gMTtcbiAgICAgICAgaWYodCA8IDEvNikgcmV0dXJuIHAgKyAocSAtIHApICogNiAqIHQ7XG4gICAgICAgIGlmKHQgPCAxLzIpIHJldHVybiBxO1xuICAgICAgICBpZih0IDwgMi8zKSByZXR1cm4gcCArIChxIC0gcCkgKiAoMi8zIC0gdCkgKiA2O1xuICAgICAgICByZXR1cm4gcDtcbiAgICB9XG5cbiAgICBpZihzID09PSAwKSB7XG4gICAgICAgIHIgPSBnID0gYiA9IGw7IC8vIGFjaHJvbWF0aWNcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHZhciBxID0gbCA8IDAuNSA/IGwgKiAoMSArIHMpIDogbCArIHMgLSBsICogcztcbiAgICAgICAgdmFyIHAgPSAyICogbCAtIHE7XG4gICAgICAgIHIgPSBodWUycmdiKHAsIHEsIGggKyAxLzMpO1xuICAgICAgICBnID0gaHVlMnJnYihwLCBxLCBoKTtcbiAgICAgICAgYiA9IGh1ZTJyZ2IocCwgcSwgaCAtIDEvMyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgcjogciAqIDI1NSwgZzogZyAqIDI1NSwgYjogYiAqIDI1NSB9O1xufVxuXG4vLyBgcmdiVG9Ic3ZgXG4vLyBDb252ZXJ0cyBhbiBSR0IgY29sb3IgdmFsdWUgdG8gSFNWXG4vLyAqQXNzdW1lczoqIHIsIGcsIGFuZCBiIGFyZSBjb250YWluZWQgaW4gdGhlIHNldCBbMCwgMjU1XSBvciBbMCwgMV1cbi8vICpSZXR1cm5zOiogeyBoLCBzLCB2IH0gaW4gWzAsMV1cbmZ1bmN0aW9uIHJnYlRvSHN2KHIsIGcsIGIpIHtcblxuICAgIHIgPSBib3VuZDAxKHIsIDI1NSk7XG4gICAgZyA9IGJvdW5kMDEoZywgMjU1KTtcbiAgICBiID0gYm91bmQwMShiLCAyNTUpO1xuXG4gICAgdmFyIG1heCA9IG1hdGhNYXgociwgZywgYiksIG1pbiA9IG1hdGhNaW4ociwgZywgYik7XG4gICAgdmFyIGgsIHMsIHYgPSBtYXg7XG5cbiAgICB2YXIgZCA9IG1heCAtIG1pbjtcbiAgICBzID0gbWF4ID09PSAwID8gMCA6IGQgLyBtYXg7XG5cbiAgICBpZihtYXggPT0gbWluKSB7XG4gICAgICAgIGggPSAwOyAvLyBhY2hyb21hdGljXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBzd2l0Y2gobWF4KSB7XG4gICAgICAgICAgICBjYXNlIHI6IGggPSAoZyAtIGIpIC8gZCArIChnIDwgYiA/IDYgOiAwKTsgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIGc6IGggPSAoYiAtIHIpIC8gZCArIDI7IGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBiOiBoID0gKHIgLSBnKSAvIGQgKyA0OyBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBoIC89IDY7XG4gICAgfVxuICAgIHJldHVybiB7IGg6IGgsIHM6IHMsIHY6IHYgfTtcbn1cblxuLy8gYGhzdlRvUmdiYFxuLy8gQ29udmVydHMgYW4gSFNWIGNvbG9yIHZhbHVlIHRvIFJHQi5cbi8vICpBc3N1bWVzOiogaCBpcyBjb250YWluZWQgaW4gWzAsIDFdIG9yIFswLCAzNjBdIGFuZCBzIGFuZCB2IGFyZSBjb250YWluZWQgaW4gWzAsIDFdIG9yIFswLCAxMDBdXG4vLyAqUmV0dXJuczoqIHsgciwgZywgYiB9IGluIHRoZSBzZXQgWzAsIDI1NV1cbiBmdW5jdGlvbiBoc3ZUb1JnYihoLCBzLCB2KSB7XG5cbiAgICBoID0gYm91bmQwMShoLCAzNjApICogNjtcbiAgICBzID0gYm91bmQwMShzLCAxMDApO1xuICAgIHYgPSBib3VuZDAxKHYsIDEwMCk7XG5cbiAgICB2YXIgaSA9IE1hdGguZmxvb3IoaCksXG4gICAgICAgIGYgPSBoIC0gaSxcbiAgICAgICAgcCA9IHYgKiAoMSAtIHMpLFxuICAgICAgICBxID0gdiAqICgxIC0gZiAqIHMpLFxuICAgICAgICB0ID0gdiAqICgxIC0gKDEgLSBmKSAqIHMpLFxuICAgICAgICBtb2QgPSBpICUgNixcbiAgICAgICAgciA9IFt2LCBxLCBwLCBwLCB0LCB2XVttb2RdLFxuICAgICAgICBnID0gW3QsIHYsIHYsIHEsIHAsIHBdW21vZF0sXG4gICAgICAgIGIgPSBbcCwgcCwgdCwgdiwgdiwgcV1bbW9kXTtcblxuICAgIHJldHVybiB7IHI6IHIgKiAyNTUsIGc6IGcgKiAyNTUsIGI6IGIgKiAyNTUgfTtcbn1cblxuLy8gYHJnYlRvSGV4YFxuLy8gQ29udmVydHMgYW4gUkdCIGNvbG9yIHRvIGhleFxuLy8gQXNzdW1lcyByLCBnLCBhbmQgYiBhcmUgY29udGFpbmVkIGluIHRoZSBzZXQgWzAsIDI1NV1cbi8vIFJldHVybnMgYSAzIG9yIDYgY2hhcmFjdGVyIGhleFxuZnVuY3Rpb24gcmdiVG9IZXgociwgZywgYiwgYWxsb3czQ2hhcikge1xuXG4gICAgdmFyIGhleCA9IFtcbiAgICAgICAgcGFkMihtYXRoUm91bmQocikudG9TdHJpbmcoMTYpKSxcbiAgICAgICAgcGFkMihtYXRoUm91bmQoZykudG9TdHJpbmcoMTYpKSxcbiAgICAgICAgcGFkMihtYXRoUm91bmQoYikudG9TdHJpbmcoMTYpKVxuICAgIF07XG5cbiAgICAvLyBSZXR1cm4gYSAzIGNoYXJhY3RlciBoZXggaWYgcG9zc2libGVcbiAgICBpZiAoYWxsb3czQ2hhciAmJiBoZXhbMF0uY2hhckF0KDApID09IGhleFswXS5jaGFyQXQoMSkgJiYgaGV4WzFdLmNoYXJBdCgwKSA9PSBoZXhbMV0uY2hhckF0KDEpICYmIGhleFsyXS5jaGFyQXQoMCkgPT0gaGV4WzJdLmNoYXJBdCgxKSkge1xuICAgICAgICByZXR1cm4gaGV4WzBdLmNoYXJBdCgwKSArIGhleFsxXS5jaGFyQXQoMCkgKyBoZXhbMl0uY2hhckF0KDApO1xuICAgIH1cblxuICAgIHJldHVybiBoZXguam9pbihcIlwiKTtcbn1cblxuLy8gYHJnYmFUb0hleGBcbi8vIENvbnZlcnRzIGFuIFJHQkEgY29sb3IgcGx1cyBhbHBoYSB0cmFuc3BhcmVuY3kgdG8gaGV4XG4vLyBBc3N1bWVzIHIsIGcsIGIgYXJlIGNvbnRhaW5lZCBpbiB0aGUgc2V0IFswLCAyNTVdIGFuZFxuLy8gYSBpbiBbMCwgMV0uIFJldHVybnMgYSA0IG9yIDggY2hhcmFjdGVyIHJnYmEgaGV4XG5mdW5jdGlvbiByZ2JhVG9IZXgociwgZywgYiwgYSwgYWxsb3c0Q2hhcikge1xuXG4gICAgdmFyIGhleCA9IFtcbiAgICAgICAgcGFkMihtYXRoUm91bmQocikudG9TdHJpbmcoMTYpKSxcbiAgICAgICAgcGFkMihtYXRoUm91bmQoZykudG9TdHJpbmcoMTYpKSxcbiAgICAgICAgcGFkMihtYXRoUm91bmQoYikudG9TdHJpbmcoMTYpKSxcbiAgICAgICAgcGFkMihjb252ZXJ0RGVjaW1hbFRvSGV4KGEpKVxuICAgIF07XG5cbiAgICAvLyBSZXR1cm4gYSA0IGNoYXJhY3RlciBoZXggaWYgcG9zc2libGVcbiAgICBpZiAoYWxsb3c0Q2hhciAmJiBoZXhbMF0uY2hhckF0KDApID09IGhleFswXS5jaGFyQXQoMSkgJiYgaGV4WzFdLmNoYXJBdCgwKSA9PSBoZXhbMV0uY2hhckF0KDEpICYmIGhleFsyXS5jaGFyQXQoMCkgPT0gaGV4WzJdLmNoYXJBdCgxKSAmJiBoZXhbM10uY2hhckF0KDApID09IGhleFszXS5jaGFyQXQoMSkpIHtcbiAgICAgICAgcmV0dXJuIGhleFswXS5jaGFyQXQoMCkgKyBoZXhbMV0uY2hhckF0KDApICsgaGV4WzJdLmNoYXJBdCgwKSArIGhleFszXS5jaGFyQXQoMCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhleC5qb2luKFwiXCIpO1xufVxuXG4vLyBgcmdiYVRvQXJnYkhleGBcbi8vIENvbnZlcnRzIGFuIFJHQkEgY29sb3IgdG8gYW4gQVJHQiBIZXg4IHN0cmluZ1xuLy8gUmFyZWx5IHVzZWQsIGJ1dCByZXF1aXJlZCBmb3IgXCJ0b0ZpbHRlcigpXCJcbmZ1bmN0aW9uIHJnYmFUb0FyZ2JIZXgociwgZywgYiwgYSkge1xuXG4gICAgdmFyIGhleCA9IFtcbiAgICAgICAgcGFkMihjb252ZXJ0RGVjaW1hbFRvSGV4KGEpKSxcbiAgICAgICAgcGFkMihtYXRoUm91bmQocikudG9TdHJpbmcoMTYpKSxcbiAgICAgICAgcGFkMihtYXRoUm91bmQoZykudG9TdHJpbmcoMTYpKSxcbiAgICAgICAgcGFkMihtYXRoUm91bmQoYikudG9TdHJpbmcoMTYpKVxuICAgIF07XG5cbiAgICByZXR1cm4gaGV4LmpvaW4oXCJcIik7XG59XG5cbi8vIGBlcXVhbHNgXG4vLyBDYW4gYmUgY2FsbGVkIHdpdGggYW55IHRpbnljb2xvciBpbnB1dFxudGlueWNvbG9yLmVxdWFscyA9IGZ1bmN0aW9uIChjb2xvcjEsIGNvbG9yMikge1xuICAgIGlmICghY29sb3IxIHx8ICFjb2xvcjIpIHsgcmV0dXJuIGZhbHNlOyB9XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcjEpLnRvUmdiU3RyaW5nKCkgPT0gdGlueWNvbG9yKGNvbG9yMikudG9SZ2JTdHJpbmcoKTtcbn07XG5cbnRpbnljb2xvci5yYW5kb20gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGlueWNvbG9yLmZyb21SYXRpbyh7XG4gICAgICAgIHI6IG1hdGhSYW5kb20oKSxcbiAgICAgICAgZzogbWF0aFJhbmRvbSgpLFxuICAgICAgICBiOiBtYXRoUmFuZG9tKClcbiAgICB9KTtcbn07XG5cblxuLy8gTW9kaWZpY2F0aW9uIEZ1bmN0aW9uc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVGhhbmtzIHRvIGxlc3MuanMgZm9yIHNvbWUgb2YgdGhlIGJhc2ljcyBoZXJlXG4vLyA8aHR0cHM6Ly9naXRodWIuY29tL2Nsb3VkaGVhZC9sZXNzLmpzL2Jsb2IvbWFzdGVyL2xpYi9sZXNzL2Z1bmN0aW9ucy5qcz5cblxuZnVuY3Rpb24gZGVzYXR1cmF0ZShjb2xvciwgYW1vdW50KSB7XG4gICAgYW1vdW50ID0gKGFtb3VudCA9PT0gMCkgPyAwIDogKGFtb3VudCB8fCAxMCk7XG4gICAgdmFyIGhzbCA9IHRpbnljb2xvcihjb2xvcikudG9Ic2woKTtcbiAgICBoc2wucyAtPSBhbW91bnQgLyAxMDA7XG4gICAgaHNsLnMgPSBjbGFtcDAxKGhzbC5zKTtcbiAgICByZXR1cm4gdGlueWNvbG9yKGhzbCk7XG59XG5cbmZ1bmN0aW9uIHNhdHVyYXRlKGNvbG9yLCBhbW91bnQpIHtcbiAgICBhbW91bnQgPSAoYW1vdW50ID09PSAwKSA/IDAgOiAoYW1vdW50IHx8IDEwKTtcbiAgICB2YXIgaHNsID0gdGlueWNvbG9yKGNvbG9yKS50b0hzbCgpO1xuICAgIGhzbC5zICs9IGFtb3VudCAvIDEwMDtcbiAgICBoc2wucyA9IGNsYW1wMDEoaHNsLnMpO1xuICAgIHJldHVybiB0aW55Y29sb3IoaHNsKTtcbn1cblxuZnVuY3Rpb24gZ3JleXNjYWxlKGNvbG9yKSB7XG4gICAgcmV0dXJuIHRpbnljb2xvcihjb2xvcikuZGVzYXR1cmF0ZSgxMDApO1xufVxuXG5mdW5jdGlvbiBsaWdodGVuIChjb2xvciwgYW1vdW50KSB7XG4gICAgYW1vdW50ID0gKGFtb3VudCA9PT0gMCkgPyAwIDogKGFtb3VudCB8fCAxMCk7XG4gICAgdmFyIGhzbCA9IHRpbnljb2xvcihjb2xvcikudG9Ic2woKTtcbiAgICBoc2wubCArPSBhbW91bnQgLyAxMDA7XG4gICAgaHNsLmwgPSBjbGFtcDAxKGhzbC5sKTtcbiAgICByZXR1cm4gdGlueWNvbG9yKGhzbCk7XG59XG5cbmZ1bmN0aW9uIGJyaWdodGVuKGNvbG9yLCBhbW91bnQpIHtcbiAgICBhbW91bnQgPSAoYW1vdW50ID09PSAwKSA/IDAgOiAoYW1vdW50IHx8IDEwKTtcbiAgICB2YXIgcmdiID0gdGlueWNvbG9yKGNvbG9yKS50b1JnYigpO1xuICAgIHJnYi5yID0gbWF0aE1heCgwLCBtYXRoTWluKDI1NSwgcmdiLnIgLSBtYXRoUm91bmQoMjU1ICogLSAoYW1vdW50IC8gMTAwKSkpKTtcbiAgICByZ2IuZyA9IG1hdGhNYXgoMCwgbWF0aE1pbigyNTUsIHJnYi5nIC0gbWF0aFJvdW5kKDI1NSAqIC0gKGFtb3VudCAvIDEwMCkpKSk7XG4gICAgcmdiLmIgPSBtYXRoTWF4KDAsIG1hdGhNaW4oMjU1LCByZ2IuYiAtIG1hdGhSb3VuZCgyNTUgKiAtIChhbW91bnQgLyAxMDApKSkpO1xuICAgIHJldHVybiB0aW55Y29sb3IocmdiKTtcbn1cblxuZnVuY3Rpb24gZGFya2VuIChjb2xvciwgYW1vdW50KSB7XG4gICAgYW1vdW50ID0gKGFtb3VudCA9PT0gMCkgPyAwIDogKGFtb3VudCB8fCAxMCk7XG4gICAgdmFyIGhzbCA9IHRpbnljb2xvcihjb2xvcikudG9Ic2woKTtcbiAgICBoc2wubCAtPSBhbW91bnQgLyAxMDA7XG4gICAgaHNsLmwgPSBjbGFtcDAxKGhzbC5sKTtcbiAgICByZXR1cm4gdGlueWNvbG9yKGhzbCk7XG59XG5cbi8vIFNwaW4gdGFrZXMgYSBwb3NpdGl2ZSBvciBuZWdhdGl2ZSBhbW91bnQgd2l0aGluIFstMzYwLCAzNjBdIGluZGljYXRpbmcgdGhlIGNoYW5nZSBvZiBodWUuXG4vLyBWYWx1ZXMgb3V0c2lkZSBvZiB0aGlzIHJhbmdlIHdpbGwgYmUgd3JhcHBlZCBpbnRvIHRoaXMgcmFuZ2UuXG5mdW5jdGlvbiBzcGluKGNvbG9yLCBhbW91bnQpIHtcbiAgICB2YXIgaHNsID0gdGlueWNvbG9yKGNvbG9yKS50b0hzbCgpO1xuICAgIHZhciBodWUgPSAoaHNsLmggKyBhbW91bnQpICUgMzYwO1xuICAgIGhzbC5oID0gaHVlIDwgMCA/IDM2MCArIGh1ZSA6IGh1ZTtcbiAgICByZXR1cm4gdGlueWNvbG9yKGhzbCk7XG59XG5cbi8vIENvbWJpbmF0aW9uIEZ1bmN0aW9uc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBUaGFua3MgdG8galF1ZXJ5IHhDb2xvciBmb3Igc29tZSBvZiB0aGUgaWRlYXMgYmVoaW5kIHRoZXNlXG4vLyA8aHR0cHM6Ly9naXRodWIuY29tL2luZnVzaW9uL2pRdWVyeS14Y29sb3IvYmxvYi9tYXN0ZXIvanF1ZXJ5Lnhjb2xvci5qcz5cblxuZnVuY3Rpb24gY29tcGxlbWVudChjb2xvcikge1xuICAgIHZhciBoc2wgPSB0aW55Y29sb3IoY29sb3IpLnRvSHNsKCk7XG4gICAgaHNsLmggPSAoaHNsLmggKyAxODApICUgMzYwO1xuICAgIHJldHVybiB0aW55Y29sb3IoaHNsKTtcbn1cblxuZnVuY3Rpb24gdHJpYWQoY29sb3IpIHtcbiAgICB2YXIgaHNsID0gdGlueWNvbG9yKGNvbG9yKS50b0hzbCgpO1xuICAgIHZhciBoID0gaHNsLmg7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgdGlueWNvbG9yKGNvbG9yKSxcbiAgICAgICAgdGlueWNvbG9yKHsgaDogKGggKyAxMjApICUgMzYwLCBzOiBoc2wucywgbDogaHNsLmwgfSksXG4gICAgICAgIHRpbnljb2xvcih7IGg6IChoICsgMjQwKSAlIDM2MCwgczogaHNsLnMsIGw6IGhzbC5sIH0pXG4gICAgXTtcbn1cblxuZnVuY3Rpb24gdGV0cmFkKGNvbG9yKSB7XG4gICAgdmFyIGhzbCA9IHRpbnljb2xvcihjb2xvcikudG9Ic2woKTtcbiAgICB2YXIgaCA9IGhzbC5oO1xuICAgIHJldHVybiBbXG4gICAgICAgIHRpbnljb2xvcihjb2xvciksXG4gICAgICAgIHRpbnljb2xvcih7IGg6IChoICsgOTApICUgMzYwLCBzOiBoc2wucywgbDogaHNsLmwgfSksXG4gICAgICAgIHRpbnljb2xvcih7IGg6IChoICsgMTgwKSAlIDM2MCwgczogaHNsLnMsIGw6IGhzbC5sIH0pLFxuICAgICAgICB0aW55Y29sb3IoeyBoOiAoaCArIDI3MCkgJSAzNjAsIHM6IGhzbC5zLCBsOiBoc2wubCB9KVxuICAgIF07XG59XG5cbmZ1bmN0aW9uIHNwbGl0Y29tcGxlbWVudChjb2xvcikge1xuICAgIHZhciBoc2wgPSB0aW55Y29sb3IoY29sb3IpLnRvSHNsKCk7XG4gICAgdmFyIGggPSBoc2wuaDtcbiAgICByZXR1cm4gW1xuICAgICAgICB0aW55Y29sb3IoY29sb3IpLFxuICAgICAgICB0aW55Y29sb3IoeyBoOiAoaCArIDcyKSAlIDM2MCwgczogaHNsLnMsIGw6IGhzbC5sfSksXG4gICAgICAgIHRpbnljb2xvcih7IGg6IChoICsgMjE2KSAlIDM2MCwgczogaHNsLnMsIGw6IGhzbC5sfSlcbiAgICBdO1xufVxuXG5mdW5jdGlvbiBhbmFsb2dvdXMoY29sb3IsIHJlc3VsdHMsIHNsaWNlcykge1xuICAgIHJlc3VsdHMgPSByZXN1bHRzIHx8IDY7XG4gICAgc2xpY2VzID0gc2xpY2VzIHx8IDMwO1xuXG4gICAgdmFyIGhzbCA9IHRpbnljb2xvcihjb2xvcikudG9Ic2woKTtcbiAgICB2YXIgcGFydCA9IDM2MCAvIHNsaWNlcztcbiAgICB2YXIgcmV0ID0gW3Rpbnljb2xvcihjb2xvcildO1xuXG4gICAgZm9yIChoc2wuaCA9ICgoaHNsLmggLSAocGFydCAqIHJlc3VsdHMgPj4gMSkpICsgNzIwKSAlIDM2MDsgLS1yZXN1bHRzOyApIHtcbiAgICAgICAgaHNsLmggPSAoaHNsLmggKyBwYXJ0KSAlIDM2MDtcbiAgICAgICAgcmV0LnB1c2godGlueWNvbG9yKGhzbCkpO1xuICAgIH1cbiAgICByZXR1cm4gcmV0O1xufVxuXG5mdW5jdGlvbiBtb25vY2hyb21hdGljKGNvbG9yLCByZXN1bHRzKSB7XG4gICAgcmVzdWx0cyA9IHJlc3VsdHMgfHwgNjtcbiAgICB2YXIgaHN2ID0gdGlueWNvbG9yKGNvbG9yKS50b0hzdigpO1xuICAgIHZhciBoID0gaHN2LmgsIHMgPSBoc3YucywgdiA9IGhzdi52O1xuICAgIHZhciByZXQgPSBbXTtcbiAgICB2YXIgbW9kaWZpY2F0aW9uID0gMSAvIHJlc3VsdHM7XG5cbiAgICB3aGlsZSAocmVzdWx0cy0tKSB7XG4gICAgICAgIHJldC5wdXNoKHRpbnljb2xvcih7IGg6IGgsIHM6IHMsIHY6IHZ9KSk7XG4gICAgICAgIHYgPSAodiArIG1vZGlmaWNhdGlvbikgJSAxO1xuICAgIH1cblxuICAgIHJldHVybiByZXQ7XG59XG5cbi8vIFV0aWxpdHkgRnVuY3Rpb25zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxudGlueWNvbG9yLm1peCA9IGZ1bmN0aW9uKGNvbG9yMSwgY29sb3IyLCBhbW91bnQpIHtcbiAgICBhbW91bnQgPSAoYW1vdW50ID09PSAwKSA/IDAgOiAoYW1vdW50IHx8IDUwKTtcblxuICAgIHZhciByZ2IxID0gdGlueWNvbG9yKGNvbG9yMSkudG9SZ2IoKTtcbiAgICB2YXIgcmdiMiA9IHRpbnljb2xvcihjb2xvcjIpLnRvUmdiKCk7XG5cbiAgICB2YXIgcCA9IGFtb3VudCAvIDEwMDtcblxuICAgIHZhciByZ2JhID0ge1xuICAgICAgICByOiAoKHJnYjIuciAtIHJnYjEucikgKiBwKSArIHJnYjEucixcbiAgICAgICAgZzogKChyZ2IyLmcgLSByZ2IxLmcpICogcCkgKyByZ2IxLmcsXG4gICAgICAgIGI6ICgocmdiMi5iIC0gcmdiMS5iKSAqIHApICsgcmdiMS5iLFxuICAgICAgICBhOiAoKHJnYjIuYSAtIHJnYjEuYSkgKiBwKSArIHJnYjEuYVxuICAgIH07XG5cbiAgICByZXR1cm4gdGlueWNvbG9yKHJnYmEpO1xufTtcblxuXG4vLyBSZWFkYWJpbGl0eSBGdW5jdGlvbnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gPGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMDgvUkVDLVdDQUcyMC0yMDA4MTIxMS8jY29udHJhc3QtcmF0aW9kZWYgKFdDQUcgVmVyc2lvbiAyKVxuXG4vLyBgY29udHJhc3RgXG4vLyBBbmFseXplIHRoZSAyIGNvbG9ycyBhbmQgcmV0dXJucyB0aGUgY29sb3IgY29udHJhc3QgZGVmaW5lZCBieSAoV0NBRyBWZXJzaW9uIDIpXG50aW55Y29sb3IucmVhZGFiaWxpdHkgPSBmdW5jdGlvbihjb2xvcjEsIGNvbG9yMikge1xuICAgIHZhciBjMSA9IHRpbnljb2xvcihjb2xvcjEpO1xuICAgIHZhciBjMiA9IHRpbnljb2xvcihjb2xvcjIpO1xuICAgIHJldHVybiAoTWF0aC5tYXgoYzEuZ2V0THVtaW5hbmNlKCksYzIuZ2V0THVtaW5hbmNlKCkpKzAuMDUpIC8gKE1hdGgubWluKGMxLmdldEx1bWluYW5jZSgpLGMyLmdldEx1bWluYW5jZSgpKSswLjA1KTtcbn07XG5cbi8vIGBpc1JlYWRhYmxlYFxuLy8gRW5zdXJlIHRoYXQgZm9yZWdyb3VuZCBhbmQgYmFja2dyb3VuZCBjb2xvciBjb21iaW5hdGlvbnMgbWVldCBXQ0FHMiBndWlkZWxpbmVzLlxuLy8gVGhlIHRoaXJkIGFyZ3VtZW50IGlzIGFuIG9wdGlvbmFsIE9iamVjdC5cbi8vICAgICAgdGhlICdsZXZlbCcgcHJvcGVydHkgc3RhdGVzICdBQScgb3IgJ0FBQScgLSBpZiBtaXNzaW5nIG9yIGludmFsaWQsIGl0IGRlZmF1bHRzIHRvICdBQSc7XG4vLyAgICAgIHRoZSAnc2l6ZScgcHJvcGVydHkgc3RhdGVzICdsYXJnZScgb3IgJ3NtYWxsJyAtIGlmIG1pc3Npbmcgb3IgaW52YWxpZCwgaXQgZGVmYXVsdHMgdG8gJ3NtYWxsJy5cbi8vIElmIHRoZSBlbnRpcmUgb2JqZWN0IGlzIGFic2VudCwgaXNSZWFkYWJsZSBkZWZhdWx0cyB0byB7bGV2ZWw6XCJBQVwiLHNpemU6XCJzbWFsbFwifS5cblxuLy8gKkV4YW1wbGUqXG4vLyAgICB0aW55Y29sb3IuaXNSZWFkYWJsZShcIiMwMDBcIiwgXCIjMTExXCIpID0+IGZhbHNlXG4vLyAgICB0aW55Y29sb3IuaXNSZWFkYWJsZShcIiMwMDBcIiwgXCIjMTExXCIse2xldmVsOlwiQUFcIixzaXplOlwibGFyZ2VcIn0pID0+IGZhbHNlXG50aW55Y29sb3IuaXNSZWFkYWJsZSA9IGZ1bmN0aW9uKGNvbG9yMSwgY29sb3IyLCB3Y2FnMikge1xuICAgIHZhciByZWFkYWJpbGl0eSA9IHRpbnljb2xvci5yZWFkYWJpbGl0eShjb2xvcjEsIGNvbG9yMik7XG4gICAgdmFyIHdjYWcyUGFybXMsIG91dDtcblxuICAgIG91dCA9IGZhbHNlO1xuXG4gICAgd2NhZzJQYXJtcyA9IHZhbGlkYXRlV0NBRzJQYXJtcyh3Y2FnMik7XG4gICAgc3dpdGNoICh3Y2FnMlBhcm1zLmxldmVsICsgd2NhZzJQYXJtcy5zaXplKSB7XG4gICAgICAgIGNhc2UgXCJBQXNtYWxsXCI6XG4gICAgICAgIGNhc2UgXCJBQUFsYXJnZVwiOlxuICAgICAgICAgICAgb3V0ID0gcmVhZGFiaWxpdHkgPj0gNC41O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJBQWxhcmdlXCI6XG4gICAgICAgICAgICBvdXQgPSByZWFkYWJpbGl0eSA+PSAzO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJBQUFzbWFsbFwiOlxuICAgICAgICAgICAgb3V0ID0gcmVhZGFiaWxpdHkgPj0gNztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gb3V0O1xuXG59O1xuXG4vLyBgbW9zdFJlYWRhYmxlYFxuLy8gR2l2ZW4gYSBiYXNlIGNvbG9yIGFuZCBhIGxpc3Qgb2YgcG9zc2libGUgZm9yZWdyb3VuZCBvciBiYWNrZ3JvdW5kXG4vLyBjb2xvcnMgZm9yIHRoYXQgYmFzZSwgcmV0dXJucyB0aGUgbW9zdCByZWFkYWJsZSBjb2xvci5cbi8vIE9wdGlvbmFsbHkgcmV0dXJucyBCbGFjayBvciBXaGl0ZSBpZiB0aGUgbW9zdCByZWFkYWJsZSBjb2xvciBpcyB1bnJlYWRhYmxlLlxuLy8gKkV4YW1wbGUqXG4vLyAgICB0aW55Y29sb3IubW9zdFJlYWRhYmxlKHRpbnljb2xvci5tb3N0UmVhZGFibGUoXCIjMTIzXCIsIFtcIiMxMjRcIiwgXCIjMTI1XCJdLHtpbmNsdWRlRmFsbGJhY2tDb2xvcnM6ZmFsc2V9KS50b0hleFN0cmluZygpOyAvLyBcIiMxMTIyNTVcIlxuLy8gICAgdGlueWNvbG9yLm1vc3RSZWFkYWJsZSh0aW55Y29sb3IubW9zdFJlYWRhYmxlKFwiIzEyM1wiLCBbXCIjMTI0XCIsIFwiIzEyNVwiXSx7aW5jbHVkZUZhbGxiYWNrQ29sb3JzOnRydWV9KS50b0hleFN0cmluZygpOyAgLy8gXCIjZmZmZmZmXCJcbi8vICAgIHRpbnljb2xvci5tb3N0UmVhZGFibGUoXCIjYTgwMTVhXCIsIFtcIiNmYWYzZjNcIl0se2luY2x1ZGVGYWxsYmFja0NvbG9yczp0cnVlLGxldmVsOlwiQUFBXCIsc2l6ZTpcImxhcmdlXCJ9KS50b0hleFN0cmluZygpOyAvLyBcIiNmYWYzZjNcIlxuLy8gICAgdGlueWNvbG9yLm1vc3RSZWFkYWJsZShcIiNhODAxNWFcIiwgW1wiI2ZhZjNmM1wiXSx7aW5jbHVkZUZhbGxiYWNrQ29sb3JzOnRydWUsbGV2ZWw6XCJBQUFcIixzaXplOlwic21hbGxcIn0pLnRvSGV4U3RyaW5nKCk7IC8vIFwiI2ZmZmZmZlwiXG50aW55Y29sb3IubW9zdFJlYWRhYmxlID0gZnVuY3Rpb24oYmFzZUNvbG9yLCBjb2xvckxpc3QsIGFyZ3MpIHtcbiAgICB2YXIgYmVzdENvbG9yID0gbnVsbDtcbiAgICB2YXIgYmVzdFNjb3JlID0gMDtcbiAgICB2YXIgcmVhZGFiaWxpdHk7XG4gICAgdmFyIGluY2x1ZGVGYWxsYmFja0NvbG9ycywgbGV2ZWwsIHNpemUgO1xuICAgIGFyZ3MgPSBhcmdzIHx8IHt9O1xuICAgIGluY2x1ZGVGYWxsYmFja0NvbG9ycyA9IGFyZ3MuaW5jbHVkZUZhbGxiYWNrQ29sb3JzIDtcbiAgICBsZXZlbCA9IGFyZ3MubGV2ZWw7XG4gICAgc2l6ZSA9IGFyZ3Muc2l6ZTtcblxuICAgIGZvciAodmFyIGk9IDA7IGkgPCBjb2xvckxpc3QubGVuZ3RoIDsgaSsrKSB7XG4gICAgICAgIHJlYWRhYmlsaXR5ID0gdGlueWNvbG9yLnJlYWRhYmlsaXR5KGJhc2VDb2xvciwgY29sb3JMaXN0W2ldKTtcbiAgICAgICAgaWYgKHJlYWRhYmlsaXR5ID4gYmVzdFNjb3JlKSB7XG4gICAgICAgICAgICBiZXN0U2NvcmUgPSByZWFkYWJpbGl0eTtcbiAgICAgICAgICAgIGJlc3RDb2xvciA9IHRpbnljb2xvcihjb2xvckxpc3RbaV0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRpbnljb2xvci5pc1JlYWRhYmxlKGJhc2VDb2xvciwgYmVzdENvbG9yLCB7XCJsZXZlbFwiOmxldmVsLFwic2l6ZVwiOnNpemV9KSB8fCAhaW5jbHVkZUZhbGxiYWNrQ29sb3JzKSB7XG4gICAgICAgIHJldHVybiBiZXN0Q29sb3I7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBhcmdzLmluY2x1ZGVGYWxsYmFja0NvbG9ycz1mYWxzZTtcbiAgICAgICAgcmV0dXJuIHRpbnljb2xvci5tb3N0UmVhZGFibGUoYmFzZUNvbG9yLFtcIiNmZmZcIiwgXCIjMDAwXCJdLGFyZ3MpO1xuICAgIH1cbn07XG5cblxuLy8gQmlnIExpc3Qgb2YgQ29sb3JzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS1cbi8vIDxodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLWNvbG9yLyNzdmctY29sb3I+XG52YXIgbmFtZXMgPSB0aW55Y29sb3IubmFtZXMgPSB7XG4gICAgYWxpY2VibHVlOiBcImYwZjhmZlwiLFxuICAgIGFudGlxdWV3aGl0ZTogXCJmYWViZDdcIixcbiAgICBhcXVhOiBcIjBmZlwiLFxuICAgIGFxdWFtYXJpbmU6IFwiN2ZmZmQ0XCIsXG4gICAgYXp1cmU6IFwiZjBmZmZmXCIsXG4gICAgYmVpZ2U6IFwiZjVmNWRjXCIsXG4gICAgYmlzcXVlOiBcImZmZTRjNFwiLFxuICAgIGJsYWNrOiBcIjAwMFwiLFxuICAgIGJsYW5jaGVkYWxtb25kOiBcImZmZWJjZFwiLFxuICAgIGJsdWU6IFwiMDBmXCIsXG4gICAgYmx1ZXZpb2xldDogXCI4YTJiZTJcIixcbiAgICBicm93bjogXCJhNTJhMmFcIixcbiAgICBidXJseXdvb2Q6IFwiZGViODg3XCIsXG4gICAgYnVybnRzaWVubmE6IFwiZWE3ZTVkXCIsXG4gICAgY2FkZXRibHVlOiBcIjVmOWVhMFwiLFxuICAgIGNoYXJ0cmV1c2U6IFwiN2ZmZjAwXCIsXG4gICAgY2hvY29sYXRlOiBcImQyNjkxZVwiLFxuICAgIGNvcmFsOiBcImZmN2Y1MFwiLFxuICAgIGNvcm5mbG93ZXJibHVlOiBcIjY0OTVlZFwiLFxuICAgIGNvcm5zaWxrOiBcImZmZjhkY1wiLFxuICAgIGNyaW1zb246IFwiZGMxNDNjXCIsXG4gICAgY3lhbjogXCIwZmZcIixcbiAgICBkYXJrYmx1ZTogXCIwMDAwOGJcIixcbiAgICBkYXJrY3lhbjogXCIwMDhiOGJcIixcbiAgICBkYXJrZ29sZGVucm9kOiBcImI4ODYwYlwiLFxuICAgIGRhcmtncmF5OiBcImE5YTlhOVwiLFxuICAgIGRhcmtncmVlbjogXCIwMDY0MDBcIixcbiAgICBkYXJrZ3JleTogXCJhOWE5YTlcIixcbiAgICBkYXJra2hha2k6IFwiYmRiNzZiXCIsXG4gICAgZGFya21hZ2VudGE6IFwiOGIwMDhiXCIsXG4gICAgZGFya29saXZlZ3JlZW46IFwiNTU2YjJmXCIsXG4gICAgZGFya29yYW5nZTogXCJmZjhjMDBcIixcbiAgICBkYXJrb3JjaGlkOiBcIjk5MzJjY1wiLFxuICAgIGRhcmtyZWQ6IFwiOGIwMDAwXCIsXG4gICAgZGFya3NhbG1vbjogXCJlOTk2N2FcIixcbiAgICBkYXJrc2VhZ3JlZW46IFwiOGZiYzhmXCIsXG4gICAgZGFya3NsYXRlYmx1ZTogXCI0ODNkOGJcIixcbiAgICBkYXJrc2xhdGVncmF5OiBcIjJmNGY0ZlwiLFxuICAgIGRhcmtzbGF0ZWdyZXk6IFwiMmY0ZjRmXCIsXG4gICAgZGFya3R1cnF1b2lzZTogXCIwMGNlZDFcIixcbiAgICBkYXJrdmlvbGV0OiBcIjk0MDBkM1wiLFxuICAgIGRlZXBwaW5rOiBcImZmMTQ5M1wiLFxuICAgIGRlZXBza3libHVlOiBcIjAwYmZmZlwiLFxuICAgIGRpbWdyYXk6IFwiNjk2OTY5XCIsXG4gICAgZGltZ3JleTogXCI2OTY5NjlcIixcbiAgICBkb2RnZXJibHVlOiBcIjFlOTBmZlwiLFxuICAgIGZpcmVicmljazogXCJiMjIyMjJcIixcbiAgICBmbG9yYWx3aGl0ZTogXCJmZmZhZjBcIixcbiAgICBmb3Jlc3RncmVlbjogXCIyMjhiMjJcIixcbiAgICBmdWNoc2lhOiBcImYwZlwiLFxuICAgIGdhaW5zYm9ybzogXCJkY2RjZGNcIixcbiAgICBnaG9zdHdoaXRlOiBcImY4ZjhmZlwiLFxuICAgIGdvbGQ6IFwiZmZkNzAwXCIsXG4gICAgZ29sZGVucm9kOiBcImRhYTUyMFwiLFxuICAgIGdyYXk6IFwiODA4MDgwXCIsXG4gICAgZ3JlZW46IFwiMDA4MDAwXCIsXG4gICAgZ3JlZW55ZWxsb3c6IFwiYWRmZjJmXCIsXG4gICAgZ3JleTogXCI4MDgwODBcIixcbiAgICBob25leWRldzogXCJmMGZmZjBcIixcbiAgICBob3RwaW5rOiBcImZmNjliNFwiLFxuICAgIGluZGlhbnJlZDogXCJjZDVjNWNcIixcbiAgICBpbmRpZ286IFwiNGIwMDgyXCIsXG4gICAgaXZvcnk6IFwiZmZmZmYwXCIsXG4gICAga2hha2k6IFwiZjBlNjhjXCIsXG4gICAgbGF2ZW5kZXI6IFwiZTZlNmZhXCIsXG4gICAgbGF2ZW5kZXJibHVzaDogXCJmZmYwZjVcIixcbiAgICBsYXduZ3JlZW46IFwiN2NmYzAwXCIsXG4gICAgbGVtb25jaGlmZm9uOiBcImZmZmFjZFwiLFxuICAgIGxpZ2h0Ymx1ZTogXCJhZGQ4ZTZcIixcbiAgICBsaWdodGNvcmFsOiBcImYwODA4MFwiLFxuICAgIGxpZ2h0Y3lhbjogXCJlMGZmZmZcIixcbiAgICBsaWdodGdvbGRlbnJvZHllbGxvdzogXCJmYWZhZDJcIixcbiAgICBsaWdodGdyYXk6IFwiZDNkM2QzXCIsXG4gICAgbGlnaHRncmVlbjogXCI5MGVlOTBcIixcbiAgICBsaWdodGdyZXk6IFwiZDNkM2QzXCIsXG4gICAgbGlnaHRwaW5rOiBcImZmYjZjMVwiLFxuICAgIGxpZ2h0c2FsbW9uOiBcImZmYTA3YVwiLFxuICAgIGxpZ2h0c2VhZ3JlZW46IFwiMjBiMmFhXCIsXG4gICAgbGlnaHRza3libHVlOiBcIjg3Y2VmYVwiLFxuICAgIGxpZ2h0c2xhdGVncmF5OiBcIjc4OVwiLFxuICAgIGxpZ2h0c2xhdGVncmV5OiBcIjc4OVwiLFxuICAgIGxpZ2h0c3RlZWxibHVlOiBcImIwYzRkZVwiLFxuICAgIGxpZ2h0eWVsbG93OiBcImZmZmZlMFwiLFxuICAgIGxpbWU6IFwiMGYwXCIsXG4gICAgbGltZWdyZWVuOiBcIjMyY2QzMlwiLFxuICAgIGxpbmVuOiBcImZhZjBlNlwiLFxuICAgIG1hZ2VudGE6IFwiZjBmXCIsXG4gICAgbWFyb29uOiBcIjgwMDAwMFwiLFxuICAgIG1lZGl1bWFxdWFtYXJpbmU6IFwiNjZjZGFhXCIsXG4gICAgbWVkaXVtYmx1ZTogXCIwMDAwY2RcIixcbiAgICBtZWRpdW1vcmNoaWQ6IFwiYmE1NWQzXCIsXG4gICAgbWVkaXVtcHVycGxlOiBcIjkzNzBkYlwiLFxuICAgIG1lZGl1bXNlYWdyZWVuOiBcIjNjYjM3MVwiLFxuICAgIG1lZGl1bXNsYXRlYmx1ZTogXCI3YjY4ZWVcIixcbiAgICBtZWRpdW1zcHJpbmdncmVlbjogXCIwMGZhOWFcIixcbiAgICBtZWRpdW10dXJxdW9pc2U6IFwiNDhkMWNjXCIsXG4gICAgbWVkaXVtdmlvbGV0cmVkOiBcImM3MTU4NVwiLFxuICAgIG1pZG5pZ2h0Ymx1ZTogXCIxOTE5NzBcIixcbiAgICBtaW50Y3JlYW06IFwiZjVmZmZhXCIsXG4gICAgbWlzdHlyb3NlOiBcImZmZTRlMVwiLFxuICAgIG1vY2Nhc2luOiBcImZmZTRiNVwiLFxuICAgIG5hdmFqb3doaXRlOiBcImZmZGVhZFwiLFxuICAgIG5hdnk6IFwiMDAwMDgwXCIsXG4gICAgb2xkbGFjZTogXCJmZGY1ZTZcIixcbiAgICBvbGl2ZTogXCI4MDgwMDBcIixcbiAgICBvbGl2ZWRyYWI6IFwiNmI4ZTIzXCIsXG4gICAgb3JhbmdlOiBcImZmYTUwMFwiLFxuICAgIG9yYW5nZXJlZDogXCJmZjQ1MDBcIixcbiAgICBvcmNoaWQ6IFwiZGE3MGQ2XCIsXG4gICAgcGFsZWdvbGRlbnJvZDogXCJlZWU4YWFcIixcbiAgICBwYWxlZ3JlZW46IFwiOThmYjk4XCIsXG4gICAgcGFsZXR1cnF1b2lzZTogXCJhZmVlZWVcIixcbiAgICBwYWxldmlvbGV0cmVkOiBcImRiNzA5M1wiLFxuICAgIHBhcGF5YXdoaXA6IFwiZmZlZmQ1XCIsXG4gICAgcGVhY2hwdWZmOiBcImZmZGFiOVwiLFxuICAgIHBlcnU6IFwiY2Q4NTNmXCIsXG4gICAgcGluazogXCJmZmMwY2JcIixcbiAgICBwbHVtOiBcImRkYTBkZFwiLFxuICAgIHBvd2RlcmJsdWU6IFwiYjBlMGU2XCIsXG4gICAgcHVycGxlOiBcIjgwMDA4MFwiLFxuICAgIHJlYmVjY2FwdXJwbGU6IFwiNjYzMzk5XCIsXG4gICAgcmVkOiBcImYwMFwiLFxuICAgIHJvc3licm93bjogXCJiYzhmOGZcIixcbiAgICByb3lhbGJsdWU6IFwiNDE2OWUxXCIsXG4gICAgc2FkZGxlYnJvd246IFwiOGI0NTEzXCIsXG4gICAgc2FsbW9uOiBcImZhODA3MlwiLFxuICAgIHNhbmR5YnJvd246IFwiZjRhNDYwXCIsXG4gICAgc2VhZ3JlZW46IFwiMmU4YjU3XCIsXG4gICAgc2Vhc2hlbGw6IFwiZmZmNWVlXCIsXG4gICAgc2llbm5hOiBcImEwNTIyZFwiLFxuICAgIHNpbHZlcjogXCJjMGMwYzBcIixcbiAgICBza3libHVlOiBcIjg3Y2VlYlwiLFxuICAgIHNsYXRlYmx1ZTogXCI2YTVhY2RcIixcbiAgICBzbGF0ZWdyYXk6IFwiNzA4MDkwXCIsXG4gICAgc2xhdGVncmV5OiBcIjcwODA5MFwiLFxuICAgIHNub3c6IFwiZmZmYWZhXCIsXG4gICAgc3ByaW5nZ3JlZW46IFwiMDBmZjdmXCIsXG4gICAgc3RlZWxibHVlOiBcIjQ2ODJiNFwiLFxuICAgIHRhbjogXCJkMmI0OGNcIixcbiAgICB0ZWFsOiBcIjAwODA4MFwiLFxuICAgIHRoaXN0bGU6IFwiZDhiZmQ4XCIsXG4gICAgdG9tYXRvOiBcImZmNjM0N1wiLFxuICAgIHR1cnF1b2lzZTogXCI0MGUwZDBcIixcbiAgICB2aW9sZXQ6IFwiZWU4MmVlXCIsXG4gICAgd2hlYXQ6IFwiZjVkZWIzXCIsXG4gICAgd2hpdGU6IFwiZmZmXCIsXG4gICAgd2hpdGVzbW9rZTogXCJmNWY1ZjVcIixcbiAgICB5ZWxsb3c6IFwiZmYwXCIsXG4gICAgeWVsbG93Z3JlZW46IFwiOWFjZDMyXCJcbn07XG5cbi8vIE1ha2UgaXQgZWFzeSB0byBhY2Nlc3MgY29sb3JzIHZpYSBgaGV4TmFtZXNbaGV4XWBcbnZhciBoZXhOYW1lcyA9IHRpbnljb2xvci5oZXhOYW1lcyA9IGZsaXAobmFtZXMpO1xuXG5cbi8vIFV0aWxpdGllc1xuLy8gLS0tLS0tLS0tXG5cbi8vIGB7ICduYW1lMSc6ICd2YWwxJyB9YCBiZWNvbWVzIGB7ICd2YWwxJzogJ25hbWUxJyB9YFxuZnVuY3Rpb24gZmxpcChvKSB7XG4gICAgdmFyIGZsaXBwZWQgPSB7IH07XG4gICAgZm9yICh2YXIgaSBpbiBvKSB7XG4gICAgICAgIGlmIChvLmhhc093blByb3BlcnR5KGkpKSB7XG4gICAgICAgICAgICBmbGlwcGVkW29baV1dID0gaTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmxpcHBlZDtcbn1cblxuLy8gUmV0dXJuIGEgdmFsaWQgYWxwaGEgdmFsdWUgWzAsMV0gd2l0aCBhbGwgaW52YWxpZCB2YWx1ZXMgYmVpbmcgc2V0IHRvIDFcbmZ1bmN0aW9uIGJvdW5kQWxwaGEoYSkge1xuICAgIGEgPSBwYXJzZUZsb2F0KGEpO1xuXG4gICAgaWYgKGlzTmFOKGEpIHx8IGEgPCAwIHx8IGEgPiAxKSB7XG4gICAgICAgIGEgPSAxO1xuICAgIH1cblxuICAgIHJldHVybiBhO1xufVxuXG4vLyBUYWtlIGlucHV0IGZyb20gWzAsIG5dIGFuZCByZXR1cm4gaXQgYXMgWzAsIDFdXG5mdW5jdGlvbiBib3VuZDAxKG4sIG1heCkge1xuICAgIGlmIChpc09uZVBvaW50WmVybyhuKSkgeyBuID0gXCIxMDAlXCI7IH1cblxuICAgIHZhciBwcm9jZXNzUGVyY2VudCA9IGlzUGVyY2VudGFnZShuKTtcbiAgICBuID0gbWF0aE1pbihtYXgsIG1hdGhNYXgoMCwgcGFyc2VGbG9hdChuKSkpO1xuXG4gICAgLy8gQXV0b21hdGljYWxseSBjb252ZXJ0IHBlcmNlbnRhZ2UgaW50byBudW1iZXJcbiAgICBpZiAocHJvY2Vzc1BlcmNlbnQpIHtcbiAgICAgICAgbiA9IHBhcnNlSW50KG4gKiBtYXgsIDEwKSAvIDEwMDtcbiAgICB9XG5cbiAgICAvLyBIYW5kbGUgZmxvYXRpbmcgcG9pbnQgcm91bmRpbmcgZXJyb3JzXG4gICAgaWYgKChNYXRoLmFicyhuIC0gbWF4KSA8IDAuMDAwMDAxKSkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9XG5cbiAgICAvLyBDb252ZXJ0IGludG8gWzAsIDFdIHJhbmdlIGlmIGl0IGlzbid0IGFscmVhZHlcbiAgICByZXR1cm4gKG4gJSBtYXgpIC8gcGFyc2VGbG9hdChtYXgpO1xufVxuXG4vLyBGb3JjZSBhIG51bWJlciBiZXR3ZWVuIDAgYW5kIDFcbmZ1bmN0aW9uIGNsYW1wMDEodmFsKSB7XG4gICAgcmV0dXJuIG1hdGhNaW4oMSwgbWF0aE1heCgwLCB2YWwpKTtcbn1cblxuLy8gUGFyc2UgYSBiYXNlLTE2IGhleCB2YWx1ZSBpbnRvIGEgYmFzZS0xMCBpbnRlZ2VyXG5mdW5jdGlvbiBwYXJzZUludEZyb21IZXgodmFsKSB7XG4gICAgcmV0dXJuIHBhcnNlSW50KHZhbCwgMTYpO1xufVxuXG4vLyBOZWVkIHRvIGhhbmRsZSAxLjAgYXMgMTAwJSwgc2luY2Ugb25jZSBpdCBpcyBhIG51bWJlciwgdGhlcmUgaXMgbm8gZGlmZmVyZW5jZSBiZXR3ZWVuIGl0IGFuZCAxXG4vLyA8aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy83NDIyMDcyL2phdmFzY3JpcHQtaG93LXRvLWRldGVjdC1udW1iZXItYXMtYS1kZWNpbWFsLWluY2x1ZGluZy0xLTA+XG5mdW5jdGlvbiBpc09uZVBvaW50WmVybyhuKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBuID09IFwic3RyaW5nXCIgJiYgbi5pbmRleE9mKCcuJykgIT0gLTEgJiYgcGFyc2VGbG9hdChuKSA9PT0gMTtcbn1cblxuLy8gQ2hlY2sgdG8gc2VlIGlmIHN0cmluZyBwYXNzZWQgaW4gaXMgYSBwZXJjZW50YWdlXG5mdW5jdGlvbiBpc1BlcmNlbnRhZ2Uobikge1xuICAgIHJldHVybiB0eXBlb2YgbiA9PT0gXCJzdHJpbmdcIiAmJiBuLmluZGV4T2YoJyUnKSAhPSAtMTtcbn1cblxuLy8gRm9yY2UgYSBoZXggdmFsdWUgdG8gaGF2ZSAyIGNoYXJhY3RlcnNcbmZ1bmN0aW9uIHBhZDIoYykge1xuICAgIHJldHVybiBjLmxlbmd0aCA9PSAxID8gJzAnICsgYyA6ICcnICsgYztcbn1cblxuLy8gUmVwbGFjZSBhIGRlY2ltYWwgd2l0aCBpdCdzIHBlcmNlbnRhZ2UgdmFsdWVcbmZ1bmN0aW9uIGNvbnZlcnRUb1BlcmNlbnRhZ2Uobikge1xuICAgIGlmIChuIDw9IDEpIHtcbiAgICAgICAgbiA9IChuICogMTAwKSArIFwiJVwiO1xuICAgIH1cblxuICAgIHJldHVybiBuO1xufVxuXG4vLyBDb252ZXJ0cyBhIGRlY2ltYWwgdG8gYSBoZXggdmFsdWVcbmZ1bmN0aW9uIGNvbnZlcnREZWNpbWFsVG9IZXgoZCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKHBhcnNlRmxvYXQoZCkgKiAyNTUpLnRvU3RyaW5nKDE2KTtcbn1cbi8vIENvbnZlcnRzIGEgaGV4IHZhbHVlIHRvIGEgZGVjaW1hbFxuZnVuY3Rpb24gY29udmVydEhleFRvRGVjaW1hbChoKSB7XG4gICAgcmV0dXJuIChwYXJzZUludEZyb21IZXgoaCkgLyAyNTUpO1xufVxuXG52YXIgbWF0Y2hlcnMgPSAoZnVuY3Rpb24oKSB7XG5cbiAgICAvLyA8aHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy12YWx1ZXMvI2ludGVnZXJzPlxuICAgIHZhciBDU1NfSU5URUdFUiA9IFwiWy1cXFxcK10/XFxcXGQrJT9cIjtcblxuICAgIC8vIDxodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLXZhbHVlcy8jbnVtYmVyLXZhbHVlPlxuICAgIHZhciBDU1NfTlVNQkVSID0gXCJbLVxcXFwrXT9cXFxcZCpcXFxcLlxcXFxkKyU/XCI7XG5cbiAgICAvLyBBbGxvdyBwb3NpdGl2ZS9uZWdhdGl2ZSBpbnRlZ2VyL251bWJlci4gIERvbid0IGNhcHR1cmUgdGhlIGVpdGhlci9vciwganVzdCB0aGUgZW50aXJlIG91dGNvbWUuXG4gICAgdmFyIENTU19VTklUID0gXCIoPzpcIiArIENTU19OVU1CRVIgKyBcIil8KD86XCIgKyBDU1NfSU5URUdFUiArIFwiKVwiO1xuXG4gICAgLy8gQWN0dWFsIG1hdGNoaW5nLlxuICAgIC8vIFBhcmVudGhlc2VzIGFuZCBjb21tYXMgYXJlIG9wdGlvbmFsLCBidXQgbm90IHJlcXVpcmVkLlxuICAgIC8vIFdoaXRlc3BhY2UgY2FuIHRha2UgdGhlIHBsYWNlIG9mIGNvbW1hcyBvciBvcGVuaW5nIHBhcmVuXG4gICAgdmFyIFBFUk1JU1NJVkVfTUFUQ0gzID0gXCJbXFxcXHN8XFxcXChdKyhcIiArIENTU19VTklUICsgXCIpWyx8XFxcXHNdKyhcIiArIENTU19VTklUICsgXCIpWyx8XFxcXHNdKyhcIiArIENTU19VTklUICsgXCIpXFxcXHMqXFxcXCk/XCI7XG4gICAgdmFyIFBFUk1JU1NJVkVfTUFUQ0g0ID0gXCJbXFxcXHN8XFxcXChdKyhcIiArIENTU19VTklUICsgXCIpWyx8XFxcXHNdKyhcIiArIENTU19VTklUICsgXCIpWyx8XFxcXHNdKyhcIiArIENTU19VTklUICsgXCIpWyx8XFxcXHNdKyhcIiArIENTU19VTklUICsgXCIpXFxcXHMqXFxcXCk/XCI7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBDU1NfVU5JVDogbmV3IFJlZ0V4cChDU1NfVU5JVCksXG4gICAgICAgIHJnYjogbmV3IFJlZ0V4cChcInJnYlwiICsgUEVSTUlTU0lWRV9NQVRDSDMpLFxuICAgICAgICByZ2JhOiBuZXcgUmVnRXhwKFwicmdiYVwiICsgUEVSTUlTU0lWRV9NQVRDSDQpLFxuICAgICAgICBoc2w6IG5ldyBSZWdFeHAoXCJoc2xcIiArIFBFUk1JU1NJVkVfTUFUQ0gzKSxcbiAgICAgICAgaHNsYTogbmV3IFJlZ0V4cChcImhzbGFcIiArIFBFUk1JU1NJVkVfTUFUQ0g0KSxcbiAgICAgICAgaHN2OiBuZXcgUmVnRXhwKFwiaHN2XCIgKyBQRVJNSVNTSVZFX01BVENIMyksXG4gICAgICAgIGhzdmE6IG5ldyBSZWdFeHAoXCJoc3ZhXCIgKyBQRVJNSVNTSVZFX01BVENINCksXG4gICAgICAgIGhleDM6IC9eIz8oWzAtOWEtZkEtRl17MX0pKFswLTlhLWZBLUZdezF9KShbMC05YS1mQS1GXXsxfSkkLyxcbiAgICAgICAgaGV4NjogL14jPyhbMC05YS1mQS1GXXsyfSkoWzAtOWEtZkEtRl17Mn0pKFswLTlhLWZBLUZdezJ9KSQvLFxuICAgICAgICBoZXg0OiAvXiM/KFswLTlhLWZBLUZdezF9KShbMC05YS1mQS1GXXsxfSkoWzAtOWEtZkEtRl17MX0pKFswLTlhLWZBLUZdezF9KSQvLFxuICAgICAgICBoZXg4OiAvXiM/KFswLTlhLWZBLUZdezJ9KShbMC05YS1mQS1GXXsyfSkoWzAtOWEtZkEtRl17Mn0pKFswLTlhLWZBLUZdezJ9KSQvXG4gICAgfTtcbn0pKCk7XG5cbi8vIGBpc1ZhbGlkQ1NTVW5pdGBcbi8vIFRha2UgaW4gYSBzaW5nbGUgc3RyaW5nIC8gbnVtYmVyIGFuZCBjaGVjayB0byBzZWUgaWYgaXQgbG9va3MgbGlrZSBhIENTUyB1bml0XG4vLyAoc2VlIGBtYXRjaGVyc2AgYWJvdmUgZm9yIGRlZmluaXRpb24pLlxuZnVuY3Rpb24gaXNWYWxpZENTU1VuaXQoY29sb3IpIHtcbiAgICByZXR1cm4gISFtYXRjaGVycy5DU1NfVU5JVC5leGVjKGNvbG9yKTtcbn1cblxuLy8gYHN0cmluZ0lucHV0VG9PYmplY3RgXG4vLyBQZXJtaXNzaXZlIHN0cmluZyBwYXJzaW5nLiAgVGFrZSBpbiBhIG51bWJlciBvZiBmb3JtYXRzLCBhbmQgb3V0cHV0IGFuIG9iamVjdFxuLy8gYmFzZWQgb24gZGV0ZWN0ZWQgZm9ybWF0LiAgUmV0dXJucyBgeyByLCBnLCBiIH1gIG9yIGB7IGgsIHMsIGwgfWAgb3IgYHsgaCwgcywgdn1gXG5mdW5jdGlvbiBzdHJpbmdJbnB1dFRvT2JqZWN0KGNvbG9yKSB7XG5cbiAgICBjb2xvciA9IGNvbG9yLnJlcGxhY2UodHJpbUxlZnQsJycpLnJlcGxhY2UodHJpbVJpZ2h0LCAnJykudG9Mb3dlckNhc2UoKTtcbiAgICB2YXIgbmFtZWQgPSBmYWxzZTtcbiAgICBpZiAobmFtZXNbY29sb3JdKSB7XG4gICAgICAgIGNvbG9yID0gbmFtZXNbY29sb3JdO1xuICAgICAgICBuYW1lZCA9IHRydWU7XG4gICAgfVxuICAgIGVsc2UgaWYgKGNvbG9yID09ICd0cmFuc3BhcmVudCcpIHtcbiAgICAgICAgcmV0dXJuIHsgcjogMCwgZzogMCwgYjogMCwgYTogMCwgZm9ybWF0OiBcIm5hbWVcIiB9O1xuICAgIH1cblxuICAgIC8vIFRyeSB0byBtYXRjaCBzdHJpbmcgaW5wdXQgdXNpbmcgcmVndWxhciBleHByZXNzaW9ucy5cbiAgICAvLyBLZWVwIG1vc3Qgb2YgdGhlIG51bWJlciBib3VuZGluZyBvdXQgb2YgdGhpcyBmdW5jdGlvbiAtIGRvbid0IHdvcnJ5IGFib3V0IFswLDFdIG9yIFswLDEwMF0gb3IgWzAsMzYwXVxuICAgIC8vIEp1c3QgcmV0dXJuIGFuIG9iamVjdCBhbmQgbGV0IHRoZSBjb252ZXJzaW9uIGZ1bmN0aW9ucyBoYW5kbGUgdGhhdC5cbiAgICAvLyBUaGlzIHdheSB0aGUgcmVzdWx0IHdpbGwgYmUgdGhlIHNhbWUgd2hldGhlciB0aGUgdGlueWNvbG9yIGlzIGluaXRpYWxpemVkIHdpdGggc3RyaW5nIG9yIG9iamVjdC5cbiAgICB2YXIgbWF0Y2g7XG4gICAgaWYgKChtYXRjaCA9IG1hdGNoZXJzLnJnYi5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgcmV0dXJuIHsgcjogbWF0Y2hbMV0sIGc6IG1hdGNoWzJdLCBiOiBtYXRjaFszXSB9O1xuICAgIH1cbiAgICBpZiAoKG1hdGNoID0gbWF0Y2hlcnMucmdiYS5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgcmV0dXJuIHsgcjogbWF0Y2hbMV0sIGc6IG1hdGNoWzJdLCBiOiBtYXRjaFszXSwgYTogbWF0Y2hbNF0gfTtcbiAgICB9XG4gICAgaWYgKChtYXRjaCA9IG1hdGNoZXJzLmhzbC5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgcmV0dXJuIHsgaDogbWF0Y2hbMV0sIHM6IG1hdGNoWzJdLCBsOiBtYXRjaFszXSB9O1xuICAgIH1cbiAgICBpZiAoKG1hdGNoID0gbWF0Y2hlcnMuaHNsYS5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgcmV0dXJuIHsgaDogbWF0Y2hbMV0sIHM6IG1hdGNoWzJdLCBsOiBtYXRjaFszXSwgYTogbWF0Y2hbNF0gfTtcbiAgICB9XG4gICAgaWYgKChtYXRjaCA9IG1hdGNoZXJzLmhzdi5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgcmV0dXJuIHsgaDogbWF0Y2hbMV0sIHM6IG1hdGNoWzJdLCB2OiBtYXRjaFszXSB9O1xuICAgIH1cbiAgICBpZiAoKG1hdGNoID0gbWF0Y2hlcnMuaHN2YS5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgcmV0dXJuIHsgaDogbWF0Y2hbMV0sIHM6IG1hdGNoWzJdLCB2OiBtYXRjaFszXSwgYTogbWF0Y2hbNF0gfTtcbiAgICB9XG4gICAgaWYgKChtYXRjaCA9IG1hdGNoZXJzLmhleDguZXhlYyhjb2xvcikpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByOiBwYXJzZUludEZyb21IZXgobWF0Y2hbMV0pLFxuICAgICAgICAgICAgZzogcGFyc2VJbnRGcm9tSGV4KG1hdGNoWzJdKSxcbiAgICAgICAgICAgIGI6IHBhcnNlSW50RnJvbUhleChtYXRjaFszXSksXG4gICAgICAgICAgICBhOiBjb252ZXJ0SGV4VG9EZWNpbWFsKG1hdGNoWzRdKSxcbiAgICAgICAgICAgIGZvcm1hdDogbmFtZWQgPyBcIm5hbWVcIiA6IFwiaGV4OFwiXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmICgobWF0Y2ggPSBtYXRjaGVycy5oZXg2LmV4ZWMoY29sb3IpKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcjogcGFyc2VJbnRGcm9tSGV4KG1hdGNoWzFdKSxcbiAgICAgICAgICAgIGc6IHBhcnNlSW50RnJvbUhleChtYXRjaFsyXSksXG4gICAgICAgICAgICBiOiBwYXJzZUludEZyb21IZXgobWF0Y2hbM10pLFxuICAgICAgICAgICAgZm9ybWF0OiBuYW1lZCA/IFwibmFtZVwiIDogXCJoZXhcIlxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoKG1hdGNoID0gbWF0Y2hlcnMuaGV4NC5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHI6IHBhcnNlSW50RnJvbUhleChtYXRjaFsxXSArICcnICsgbWF0Y2hbMV0pLFxuICAgICAgICAgICAgZzogcGFyc2VJbnRGcm9tSGV4KG1hdGNoWzJdICsgJycgKyBtYXRjaFsyXSksXG4gICAgICAgICAgICBiOiBwYXJzZUludEZyb21IZXgobWF0Y2hbM10gKyAnJyArIG1hdGNoWzNdKSxcbiAgICAgICAgICAgIGE6IGNvbnZlcnRIZXhUb0RlY2ltYWwobWF0Y2hbNF0gKyAnJyArIG1hdGNoWzRdKSxcbiAgICAgICAgICAgIGZvcm1hdDogbmFtZWQgPyBcIm5hbWVcIiA6IFwiaGV4OFwiXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmICgobWF0Y2ggPSBtYXRjaGVycy5oZXgzLmV4ZWMoY29sb3IpKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcjogcGFyc2VJbnRGcm9tSGV4KG1hdGNoWzFdICsgJycgKyBtYXRjaFsxXSksXG4gICAgICAgICAgICBnOiBwYXJzZUludEZyb21IZXgobWF0Y2hbMl0gKyAnJyArIG1hdGNoWzJdKSxcbiAgICAgICAgICAgIGI6IHBhcnNlSW50RnJvbUhleChtYXRjaFszXSArICcnICsgbWF0Y2hbM10pLFxuICAgICAgICAgICAgZm9ybWF0OiBuYW1lZCA/IFwibmFtZVwiIDogXCJoZXhcIlxuICAgICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVXQ0FHMlBhcm1zKHBhcm1zKSB7XG4gICAgLy8gcmV0dXJuIHZhbGlkIFdDQUcyIHBhcm1zIGZvciBpc1JlYWRhYmxlLlxuICAgIC8vIElmIGlucHV0IHBhcm1zIGFyZSBpbnZhbGlkLCByZXR1cm4ge1wibGV2ZWxcIjpcIkFBXCIsIFwic2l6ZVwiOlwic21hbGxcIn1cbiAgICB2YXIgbGV2ZWwsIHNpemU7XG4gICAgcGFybXMgPSBwYXJtcyB8fCB7XCJsZXZlbFwiOlwiQUFcIiwgXCJzaXplXCI6XCJzbWFsbFwifTtcbiAgICBsZXZlbCA9IChwYXJtcy5sZXZlbCB8fCBcIkFBXCIpLnRvVXBwZXJDYXNlKCk7XG4gICAgc2l6ZSA9IChwYXJtcy5zaXplIHx8IFwic21hbGxcIikudG9Mb3dlckNhc2UoKTtcbiAgICBpZiAobGV2ZWwgIT09IFwiQUFcIiAmJiBsZXZlbCAhPT0gXCJBQUFcIikge1xuICAgICAgICBsZXZlbCA9IFwiQUFcIjtcbiAgICB9XG4gICAgaWYgKHNpemUgIT09IFwic21hbGxcIiAmJiBzaXplICE9PSBcImxhcmdlXCIpIHtcbiAgICAgICAgc2l6ZSA9IFwic21hbGxcIjtcbiAgICB9XG4gICAgcmV0dXJuIHtcImxldmVsXCI6bGV2ZWwsIFwic2l6ZVwiOnNpemV9O1xufVxuXG4vLyBOb2RlOiBFeHBvcnQgZnVuY3Rpb25cbmlmICh0eXBlb2YgbW9kdWxlICE9PSBcInVuZGVmaW5lZFwiICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSB0aW55Y29sb3I7XG59XG4vLyBBTUQvcmVxdWlyZWpzOiBEZWZpbmUgdGhlIG1vZHVsZVxuZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKGZ1bmN0aW9uICgpIHtyZXR1cm4gdGlueWNvbG9yO30pO1xufVxuLy8gQnJvd3NlcjogRXhwb3NlIHRvIHdpbmRvd1xuZWxzZSB7XG4gICAgd2luZG93LnRpbnljb2xvciA9IHRpbnljb2xvcjtcbn1cblxufSkoTWF0aCk7XG4iLCJ2YXIgX3R5cGVvZiA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3R5cGVvZlwiKTtcblxudmFyIGFzc2VydFRoaXNJbml0aWFsaXplZCA9IHJlcXVpcmUoXCIuL2Fzc2VydFRoaXNJbml0aWFsaXplZFwiKTtcblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkge1xuICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkge1xuICAgIHJldHVybiBjYWxsO1xuICB9XG5cbiAgcmV0dXJuIGFzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjsiLCJmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkge1xuICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gIGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7XG5cbiAgdHJ5IHtcbiAgICBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdDsiLCIvKiBnbG9iYWwgd2luZG93ICovXG5pbXBvcnQgcG9ueWZpbGwgZnJvbSAnLi9wb255ZmlsbC5qcyc7XG5cbnZhciByb290O1xuXG5pZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBzZWxmO1xufSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gd2luZG93O1xufSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gZ2xvYmFsO1xufSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gbW9kdWxlO1xufSBlbHNlIHtcbiAgcm9vdCA9IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG59XG5cbnZhciByZXN1bHQgPSBwb255ZmlsbChyb290KTtcbmV4cG9ydCBkZWZhdWx0IHJlc3VsdDtcbiIsImZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICAgICAgcmV0dXJuIHR5cGVvZiBvYmo7XG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICAgICAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBfdHlwZW9mKG9iaik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX3R5cGVvZjsiLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanMhLi4vLi4vLi4vY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS02LTMhLi9pbmRleC5sZXNzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMud2FybmluZyA9IHdhcm5pbmc7XG5leHBvcnRzLm5vdGUgPSBub3RlO1xuZXhwb3J0cy5yZXNldFdhcm5lZCA9IHJlc2V0V2FybmVkO1xuZXhwb3J0cy5jYWxsID0gY2FsbDtcbmV4cG9ydHMud2FybmluZ09uY2UgPSB3YXJuaW5nT25jZTtcbmV4cG9ydHMubm90ZU9uY2UgPSBub3RlT25jZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxuLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xudmFyIHdhcm5lZCA9IHt9O1xuXG5mdW5jdGlvbiB3YXJuaW5nKHZhbGlkLCBtZXNzYWdlKSB7XG4gIC8vIFN1cHBvcnQgdWdsaWZ5XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICF2YWxpZCAmJiBjb25zb2xlICE9PSB1bmRlZmluZWQpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiV2FybmluZzogXCIuY29uY2F0KG1lc3NhZ2UpKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBub3RlKHZhbGlkLCBtZXNzYWdlKSB7XG4gIC8vIFN1cHBvcnQgdWdsaWZ5XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmICF2YWxpZCAmJiBjb25zb2xlICE9PSB1bmRlZmluZWQpIHtcbiAgICBjb25zb2xlLndhcm4oXCJOb3RlOiBcIi5jb25jYXQobWVzc2FnZSkpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlc2V0V2FybmVkKCkge1xuICB3YXJuZWQgPSB7fTtcbn1cblxuZnVuY3Rpb24gY2FsbChtZXRob2QsIHZhbGlkLCBtZXNzYWdlKSB7XG4gIGlmICghdmFsaWQgJiYgIXdhcm5lZFttZXNzYWdlXSkge1xuICAgIG1ldGhvZChmYWxzZSwgbWVzc2FnZSk7XG4gICAgd2FybmVkW21lc3NhZ2VdID0gdHJ1ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiB3YXJuaW5nT25jZSh2YWxpZCwgbWVzc2FnZSkge1xuICBjYWxsKHdhcm5pbmcsIHZhbGlkLCBtZXNzYWdlKTtcbn1cblxuZnVuY3Rpb24gbm90ZU9uY2UodmFsaWQsIG1lc3NhZ2UpIHtcbiAgY2FsbChub3RlLCB2YWxpZCwgbWVzc2FnZSk7XG59XG5cbnZhciBfZGVmYXVsdCA9IHdhcm5pbmdPbmNlO1xuLyogZXNsaW50LWVuYWJsZSAqL1xuXG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59IiwiJ3VzZSBzdHJpY3QnO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxuICB9KTtcbiAgZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuICBcbiAgdmFyIF9SaWdodE91dGxpbmVkID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCcuL2xpYi9pY29ucy9SaWdodE91dGxpbmVkJykpO1xuICBcbiAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuICBcbiAgdmFyIF9kZWZhdWx0ID0gX1JpZ2h0T3V0bGluZWQ7XG4gIGV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xuICBtb2R1bGUuZXhwb3J0cyA9IF9kZWZhdWx0OyIsIiFmdW5jdGlvbihlLHQpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPXQoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKHQpOmUuZGF5anNfcGx1Z2luX3dlZWtkYXk9dCgpfSh0aGlzLGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7dC5wcm90b3R5cGUud2Vla2RheT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLiRsb2NhbGUoKS53ZWVrU3RhcnR8fDAsbj10aGlzLiRXLGk9KG48dD9uKzc6biktdDtyZXR1cm4gdGhpcy4kdXRpbHMoKS51KGUpP2k6dGhpcy5zdWJ0cmFjdChpLFwiZGF5XCIpLmFkZChlLFwiZGF5XCIpfX19KTtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIiFmdW5jdGlvbihlLHQpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPXQoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKHQpOmUuZGF5anNfcGx1Z2luX2FkdmFuY2VkRm9ybWF0PXQoKX0odGhpcyxmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO3JldHVybiBmdW5jdGlvbihlLHQscil7dmFyIG49dC5wcm90b3R5cGUsbz1uLmZvcm1hdDtyLmVuLm9yZGluYWw9ZnVuY3Rpb24oZSl7dmFyIHQ9W1widGhcIixcInN0XCIsXCJuZFwiLFwicmRcIl0scj1lJTEwMDtyZXR1cm5cIltcIitlKyh0WyhyLTIwKSUxMF18fHRbcl18fHRbMF0pK1wiXVwifSxuLmZvcm1hdD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLHI9dGhpcy4kbG9jYWxlKCksbj10aGlzLiR1dGlscygpLGE9KGV8fFwiWVlZWS1NTS1ERFRISDptbTpzc1pcIikucmVwbGFjZSgvXFxbKFteXFxdXSspXXxRfHdvfHd3fHd8Z2dnZ3xEb3xYfHh8a3sxLDJ9fFMvZyxmdW5jdGlvbihlKXtzd2l0Y2goZSl7Y2FzZVwiUVwiOnJldHVybiBNYXRoLmNlaWwoKHQuJE0rMSkvMyk7Y2FzZVwiRG9cIjpyZXR1cm4gci5vcmRpbmFsKHQuJEQpO2Nhc2VcImdnZ2dcIjpyZXR1cm4gdC53ZWVrWWVhcigpO2Nhc2VcIndvXCI6cmV0dXJuIHIub3JkaW5hbCh0LndlZWsoKSxcIldcIik7Y2FzZVwid1wiOmNhc2VcInd3XCI6cmV0dXJuIG4ucyh0LndlZWsoKSxcIndcIj09PWU/MToyLFwiMFwiKTtjYXNlXCJrXCI6Y2FzZVwia2tcIjpyZXR1cm4gbi5zKFN0cmluZygwPT09dC4kSD8yNDp0LiRIKSxcImtcIj09PWU/MToyLFwiMFwiKTtjYXNlXCJYXCI6cmV0dXJuIE1hdGguZmxvb3IodC4kZC5nZXRUaW1lKCkvMWUzKTtjYXNlXCJ4XCI6cmV0dXJuIHQuJGQuZ2V0VGltZSgpO2RlZmF1bHQ6cmV0dXJuIGV9fSk7cmV0dXJuIG8uYmluZCh0aGlzKShhKX19fSk7XG4iLCJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmaW5lUHJvcGVydHk7IiwiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfY2xhc3NDYWxsQ2hlY2s7IiwiZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkge1xuICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkpIHJldHVybjtcbiAgdmFyIF9hcnIgPSBbXTtcbiAgdmFyIF9uID0gdHJ1ZTtcbiAgdmFyIF9kID0gZmFsc2U7XG4gIHZhciBfZSA9IHVuZGVmaW5lZDtcblxuICB0cnkge1xuICAgIGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHtcbiAgICAgIF9hcnIucHVzaChfcy52YWx1ZSk7XG5cbiAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhaztcbiAgICB9XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIF9kID0gdHJ1ZTtcbiAgICBfZSA9IGVycjtcbiAgfSBmaW5hbGx5IHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpZiAoX2QpIHRocm93IF9lO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBfYXJyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9pdGVyYWJsZVRvQXJyYXlMaW1pdDsiLCJmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2V4dGVuZHM7IiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xuU3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6NjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtcbmZ1bmN0aW9uIHooYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiBBKGEpe3JldHVybiB6KGEpPT09bX1leHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7XG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XG5leHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXJ9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWZ9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXB9O1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxhPT09cXx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT10fHxhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14fHxhLiQkdHlwZW9mPT09eXx8YS4kJHR5cGVvZj09PXYpfTtleHBvcnRzLnR5cGVPZj16O1xuIiwiIWZ1bmN0aW9uKGUsdCl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9dCgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUodCk6ZS5kYXlqc19wbHVnaW5faXNTYW1lT3JCZWZvcmU9dCgpfSh0aGlzLGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7dC5wcm90b3R5cGUuaXNTYW1lT3JCZWZvcmU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5pc1NhbWUoZSx0KXx8dGhpcy5pc0JlZm9yZShlLHQpfX19KTtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcblxudmFyIE1BWF9TSUdORURfMzFfQklUX0lOVCA9IDEwNzM3NDE4MjM7XG52YXIgY29tbW9uanNHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWxUaGlzIDogdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IHt9O1xuXG5mdW5jdGlvbiBnZXRVbmlxdWVJZCgpIHtcbiAgdmFyIGtleSA9ICdfX2dsb2JhbF91bmlxdWVfaWRfXyc7XG4gIHJldHVybiBjb21tb25qc0dsb2JhbFtrZXldID0gKGNvbW1vbmpzR2xvYmFsW2tleV0gfHwgMCkgKyAxO1xufVxuXG5mdW5jdGlvbiBvYmplY3RJcyh4LCB5KSB7XG4gIGlmICh4ID09PSB5KSB7XG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcbiAgdmFyIF9Qcm92aWRlciRjaGlsZENvbnRleCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlO1xuXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyBnZXRVbmlxdWVJZCgpICsgJ19fJztcblxuICB2YXIgUHJvdmlkZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHNMb29zZShQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBQcm92aWRlcigpIHtcbiAgICAgIHZhciBfdGhpcztcblxuICAgICAgX3RoaXMgPSBfQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzLmVtaXR0ZXIgPSBjcmVhdGVFdmVudEVtaXR0ZXIoX3RoaXMucHJvcHMudmFsdWUpO1xuICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cblxuICAgIHZhciBfcHJvdG8gPSBQcm92aWRlci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8uZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9yZWZbY29udGV4dFByb3BdID0gdGhpcy5lbWl0dGVyLCBfcmVmO1xuICAgIH07XG5cbiAgICBfcHJvdG8uY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy52YWx1ZSAhPT0gbmV4dFByb3BzLnZhbHVlKSB7XG4gICAgICAgIHZhciBvbGRWYWx1ZSA9IHRoaXMucHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBuZXdWYWx1ZSA9IG5leHRQcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIGNoYW5nZWRCaXRzO1xuXG4gICAgICAgIGlmIChvYmplY3RJcyhvbGRWYWx1ZSwgbmV3VmFsdWUpKSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gdHlwZW9mIGNhbGN1bGF0ZUNoYW5nZWRCaXRzID09PSAnZnVuY3Rpb24nID8gY2FsY3VsYXRlQ2hhbmdlZEJpdHMob2xkVmFsdWUsIG5ld1ZhbHVlKSA6IE1BWF9TSUdORURfMzFfQklUX0lOVDtcblxuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICB3YXJuaW5nKChjaGFuZ2VkQml0cyAmIE1BWF9TSUdORURfMzFfQklUX0lOVCkgPT09IGNoYW5nZWRCaXRzLCAnY2FsY3VsYXRlQ2hhbmdlZEJpdHM6IEV4cGVjdGVkIHRoZSByZXR1cm4gdmFsdWUgdG8gYmUgYSAnICsgJzMxLWJpdCBpbnRlZ2VyLiBJbnN0ZWFkIHJlY2VpdmVkOiAnICsgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNoYW5nZWRCaXRzIHw9IDA7XG5cbiAgICAgICAgICBpZiAoY2hhbmdlZEJpdHMgIT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuZW1pdHRlci5zZXQobmV4dFByb3BzLnZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICB9O1xuXG4gICAgcmV0dXJuIFByb3ZpZGVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgUHJvdmlkZXIuY2hpbGRDb250ZXh0VHlwZXMgPSAoX1Byb3ZpZGVyJGNoaWxkQ29udGV4ID0ge30sIF9Qcm92aWRlciRjaGlsZENvbnRleFtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsIF9Qcm92aWRlciRjaGlsZENvbnRleCk7XG5cbiAgdmFyIENvbnN1bWVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICAgIF9pbmhlcml0c0xvb3NlKENvbnN1bWVyLCBfQ29tcG9uZW50Mik7XG5cbiAgICBmdW5jdGlvbiBDb25zdW1lcigpIHtcbiAgICAgIHZhciBfdGhpczI7XG5cbiAgICAgIF90aGlzMiA9IF9Db21wb25lbnQyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgIF90aGlzMi5zdGF0ZSA9IHtcbiAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICB9O1xuXG4gICAgICBfdGhpczIub25VcGRhdGUgPSBmdW5jdGlvbiAobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBfdGhpczIub2JzZXJ2ZWRCaXRzIHwgMDtcblxuICAgICAgICBpZiAoKG9ic2VydmVkQml0cyAmIGNoYW5nZWRCaXRzKSAhPT0gMCkge1xuICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIF90aGlzMjtcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvMiA9IENvbnN1bWVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9uKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuXG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vZmYodGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIuZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gb25seUNoaWxkKHRoaXMucHJvcHMuY2hpbGRyZW4pKHRoaXMuc3RhdGUudmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29uc3VtZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBDb25zdW1lci5jb250ZXh0VHlwZXMgPSAoX0NvbnN1bWVyJGNvbnRleHRUeXBlID0ge30sIF9Db25zdW1lciRjb250ZXh0VHlwZVtjb250ZXh0UHJvcF0gPSBQcm9wVHlwZXMub2JqZWN0LCBfQ29uc3VtZXIkY29udGV4dFR5cGUpO1xuICByZXR1cm4ge1xuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcbiAgICBDb25zdW1lcjogQ29uc3VtZXJcbiAgfTtcbn1cblxudmFyIGluZGV4ID0gUmVhY3QuY3JlYXRlQ29udGV4dCB8fCBjcmVhdGVSZWFjdENvbnRleHQ7XG5cbmV4cG9ydCBkZWZhdWx0IGluZGV4O1xuIiwidmFyIGRheWpzID0gcmVxdWlyZSggJ2RheWpzJyk7dmFyIGlzU2FtZU9yQmVmb3JlID0gcmVxdWlyZSggJ2RheWpzL3BsdWdpbi9pc1NhbWVPckJlZm9yZScpO3ZhciBpc1NhbWVPckFmdGVyID0gcmVxdWlyZSggJ2RheWpzL3BsdWdpbi9pc1NhbWVPckFmdGVyJyk7dmFyIGFkdmFuY2VkRm9ybWF0ID0gcmVxdWlyZSggJ2RheWpzL3BsdWdpbi9hZHZhbmNlZEZvcm1hdCcpO3ZhciBjdXN0b21QYXJzZUZvcm1hdCA9IHJlcXVpcmUoICdkYXlqcy9wbHVnaW4vY3VzdG9tUGFyc2VGb3JtYXQnKTt2YXIgd2Vla2RheSA9IHJlcXVpcmUoICdkYXlqcy9wbHVnaW4vd2Vla2RheScpO3ZhciB3ZWVrWWVhciA9IHJlcXVpcmUoICdkYXlqcy9wbHVnaW4vd2Vla1llYXInKTt2YXIgd2Vla09mWWVhciA9IHJlcXVpcmUoICdkYXlqcy9wbHVnaW4vd2Vla09mWWVhcicpO3ZhciBpc01vbWVudCA9IHJlcXVpcmUoICdkYXlqcy9wbHVnaW4vaXNNb21lbnQnKTt2YXIgbG9jYWxlRGF0YSA9IHJlcXVpcmUoICdkYXlqcy9wbHVnaW4vbG9jYWxlRGF0YScpO3ZhciBsb2NhbGl6ZWRGb3JtYXQgPSByZXF1aXJlKCAnZGF5anMvcGx1Z2luL2xvY2FsaXplZEZvcm1hdCcpO2RheWpzLmV4dGVuZChpc1NhbWVPckJlZm9yZSk7ZGF5anMuZXh0ZW5kKGlzU2FtZU9yQWZ0ZXIpO2RheWpzLmV4dGVuZChhZHZhbmNlZEZvcm1hdCk7ZGF5anMuZXh0ZW5kKGN1c3RvbVBhcnNlRm9ybWF0KTtkYXlqcy5leHRlbmQod2Vla2RheSk7ZGF5anMuZXh0ZW5kKHdlZWtZZWFyKTtkYXlqcy5leHRlbmQod2Vla09mWWVhcik7ZGF5anMuZXh0ZW5kKGlzTW9tZW50KTtkYXlqcy5leHRlbmQobG9jYWxlRGF0YSk7ZGF5anMuZXh0ZW5kKGxvY2FsaXplZEZvcm1hdCk7dmFyIGFudGRQbHVnaW4gPSByZXF1aXJlKCAnYW50ZC1kYXlqcy13ZWJwYWNrLXBsdWdpbi9zcmMvYW50ZC1wbHVnaW4nKTtkYXlqcy5leHRlbmQoYW50ZFBsdWdpbik7IiwidmFyIGlzYXJyYXkgPSByZXF1aXJlKCdpc2FycmF5JylcblxuLyoqXG4gKiBFeHBvc2UgYHBhdGhUb1JlZ2V4cGAuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcGF0aFRvUmVnZXhwXG5tb2R1bGUuZXhwb3J0cy5wYXJzZSA9IHBhcnNlXG5tb2R1bGUuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9GdW5jdGlvbiA9IHRva2Vuc1RvRnVuY3Rpb25cbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvUmVnRXhwID0gdG9rZW5zVG9SZWdFeHBcblxuLyoqXG4gKiBUaGUgbWFpbiBwYXRoIG1hdGNoaW5nIHJlZ2V4cCB1dGlsaXR5LlxuICpcbiAqIEB0eXBlIHtSZWdFeHB9XG4gKi9cbnZhciBQQVRIX1JFR0VYUCA9IG5ldyBSZWdFeHAoW1xuICAvLyBNYXRjaCBlc2NhcGVkIGNoYXJhY3RlcnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYXBwZWFyIGluIGZ1dHVyZSBtYXRjaGVzLlxuICAvLyBUaGlzIGFsbG93cyB0aGUgdXNlciB0byBlc2NhcGUgc3BlY2lhbCBjaGFyYWN0ZXJzIHRoYXQgd29uJ3QgdHJhbnNmb3JtLlxuICAnKFxcXFxcXFxcLiknLFxuICAvLyBNYXRjaCBFeHByZXNzLXN0eWxlIHBhcmFtZXRlcnMgYW5kIHVuLW5hbWVkIHBhcmFtZXRlcnMgd2l0aCBhIHByZWZpeFxuICAvLyBhbmQgb3B0aW9uYWwgc3VmZml4ZXMuIE1hdGNoZXMgYXBwZWFyIGFzOlxuICAvL1xuICAvLyBcIi86dGVzdChcXFxcZCspP1wiID0+IFtcIi9cIiwgXCJ0ZXN0XCIsIFwiXFxkK1wiLCB1bmRlZmluZWQsIFwiP1wiLCB1bmRlZmluZWRdXG4gIC8vIFwiL3JvdXRlKFxcXFxkKylcIiAgPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiXFxkK1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZF1cbiAgLy8gXCIvKlwiICAgICAgICAgICAgPT4gW1wiL1wiLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiKlwiXVxuICAnKFtcXFxcLy5dKT8oPzooPzpcXFxcOihcXFxcdyspKD86XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSk/fFxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpKFsrKj9dKT98KFxcXFwqKSknXG5dLmpvaW4oJ3wnKSwgJ2cnKVxuXG4vKipcbiAqIFBhcnNlIGEgc3RyaW5nIGZvciB0aGUgcmF3IHRva2Vucy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19IG9wdGlvbnNcbiAqIEByZXR1cm4geyFBcnJheX1cbiAqL1xuZnVuY3Rpb24gcGFyc2UgKHN0ciwgb3B0aW9ucykge1xuICB2YXIgdG9rZW5zID0gW11cbiAgdmFyIGtleSA9IDBcbiAgdmFyIGluZGV4ID0gMFxuICB2YXIgcGF0aCA9ICcnXG4gIHZhciBkZWZhdWx0RGVsaW1pdGVyID0gb3B0aW9ucyAmJiBvcHRpb25zLmRlbGltaXRlciB8fCAnLydcbiAgdmFyIHJlc1xuXG4gIHdoaWxlICgocmVzID0gUEFUSF9SRUdFWFAuZXhlYyhzdHIpKSAhPSBudWxsKSB7XG4gICAgdmFyIG0gPSByZXNbMF1cbiAgICB2YXIgZXNjYXBlZCA9IHJlc1sxXVxuICAgIHZhciBvZmZzZXQgPSByZXMuaW5kZXhcbiAgICBwYXRoICs9IHN0ci5zbGljZShpbmRleCwgb2Zmc2V0KVxuICAgIGluZGV4ID0gb2Zmc2V0ICsgbS5sZW5ndGhcblxuICAgIC8vIElnbm9yZSBhbHJlYWR5IGVzY2FwZWQgc2VxdWVuY2VzLlxuICAgIGlmIChlc2NhcGVkKSB7XG4gICAgICBwYXRoICs9IGVzY2FwZWRbMV1cbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIG5leHQgPSBzdHJbaW5kZXhdXG4gICAgdmFyIHByZWZpeCA9IHJlc1syXVxuICAgIHZhciBuYW1lID0gcmVzWzNdXG4gICAgdmFyIGNhcHR1cmUgPSByZXNbNF1cbiAgICB2YXIgZ3JvdXAgPSByZXNbNV1cbiAgICB2YXIgbW9kaWZpZXIgPSByZXNbNl1cbiAgICB2YXIgYXN0ZXJpc2sgPSByZXNbN11cblxuICAgIC8vIFB1c2ggdGhlIGN1cnJlbnQgcGF0aCBvbnRvIHRoZSB0b2tlbnMuXG4gICAgaWYgKHBhdGgpIHtcbiAgICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gICAgICBwYXRoID0gJydcbiAgICB9XG5cbiAgICB2YXIgcGFydGlhbCA9IHByZWZpeCAhPSBudWxsICYmIG5leHQgIT0gbnVsbCAmJiBuZXh0ICE9PSBwcmVmaXhcbiAgICB2YXIgcmVwZWF0ID0gbW9kaWZpZXIgPT09ICcrJyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIG9wdGlvbmFsID0gbW9kaWZpZXIgPT09ICc/JyB8fCBtb2RpZmllciA9PT0gJyonXG4gICAgdmFyIGRlbGltaXRlciA9IHJlc1syXSB8fCBkZWZhdWx0RGVsaW1pdGVyXG4gICAgdmFyIHBhdHRlcm4gPSBjYXB0dXJlIHx8IGdyb3VwXG5cbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICBuYW1lOiBuYW1lIHx8IGtleSsrLFxuICAgICAgcHJlZml4OiBwcmVmaXggfHwgJycsXG4gICAgICBkZWxpbWl0ZXI6IGRlbGltaXRlcixcbiAgICAgIG9wdGlvbmFsOiBvcHRpb25hbCxcbiAgICAgIHJlcGVhdDogcmVwZWF0LFxuICAgICAgcGFydGlhbDogcGFydGlhbCxcbiAgICAgIGFzdGVyaXNrOiAhIWFzdGVyaXNrLFxuICAgICAgcGF0dGVybjogcGF0dGVybiA/IGVzY2FwZUdyb3VwKHBhdHRlcm4pIDogKGFzdGVyaXNrID8gJy4qJyA6ICdbXicgKyBlc2NhcGVTdHJpbmcoZGVsaW1pdGVyKSArICddKz8nKVxuICAgIH0pXG4gIH1cblxuICAvLyBNYXRjaCBhbnkgY2hhcmFjdGVycyBzdGlsbCByZW1haW5pbmcuXG4gIGlmIChpbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICBwYXRoICs9IHN0ci5zdWJzdHIoaW5kZXgpXG4gIH1cblxuICAvLyBJZiB0aGUgcGF0aCBleGlzdHMsIHB1c2ggaXQgb250byB0aGUgZW5kLlxuICBpZiAocGF0aCkge1xuICAgIHRva2Vucy5wdXNoKHBhdGgpXG4gIH1cblxuICByZXR1cm4gdG9rZW5zXG59XG5cbi8qKlxuICogQ29tcGlsZSBhIHN0cmluZyB0byBhIHRlbXBsYXRlIGZ1bmN0aW9uIGZvciB0aGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICAgICAgICAgICAgIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshZnVuY3Rpb24oT2JqZWN0PSwgT2JqZWN0PSl9XG4gKi9cbmZ1bmN0aW9uIGNvbXBpbGUgKHN0ciwgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9GdW5jdGlvbihwYXJzZShzdHIsIG9wdGlvbnMpLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIFByZXR0aWVyIGVuY29kaW5nIG9mIFVSSSBwYXRoIHNlZ21lbnRzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1tcXC8/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRW5jb2RlIHRoZSBhc3RlcmlzayBwYXJhbWV0ZXIuIFNpbWlsYXIgdG8gYHByZXR0eWAsIGJ1dCBhbGxvd3Mgc2xhc2hlcy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZUFzdGVyaXNrIChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSShzdHIpLnJlcGxhY2UoL1s/I10vZywgZnVuY3Rpb24gKGMpIHtcbiAgICByZXR1cm4gJyUnICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpXG4gIH0pXG59XG5cbi8qKlxuICogRXhwb3NlIGEgbWV0aG9kIGZvciB0cmFuc2Zvcm1pbmcgdG9rZW5zIGludG8gdGhlIHBhdGggZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvRnVuY3Rpb24gKHRva2Vucywgb3B0aW9ucykge1xuICAvLyBDb21waWxlIGFsbCB0aGUgdG9rZW5zIGludG8gcmVnZXhwcy5cbiAgdmFyIG1hdGNoZXMgPSBuZXcgQXJyYXkodG9rZW5zLmxlbmd0aClcblxuICAvLyBDb21waWxlIGFsbCB0aGUgcGF0dGVybnMgYmVmb3JlIGNvbXBpbGF0aW9uLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIGlmICh0eXBlb2YgdG9rZW5zW2ldID09PSAnb2JqZWN0Jykge1xuICAgICAgbWF0Y2hlc1tpXSA9IG5ldyBSZWdFeHAoJ14oPzonICsgdG9rZW5zW2ldLnBhdHRlcm4gKyAnKSQnLCBmbGFncyhvcHRpb25zKSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKG9iaiwgb3B0cykge1xuICAgIHZhciBwYXRoID0gJydcbiAgICB2YXIgZGF0YSA9IG9iaiB8fCB7fVxuICAgIHZhciBvcHRpb25zID0gb3B0cyB8fCB7fVxuICAgIHZhciBlbmNvZGUgPSBvcHRpb25zLnByZXR0eSA/IGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSA6IGVuY29kZVVSSUNvbXBvbmVudFxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICBwYXRoICs9IHRva2VuXG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgdmFyIHZhbHVlID0gZGF0YVt0b2tlbi5uYW1lXVxuICAgICAgdmFyIHNlZ21lbnRcblxuICAgICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgLy8gUHJlcGVuZCBwYXJ0aWFsIHNlZ21lbnQgcHJlZml4ZXMuXG4gICAgICAgICAgaWYgKHRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIGJlIGRlZmluZWQnKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChpc2FycmF5KHZhbHVlKSkge1xuICAgICAgICBpZiAoIXRva2VuLnJlcGVhdCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IHJlcGVhdCwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpICsgJ2AnKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgYmUgZW1wdHknKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdmFsdWUubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBzZWdtZW50ID0gZW5jb2RlKHZhbHVlW2pdKVxuXG4gICAgICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGFsbCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHNlZ21lbnQpICsgJ2AnKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHBhdGggKz0gKGogPT09IDAgPyB0b2tlbi5wcmVmaXggOiB0b2tlbi5kZWxpbWl0ZXIpICsgc2VnbWVudFxuICAgICAgICB9XG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgc2VnbWVudCA9IHRva2VuLmFzdGVyaXNrID8gZW5jb2RlQXN0ZXJpc2sodmFsdWUpIDogZW5jb2RlKHZhbHVlKVxuXG4gICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG1hdGNoIFwiJyArIHRva2VuLnBhdHRlcm4gKyAnXCIsIGJ1dCByZWNlaXZlZCBcIicgKyBzZWdtZW50ICsgJ1wiJylcbiAgICAgIH1cblxuICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXggKyBzZWdtZW50XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhdGhcbiAgfVxufVxuXG4vKipcbiAqIEVzY2FwZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbiBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlU3RyaW5nIChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWy4rKj89XiE6JHt9KClbXFxdfFxcL1xcXFxdKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBFc2NhcGUgdGhlIGNhcHR1cmluZyBncm91cCBieSBlc2NhcGluZyBzcGVjaWFsIGNoYXJhY3RlcnMgYW5kIG1lYW5pbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBncm91cFxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVHcm91cCAoZ3JvdXApIHtcbiAgcmV0dXJuIGdyb3VwLnJlcGxhY2UoLyhbPSE6JFxcLygpXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogQXR0YWNoIHRoZSBrZXlzIGFzIGEgcHJvcGVydHkgb2YgdGhlIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSByZVxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXR0YWNoS2V5cyAocmUsIGtleXMpIHtcbiAgcmUua2V5cyA9IGtleXNcbiAgcmV0dXJuIHJlXG59XG5cbi8qKlxuICogR2V0IHRoZSBmbGFncyBmb3IgYSByZWdleHAgZnJvbSB0aGUgb3B0aW9ucy5cbiAqXG4gKiBAcGFyYW0gIHtPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZmxhZ3MgKG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMgJiYgb3B0aW9ucy5zZW5zaXRpdmUgPyAnJyA6ICdpJ1xufVxuXG4vKipcbiAqIFB1bGwgb3V0IGtleXMgZnJvbSBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshUmVnRXhwfSBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiByZWdleHBUb1JlZ2V4cCAocGF0aCwga2V5cykge1xuICAvLyBVc2UgYSBuZWdhdGl2ZSBsb29rYWhlYWQgdG8gbWF0Y2ggb25seSBjYXB0dXJpbmcgZ3JvdXBzLlxuICB2YXIgZ3JvdXBzID0gcGF0aC5zb3VyY2UubWF0Y2goL1xcKCg/IVxcPykvZylcblxuICBpZiAoZ3JvdXBzKSB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGtleXMucHVzaCh7XG4gICAgICAgIG5hbWU6IGksXG4gICAgICAgIHByZWZpeDogbnVsbCxcbiAgICAgICAgZGVsaW1pdGVyOiBudWxsLFxuICAgICAgICBvcHRpb25hbDogZmFsc2UsXG4gICAgICAgIHJlcGVhdDogZmFsc2UsXG4gICAgICAgIHBhcnRpYWw6IGZhbHNlLFxuICAgICAgICBhc3RlcmlzazogZmFsc2UsXG4gICAgICAgIHBhdHRlcm46IG51bGxcbiAgICAgIH0pXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocGF0aCwga2V5cylcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm0gYW4gYXJyYXkgaW50byBhIHJlZ2V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBwYXRoXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhcnJheVRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHZhciBwYXJ0cyA9IFtdXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgcGFydHMucHVzaChwYXRoVG9SZWdleHAocGF0aFtpXSwga2V5cywgb3B0aW9ucykuc291cmNlKVxuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IG5ldyBSZWdFeHAoJyg/OicgKyBwYXJ0cy5qb2luKCd8JykgKyAnKScsIGZsYWdzKG9wdGlvbnMpKVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHJlZ2V4cCwga2V5cylcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBwYXRoIHJlZ2V4cCBmcm9tIHN0cmluZyBpbnB1dC5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBwYXRoXG4gKiBAcGFyYW0gIHshQXJyYXl9ICBrZXlzXG4gKiBAcGFyYW0gIHshT2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICByZXR1cm4gdG9rZW5zVG9SZWdFeHAocGFyc2UocGF0aCwgb3B0aW9ucyksIGtleXMsIG9wdGlvbnMpXG59XG5cbi8qKlxuICogRXhwb3NlIGEgZnVuY3Rpb24gZm9yIHRha2luZyB0b2tlbnMgYW5kIHJldHVybmluZyBhIFJlZ0V4cC5cbiAqXG4gKiBAcGFyYW0gIHshQXJyYXl9ICAgICAgICAgIHRva2Vuc1xuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHRva2Vuc1RvUmVnRXhwICh0b2tlbnMsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgdmFyIHN0cmljdCA9IG9wdGlvbnMuc3RyaWN0XG4gIHZhciBlbmQgPSBvcHRpb25zLmVuZCAhPT0gZmFsc2VcbiAgdmFyIHJvdXRlID0gJydcblxuICAvLyBJdGVyYXRlIG92ZXIgdGhlIHRva2VucyBhbmQgY3JlYXRlIG91ciByZWdleHAgc3RyaW5nLlxuICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXVxuXG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJvdXRlICs9IGVzY2FwZVN0cmluZyh0b2tlbilcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHByZWZpeCA9IGVzY2FwZVN0cmluZyh0b2tlbi5wcmVmaXgpXG4gICAgICB2YXIgY2FwdHVyZSA9ICcoPzonICsgdG9rZW4ucGF0dGVybiArICcpJ1xuXG4gICAgICBrZXlzLnB1c2godG9rZW4pXG5cbiAgICAgIGlmICh0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgY2FwdHVyZSArPSAnKD86JyArIHByZWZpeCArIGNhcHR1cmUgKyAnKSonXG4gICAgICB9XG5cbiAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICBpZiAoIXRva2VuLnBhcnRpYWwpIHtcbiAgICAgICAgICBjYXB0dXJlID0gJyg/OicgKyBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJykpPydcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpPydcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSdcbiAgICAgIH1cblxuICAgICAgcm91dGUgKz0gY2FwdHVyZVxuICAgIH1cbiAgfVxuXG4gIHZhciBkZWxpbWl0ZXIgPSBlc2NhcGVTdHJpbmcob3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nKVxuICB2YXIgZW5kc1dpdGhEZWxpbWl0ZXIgPSByb3V0ZS5zbGljZSgtZGVsaW1pdGVyLmxlbmd0aCkgPT09IGRlbGltaXRlclxuXG4gIC8vIEluIG5vbi1zdHJpY3QgbW9kZSB3ZSBhbGxvdyBhIHNsYXNoIGF0IHRoZSBlbmQgb2YgbWF0Y2guIElmIHRoZSBwYXRoIHRvXG4gIC8vIG1hdGNoIGFscmVhZHkgZW5kcyB3aXRoIGEgc2xhc2gsIHdlIHJlbW92ZSBpdCBmb3IgY29uc2lzdGVuY3kuIFRoZSBzbGFzaFxuICAvLyBpcyB2YWxpZCBhdCB0aGUgZW5kIG9mIGEgcGF0aCBtYXRjaCwgbm90IGluIHRoZSBtaWRkbGUuIFRoaXMgaXMgaW1wb3J0YW50XG4gIC8vIGluIG5vbi1lbmRpbmcgbW9kZSwgd2hlcmUgXCIvdGVzdC9cIiBzaG91bGRuJ3QgbWF0Y2ggXCIvdGVzdC8vcm91dGVcIi5cbiAgaWYgKCFzdHJpY3QpIHtcbiAgICByb3V0ZSA9IChlbmRzV2l0aERlbGltaXRlciA/IHJvdXRlLnNsaWNlKDAsIC1kZWxpbWl0ZXIubGVuZ3RoKSA6IHJvdXRlKSArICcoPzonICsgZGVsaW1pdGVyICsgJyg/PSQpKT8nXG4gIH1cblxuICBpZiAoZW5kKSB7XG4gICAgcm91dGUgKz0gJyQnXG4gIH0gZWxzZSB7XG4gICAgLy8gSW4gbm9uLWVuZGluZyBtb2RlLCB3ZSBuZWVkIHRoZSBjYXB0dXJpbmcgZ3JvdXBzIHRvIG1hdGNoIGFzIG11Y2ggYXNcbiAgICAvLyBwb3NzaWJsZSBieSB1c2luZyBhIHBvc2l0aXZlIGxvb2thaGVhZCB0byB0aGUgZW5kIG9yIG5leHQgcGF0aCBzZWdtZW50LlxuICAgIHJvdXRlICs9IHN0cmljdCAmJiBlbmRzV2l0aERlbGltaXRlciA/ICcnIDogJyg/PScgKyBkZWxpbWl0ZXIgKyAnfCQpJ1xuICB9XG5cbiAgcmV0dXJuIGF0dGFjaEtleXMobmV3IFJlZ0V4cCgnXicgKyByb3V0ZSwgZmxhZ3Mob3B0aW9ucykpLCBrZXlzKVxufVxuXG4vKipcbiAqIE5vcm1hbGl6ZSB0aGUgZ2l2ZW4gcGF0aCBzdHJpbmcsIHJldHVybmluZyBhIHJlZ3VsYXIgZXhwcmVzc2lvbi5cbiAqXG4gKiBBbiBlbXB0eSBhcnJheSBjYW4gYmUgcGFzc2VkIGluIGZvciB0aGUga2V5cywgd2hpY2ggd2lsbCBob2xkIHRoZVxuICogcGxhY2Vob2xkZXIga2V5IGRlc2NyaXB0aW9ucy4gRm9yIGV4YW1wbGUsIHVzaW5nIGAvdXNlci86aWRgLCBga2V5c2Agd2lsbFxuICogY29udGFpbiBgW3sgbmFtZTogJ2lkJywgZGVsaW1pdGVyOiAnLycsIG9wdGlvbmFsOiBmYWxzZSwgcmVwZWF0OiBmYWxzZSB9XWAuXG4gKlxuICogQHBhcmFtICB7KHN0cmluZ3xSZWdFeHB8QXJyYXkpfSBwYXRoXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19ICAgICAgIGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcGF0aFRvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGlmIChwYXRoIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHJlZ2V4cFRvUmVnZXhwKHBhdGgsIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cykpXG4gIH1cblxuICBpZiAoaXNhcnJheShwYXRoKSkge1xuICAgIHJldHVybiBhcnJheVRvUmVnZXhwKC8qKiBAdHlwZSB7IUFycmF5fSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG4gIH1cblxuICByZXR1cm4gc3RyaW5nVG9SZWdleHAoLyoqIEB0eXBlIHtzdHJpbmd9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHk9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTpcbjYwMTE2LEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEMoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgRD17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRT17fTtmdW5jdGlvbiBGKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoQyg4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBHKCl7fUcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7bChJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLG09MDttPGY7bSsrKWhbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsYyxlKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWM7ZC5jb250ZXh0PWU7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmMsY29udGV4dDplLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1UoZCxrKTtnKz1UKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QiYmYVtCXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGsrKyksZys9VChkLGYsYyxlKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1kKXRocm93IGM9XCJcIithLEVycm9yKEMoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWM/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YyxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsYyl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGMpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFcoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gYWEoYSxiLGMpe3ZhciBlPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/WChhLGUsYyxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1OKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gWChhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGUsZCk7VihhLGFhLGIpO1MoYil9dmFyIFk9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gWigpe3ZhciBhPVkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihDKDMyMSkpO3JldHVybiBhfVxudmFyIGJhPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107WChhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixjKTtWKGEsVyxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1goYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihDKDE0MykpO3JldHVybiBhfX07XG5leHBvcnRzLkNvbXBvbmVudD1GO2V4cG9ydHMuRnJhZ21lbnQ9cjtleHBvcnRzLlByb2ZpbGVyPXU7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUg7ZXhwb3J0cy5TdHJpY3RNb2RlPXQ7ZXhwb3J0cy5TdXNwZW5zZT15O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9YmE7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQygyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilLLmNhbGwoYixoKSYmIUwuaGFzT3duUHJvcGVydHkoaCkmJihlW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbT0wO208aDttKyspZlttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjprfX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp6LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xMy4xXCI7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVXaWxkY2FyZFwiKTtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLndhcm5pbmcgPSB3YXJuaW5nO1xuZXhwb3J0cy5pc0ljb25EZWZpbml0aW9uID0gaXNJY29uRGVmaW5pdGlvbjtcbmV4cG9ydHMubm9ybWFsaXplQXR0cnMgPSBub3JtYWxpemVBdHRycztcbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMuZ2V0U2Vjb25kYXJ5Q29sb3IgPSBnZXRTZWNvbmRhcnlDb2xvcjtcbmV4cG9ydHMubm9ybWFsaXplVHdvVG9uZUNvbG9ycyA9IG5vcm1hbGl6ZVR3b1RvbmVDb2xvcnM7XG5leHBvcnRzLnVzZUluc2VydFN0eWxlcyA9IGV4cG9ydHMuaWNvblN0eWxlcyA9IGV4cG9ydHMuc3ZnQmFzZVByb3BzID0gdm9pZCAwO1xuXG52YXIgX29iamVjdFNwcmVhZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL29iamVjdFNwcmVhZDJcIikpO1xuXG52YXIgX3R5cGVvZjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3R5cGVvZlwiKSk7XG5cbnZhciBfY29sb3JzID0gcmVxdWlyZShcIkBhbnQtZGVzaWduL2NvbG9yc1wiKTtcblxudmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cbnZhciBfd2FybmluZyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInJjLXV0aWwvbGliL3dhcm5pbmdcIikpO1xuXG52YXIgX2luc2VydENzcyA9IHJlcXVpcmUoXCJpbnNlcnQtY3NzXCIpO1xuXG5mdW5jdGlvbiB3YXJuaW5nKHZhbGlkLCBtZXNzYWdlKSB7XG4gICgwLCBfd2FybmluZy5kZWZhdWx0KSh2YWxpZCwgXCJbQGFudC1kZXNpZ24vaWNvbnNdIFwiLmNvbmNhdChtZXNzYWdlKSk7XG59XG5cbmZ1bmN0aW9uIGlzSWNvbkRlZmluaXRpb24odGFyZ2V0KSB7XG4gIHJldHVybiAoMCwgX3R5cGVvZjIuZGVmYXVsdCkodGFyZ2V0KSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHRhcmdldC5uYW1lID09PSAnc3RyaW5nJyAmJiB0eXBlb2YgdGFyZ2V0LnRoZW1lID09PSAnc3RyaW5nJyAmJiAoKDAsIF90eXBlb2YyLmRlZmF1bHQpKHRhcmdldC5pY29uKSA9PT0gJ29iamVjdCcgfHwgdHlwZW9mIHRhcmdldC5pY29uID09PSAnZnVuY3Rpb24nKTtcbn1cblxuZnVuY3Rpb24gbm9ybWFsaXplQXR0cnMoKSB7XG4gIHZhciBhdHRycyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIHJldHVybiBPYmplY3Qua2V5cyhhdHRycykucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGtleSkge1xuICAgIHZhciB2YWwgPSBhdHRyc1trZXldO1xuXG4gICAgc3dpdGNoIChrZXkpIHtcbiAgICAgIGNhc2UgJ2NsYXNzJzpcbiAgICAgICAgYWNjLmNsYXNzTmFtZSA9IHZhbDtcbiAgICAgICAgZGVsZXRlIGFjYy5jbGFzcztcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGFjY1trZXldID0gdmFsO1xuICAgIH1cblxuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSwga2V5LCByb290UHJvcHMpIHtcbiAgaWYgKCFyb290UHJvcHMpIHtcbiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChub2RlLnRhZywgKDAsIF9vYmplY3RTcHJlYWQyLmRlZmF1bHQpKHtcbiAgICAgIGtleToga2V5XG4gICAgfSwgbm9ybWFsaXplQXR0cnMobm9kZS5hdHRycykpLCAobm9kZS5jaGlsZHJlbiB8fCBbXSkubWFwKGZ1bmN0aW9uIChjaGlsZCwgaW5kZXgpIHtcbiAgICAgIHJldHVybiBnZW5lcmF0ZShjaGlsZCwgXCJcIi5jb25jYXQoa2V5LCBcIi1cIikuY29uY2F0KG5vZGUudGFnLCBcIi1cIikuY29uY2F0KGluZGV4KSk7XG4gICAgfSkpO1xuICB9XG5cbiAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQobm9kZS50YWcsICgwLCBfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSgoMCwgX29iamVjdFNwcmVhZDIuZGVmYXVsdCkoe1xuICAgIGtleToga2V5XG4gIH0sIG5vcm1hbGl6ZUF0dHJzKG5vZGUuYXR0cnMpKSwgcm9vdFByb3BzKSwgKG5vZGUuY2hpbGRyZW4gfHwgW10pLm1hcChmdW5jdGlvbiAoY2hpbGQsIGluZGV4KSB7XG4gICAgcmV0dXJuIGdlbmVyYXRlKGNoaWxkLCBcIlwiLmNvbmNhdChrZXksIFwiLVwiKS5jb25jYXQobm9kZS50YWcsIFwiLVwiKS5jb25jYXQoaW5kZXgpKTtcbiAgfSkpO1xufVxuXG5mdW5jdGlvbiBnZXRTZWNvbmRhcnlDb2xvcihwcmltYXJ5Q29sb3IpIHtcbiAgLy8gY2hvb3NlIHRoZSBzZWNvbmQgY29sb3JcbiAgcmV0dXJuICgwLCBfY29sb3JzLmdlbmVyYXRlKShwcmltYXJ5Q29sb3IpWzBdO1xufVxuXG5mdW5jdGlvbiBub3JtYWxpemVUd29Ub25lQ29sb3JzKHR3b1RvbmVDb2xvcikge1xuICBpZiAoIXR3b1RvbmVDb2xvcikge1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIHJldHVybiBBcnJheS5pc0FycmF5KHR3b1RvbmVDb2xvcikgPyB0d29Ub25lQ29sb3IgOiBbdHdvVG9uZUNvbG9yXTtcbn0gLy8gVGhlc2UgcHJvcHMgbWFrZSBzdXJlIHRoYXQgdGhlIFNWRyBiZWhhdmlvdXJzIGxpa2UgZ2VuZXJhbCB0ZXh0LlxuLy8gUmVmZXJlbmNlOiBodHRwczovL2Jsb2cucHJvdG90eXByLmlvL2FsaWduLXN2Zy1pY29ucy10by10ZXh0LWFuZC1zYXktZ29vZGJ5ZS10by1mb250LWljb25zLWQ0NGIzZDdiMjZiNFxuXG5cbnZhciBzdmdCYXNlUHJvcHMgPSB7XG4gIHdpZHRoOiAnMWVtJyxcbiAgaGVpZ2h0OiAnMWVtJyxcbiAgZmlsbDogJ2N1cnJlbnRDb2xvcicsXG4gICdhcmlhLWhpZGRlbic6ICd0cnVlJyxcbiAgZm9jdXNhYmxlOiAnZmFsc2UnXG59O1xuZXhwb3J0cy5zdmdCYXNlUHJvcHMgPSBzdmdCYXNlUHJvcHM7XG52YXIgaWNvblN0eWxlcyA9IFwiXFxuLmFudGljb24ge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBmb250LXN0eWxlOiBub3JtYWw7XFxuICBsaW5lLWhlaWdodDogMDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xcbiAgdmVydGljYWwtYWxpZ246IC0wLjEyNWVtO1xcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcXG59XFxuXFxuLmFudGljb24gPiAqIHtcXG4gIGxpbmUtaGVpZ2h0OiAxO1xcbn1cXG5cXG4uYW50aWNvbiBzdmcge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG5cXG4uYW50aWNvbjo6YmVmb3JlIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5hbnRpY29uIC5hbnRpY29uLWljb24ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5hbnRpY29uW3RhYmluZGV4XSB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5hbnRpY29uLXNwaW46OmJlZm9yZSxcXG4uYW50aWNvbi1zcGluIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIC13ZWJraXQtYW5pbWF0aW9uOiBsb2FkaW5nQ2lyY2xlIDFzIGluZmluaXRlIGxpbmVhcjtcXG4gIGFuaW1hdGlvbjogbG9hZGluZ0NpcmNsZSAxcyBpbmZpbml0ZSBsaW5lYXI7XFxufVxcblxcbkAtd2Via2l0LWtleWZyYW1lcyBsb2FkaW5nQ2lyY2xlIHtcXG4gIDEwMCUge1xcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XFxuICB9XFxufVxcblxcbkBrZXlmcmFtZXMgbG9hZGluZ0NpcmNsZSB7XFxuICAxMDAlIHtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xcbiAgfVxcbn1cXG5cIjtcbmV4cG9ydHMuaWNvblN0eWxlcyA9IGljb25TdHlsZXM7XG52YXIgY3NzSW5qZWN0ZWRGbGFnID0gZmFsc2U7XG5cbnZhciB1c2VJbnNlcnRTdHlsZXMgPSBmdW5jdGlvbiB1c2VJbnNlcnRTdHlsZXMoKSB7XG4gIHZhciBzdHlsZVN0ciA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogaWNvblN0eWxlcztcbiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIWNzc0luamVjdGVkRmxhZykge1xuICAgICAgKDAsIF9pbnNlcnRDc3MuaW5zZXJ0Q3NzKShzdHlsZVN0ciwge1xuICAgICAgICBwcmVwZW5kOiB0cnVlXG4gICAgICB9KTtcbiAgICAgIGNzc0luamVjdGVkRmxhZyA9IHRydWU7XG4gICAgfVxuICB9LCBbXSk7XG59O1xuXG5leHBvcnRzLnVzZUluc2VydFN0eWxlcyA9IHVzZUluc2VydFN0eWxlczsiLCJmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2FycmF5V2l0aEhvbGVzOyIsIlwidXNlIHN0cmljdFwiO1xuLy8gVGhpcyBpY29uIGZpbGUgaXMgZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHkuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgTGVmdE91dGxpbmVkID0geyBcImljb25cIjogeyBcInRhZ1wiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ2aWV3Qm94XCI6IFwiNjQgNjQgODk2IDg5NlwiLCBcImZvY3VzYWJsZVwiOiBcImZhbHNlXCIgfSwgXCJjaGlsZHJlblwiOiBbeyBcInRhZ1wiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk03MjQgMjE4LjNWMTQxYzAtNi43LTcuNy0xMC40LTEyLjktNi4zTDI2MC4zIDQ4Ni44YTMxLjg2IDMxLjg2IDAgMDAwIDUwLjNsNDUwLjggMzUyLjFjNS4zIDQuMSAxMi45LjQgMTIuOS02LjN2LTc3LjNjMC00LjktMi4zLTkuNi02LjEtMTIuNmwtMzYwLTI4MSAzNjAtMjgxLjFjMy44LTMgNi4xLTcuNyA2LjEtMTIuNnpcIiB9IH1dIH0sIFwibmFtZVwiOiBcImxlZnRcIiwgXCJ0aGVtZVwiOiBcIm91dGxpbmVkXCIgfTtcbmV4cG9ydHMuZGVmYXVsdCA9IExlZnRPdXRsaW5lZDtcbiIsImZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX25vbkl0ZXJhYmxlUmVzdDsiLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gdShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IodSgyMjcpKTtcbmZ1bmN0aW9uIGJhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fXZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxrKXtkYT0hMTtlYT1udWxsO2JhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBsPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB0aHJvdyBFcnJvcih1KDE5OCkpO2ZhfHwoZmE9ITAsaGE9bCl9fXZhciBsYT1udWxsLG1hPW51bGwsbmE9bnVsbDtcbmZ1bmN0aW9uIG9hKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD1uYShjKTtrYShkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfXZhciBwYT1udWxsLHFhPXt9O1xuZnVuY3Rpb24gcmEoKXtpZihwYSlmb3IodmFyIGEgaW4gcWEpe3ZhciBiPXFhW2FdLGM9cGEuaW5kZXhPZihhKTtpZighKC0xPGMpKXRocm93IEVycm9yKHUoOTYsYSkpO2lmKCFzYVtjXSl7aWYoIWIuZXh0cmFjdEV2ZW50cyl0aHJvdyBFcnJvcih1KDk3LGEpKTtzYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO2lmKHRhLmhhc093blByb3BlcnR5KGgpKXRocm93IEVycm9yKHUoOTksaCkpO3RhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnVhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyh1YShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2lmKCFlKXRocm93IEVycm9yKHUoOTgsZCxhKSk7fX19fVxuZnVuY3Rpb24gdWEoYSxiLGMpe2lmKHZhW2FdKXRocm93IEVycm9yKHUoMTAwLGEpKTt2YVthXT1iO3dhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIHNhPVtdLHRhPXt9LHZhPXt9LHdhPXt9O2Z1bmN0aW9uIHhhKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO2lmKCFxYS5oYXNPd25Qcm9wZXJ0eShjKXx8cWFbY10hPT1kKXtpZihxYVtjXSl0aHJvdyBFcnJvcih1KDEwMixjKSk7cWFbY109ZDtiPSEwfX1iJiZyYSgpfXZhciB5YT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksemE9bnVsbCxBYT1udWxsLEJhPW51bGw7XG5mdW5jdGlvbiBDYShhKXtpZihhPW1hKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgemEpdGhyb3cgRXJyb3IodSgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1sYShiKSx6YShhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBEYShhKXtBYT9CYT9CYS5wdXNoKGEpOkJhPVthXTpBYT1hfWZ1bmN0aW9uIEVhKCl7aWYoQWEpe3ZhciBhPUFhLGI9QmE7QmE9QWE9bnVsbDtDYShhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspQ2EoYlthXSl9fWZ1bmN0aW9uIEZhKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gR2EoYSxiLGMsZCxlKXtyZXR1cm4gYShiLGMsZCxlKX1mdW5jdGlvbiBIYSgpe312YXIgSWE9RmEsSmE9ITEsS2E9ITE7ZnVuY3Rpb24gTGEoKXtpZihudWxsIT09QWF8fG51bGwhPT1CYSlIYSgpLEVhKCl9XG5mdW5jdGlvbiBNYShhLGIsYyl7aWYoS2EpcmV0dXJuIGEoYixjKTtLYT0hMDt0cnl7cmV0dXJuIElhKGEsYixjKX1maW5hbGx5e0thPSExLExhKCl9fXZhciBOYT0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sT2E9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxQYT17fSxRYT17fTtcbmZ1bmN0aW9uIFJhKGEpe2lmKE9hLmNhbGwoUWEsYSkpcmV0dXJuITA7aWYoT2EuY2FsbChQYSxhKSlyZXR1cm4hMTtpZihOYS50ZXN0KGEpKXJldHVybiBRYVthXT0hMDtQYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBTYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIFRhKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fFNhKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gdihhLGIsYyxkLGUsZil7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWZ9dmFyIEM9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwwLCExLGEsbnVsbCwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07Q1tiXT1uZXcgdihiLDEsITEsYVsxXSxudWxsLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwyLCExLGEsbnVsbCwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwzLCEwLGEsbnVsbCwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw0LCExLGEsbnVsbCwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDYsITEsYSxudWxsLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7dmFyIFVhPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gVmEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsXG5WYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxudWxsLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5DLnhsaW5rSHJlZj1uZXcgdihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITApO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITApfSk7dmFyIFdhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1dhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlclwiKXx8KFdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXI9e2N1cnJlbnQ6bnVsbH0pO1dhLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWdcIil8fChXYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZz17c3VzcGVuc2U6bnVsbH0pO1xuZnVuY3Rpb24gWGEoYSxiLGMsZCl7dmFyIGU9Qy5oYXNPd25Qcm9wZXJ0eShiKT9DW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwoVGEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP1JhKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG52YXIgWWE9L14oLiopW1xcXFxcXC9dLyxFPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsWmE9RT9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMywkYT1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsYWI9RT9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsYmI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsY2I9RT9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsZGI9RT9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksZWI9RT9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxmYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsZ2I9RT9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsaGI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsaWI9RT9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLGpiPUU/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsa2I9RT9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixsYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSxtYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gbmIoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPW1iJiZhW21iXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIG9iKGEpe2lmKC0xPT09YS5fc3RhdHVzKXthLl9zdGF0dXM9MDt2YXIgYj1hLl9jdG9yO2I9YigpO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9fVxuZnVuY3Rpb24gcGIoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBhYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSAkYTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgY2I6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgYmI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBoYjpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBpYjpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBlYjpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGRiOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgZ2I6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcblwiRm9yd2FyZFJlZlwiKTtjYXNlIGpiOnJldHVybiBwYihhLnR5cGUpO2Nhc2UgbGI6cmV0dXJuIHBiKGEucmVuZGVyKTtjYXNlIGtiOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gcGIoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcWIoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAzOmNhc2UgNDpjYXNlIDY6Y2FzZSA3OmNhc2UgMTA6Y2FzZSA5OnZhciBjPVwiXCI7YnJlYWsgYTtkZWZhdWx0OnZhciBkPWEuX2RlYnVnT3duZXIsZT1hLl9kZWJ1Z1NvdXJjZSxmPXBiKGEudHlwZSk7Yz1udWxsO2QmJihjPXBiKGQudHlwZSkpO2Q9ZjtmPVwiXCI7ZT9mPVwiIChhdCBcIitlLmZpbGVOYW1lLnJlcGxhY2UoWWEsXCJcIikrXCI6XCIrZS5saW5lTnVtYmVyK1wiKVwiOmMmJihmPVwiIChjcmVhdGVkIGJ5IFwiK2MrXCIpXCIpO2M9XCJcXG4gICAgaW4gXCIrKGR8fFwiVW5rbm93blwiKStmfWIrPWM7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHJiKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBzYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gdGIoYSl7dmFyIGI9c2IoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIHhiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj10YihhKSl9ZnVuY3Rpb24geWIoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPXNiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gemIoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gQWIoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9cmIobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBCYihhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJlhhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBDYihhLGIpe0JiKGEsYik7dmFyIGM9cmIoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/RGIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmRGIoYSxiLnR5cGUscmIoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBFYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gRGIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfWZ1bmN0aW9uIEZiKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifWZ1bmN0aW9uIEdiKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9RmIoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfVxuZnVuY3Rpb24gSGIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3JiKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBJYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IodSg5MSkpO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIEpiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHUoOTIpKTtpZihBcnJheS5pc0FycmF5KGMpKXtpZighKDE+PWMubGVuZ3RoKSl0aHJvdyBFcnJvcih1KDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6cmIoYyl9fVxuZnVuY3Rpb24gS2IoYSxiKXt2YXIgYz1yYihiLnZhbHVlKSxkPXJiKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gTGIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIgTWI9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gTmIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBPYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/TmIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgUGIsUWI9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09TWIuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7UGI9UGJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7UGIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9UGIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gUmIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1mdW5jdGlvbiBTYihhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBUYj17YW5pbWF0aW9uZW5kOlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6U2IoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxVYj17fSxWYj17fTtcbnlhJiYoVmI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVGIuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVGIuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVGIuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVGIudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBXYihhKXtpZihVYlthXSlyZXR1cm4gVWJbYV07aWYoIVRiW2FdKXJldHVybiBhO3ZhciBiPVRiW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFZiKXJldHVybiBVYlthXT1iW2NdO3JldHVybiBhfVxudmFyIFhiPVdiKFwiYW5pbWF0aW9uZW5kXCIpLFliPVdiKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLFpiPVdiKFwiYW5pbWF0aW9uc3RhcnRcIiksJGI9V2IoXCJ0cmFuc2l0aW9uZW5kXCIpLGFjPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxiYz1uZXcgKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwKTtmdW5jdGlvbiBjYyhhKXt2YXIgYj1iYy5nZXQoYSk7dm9pZCAwPT09YiYmKGI9bmV3IE1hcCxiYy5zZXQoYSxiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBkYyhhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZWZmZWN0VGFnJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiBlYyhhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGZjKGEpe2lmKGRjKGEpIT09YSl0aHJvdyBFcnJvcih1KDE4OCkpO31cbmZ1bmN0aW9uIGdjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPWRjKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGZjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGZjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IodSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih1KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHUoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gaGMoYSl7YT1nYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGljKGEsYil7aWYobnVsbD09Yil0aHJvdyBFcnJvcih1KDMwKSk7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfWZ1bmN0aW9uIGpjKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBrYz1udWxsO1xuZnVuY3Rpb24gbGMoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKW9hKGEsYltkXSxjW2RdKTtlbHNlIGImJm9hKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBtYyhhKXtudWxsIT09YSYmKGtjPWljKGtjLGEpKTthPWtjO2tjPW51bGw7aWYoYSl7amMoYSxsYyk7aWYoa2MpdGhyb3cgRXJyb3IodSg5NSkpO2lmKGZhKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO319XG5mdW5jdGlvbiBuYyhhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gb2MoYSl7aWYoIXlhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifXZhciBwYz1bXTtmdW5jdGlvbiBxYyhhKXthLnRvcExldmVsVHlwZT1udWxsO2EubmF0aXZlRXZlbnQ9bnVsbDthLnRhcmdldEluc3Q9bnVsbDthLmFuY2VzdG9ycy5sZW5ndGg9MDsxMD5wYy5sZW5ndGgmJnBjLnB1c2goYSl9XG5mdW5jdGlvbiByYyhhLGIsYyxkKXtpZihwYy5sZW5ndGgpe3ZhciBlPXBjLnBvcCgpO2UudG9wTGV2ZWxUeXBlPWE7ZS5ldmVudFN5c3RlbUZsYWdzPWQ7ZS5uYXRpdmVFdmVudD1iO2UudGFyZ2V0SW5zdD1jO3JldHVybiBlfXJldHVybnt0b3BMZXZlbFR5cGU6YSxldmVudFN5c3RlbUZsYWdzOmQsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfX1cbmZ1bmN0aW9uIHNjKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ9YztpZigzPT09ZC50YWcpZD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Vsc2V7Zm9yKDtkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm99aWYoIWQpYnJlYWs7Yj1jLnRhZzs1IT09YiYmNiE9PWJ8fGEuYW5jZXN0b3JzLnB1c2goYyk7Yz10YyhkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1uYyhhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO3ZhciBmPWEubmF0aXZlRXZlbnQsZz1hLmV2ZW50U3lzdGVtRmxhZ3M7MD09PWMmJihnfD02NCk7Zm9yKHZhciBoPW51bGwsaz0wO2s8c2EubGVuZ3RoO2srKyl7dmFyIGw9c2Fba107bCYmKGw9bC5leHRyYWN0RXZlbnRzKGQsYixmLGUsZykpJiYoaD1cbmljKGgsbCkpfW1jKGgpfX1mdW5jdGlvbiB1YyhhLGIsYyl7aWYoIWMuaGFzKGEpKXtzd2l0Y2goYSl7Y2FzZSBcInNjcm9sbFwiOnZjKGIsXCJzY3JvbGxcIiwhMCk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjp2YyhiLFwiZm9jdXNcIiwhMCk7dmMoYixcImJsdXJcIiwhMCk7Yy5zZXQoXCJibHVyXCIsbnVsbCk7Yy5zZXQoXCJmb2N1c1wiLG51bGwpO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpvYyhhKSYmdmMoYixhLCEwKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09YWMuaW5kZXhPZihhKSYmRihhLGIpfWMuc2V0KGEsbnVsbCl9fVxudmFyIHdjLHhjLHljLHpjPSExLEFjPVtdLEJjPW51bGwsQ2M9bnVsbCxEYz1udWxsLEVjPW5ldyBNYXAsRmM9bmV3IE1hcCxHYz1bXSxIYz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNsb3NlIGNhbmNlbCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpLEljPVwiZm9jdXMgYmx1ciBkcmFnZW50ZXIgZHJhZ2xlYXZlIG1vdXNlb3ZlciBtb3VzZW91dCBwb2ludGVyb3ZlciBwb2ludGVyb3V0IGdvdHBvaW50ZXJjYXB0dXJlIGxvc3Rwb2ludGVyY2FwdHVyZVwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIEpjKGEsYil7dmFyIGM9Y2MoYik7SGMuZm9yRWFjaChmdW5jdGlvbihhKXt1YyhhLGIsYyl9KTtJYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3VjKGEsYixjKX0pfWZ1bmN0aW9uIEtjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLHRvcExldmVsVHlwZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wzMixuYXRpdmVFdmVudDplLGNvbnRhaW5lcjpkfX1cbmZ1bmN0aW9uIExjKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6QmM9bnVsbDticmVhaztjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdsZWF2ZVwiOkNjPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJtb3VzZW91dFwiOkRjPW51bGw7YnJlYWs7Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpFYy5kZWxldGUoYi5wb2ludGVySWQpO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpGYy5kZWxldGUoYi5wb2ludGVySWQpfX1mdW5jdGlvbiBNYyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPUtjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPU5jKGIpLG51bGwhPT1iJiZ4YyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBPYyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNcIjpyZXR1cm4gQmM9TWMoQmMsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIENjPU1jKENjLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBEYz1NYyhEYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO0VjLnNldChmLE1jKEVjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxGYy5zZXQoZixNYyhGYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBQYyhhKXt2YXIgYj10YyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPWRjKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPWVjKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KGEucHJpb3JpdHksZnVuY3Rpb24oKXt5YyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9ZnVuY3Rpb24gUWMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO3ZhciBiPVJjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLmNvbnRhaW5lcixhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yil7dmFyIGM9TmMoYik7bnVsbCE9PWMmJnhjKGMpO2EuYmxvY2tlZE9uPWI7cmV0dXJuITF9cmV0dXJuITB9XG5mdW5jdGlvbiBTYyhhLGIsYyl7UWMoYSkmJmMuZGVsZXRlKGIpfWZ1bmN0aW9uIFRjKCl7Zm9yKHpjPSExOzA8QWMubGVuZ3RoOyl7dmFyIGE9QWNbMF07aWYobnVsbCE9PWEuYmxvY2tlZE9uKXthPU5jKGEuYmxvY2tlZE9uKTtudWxsIT09YSYmd2MoYSk7YnJlYWt9dmFyIGI9UmMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEuY29udGFpbmVyLGEubmF0aXZlRXZlbnQpO251bGwhPT1iP2EuYmxvY2tlZE9uPWI6QWMuc2hpZnQoKX1udWxsIT09QmMmJlFjKEJjKSYmKEJjPW51bGwpO251bGwhPT1DYyYmUWMoQ2MpJiYoQ2M9bnVsbCk7bnVsbCE9PURjJiZRYyhEYykmJihEYz1udWxsKTtFYy5mb3JFYWNoKFNjKTtGYy5mb3JFYWNoKFNjKX1mdW5jdGlvbiBVYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsemN8fCh6Yz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxUYykpKX1cbmZ1bmN0aW9uIFZjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIFVjKGIsYSl9aWYoMDxBYy5sZW5ndGgpe1VjKEFjWzBdLGEpO2Zvcih2YXIgYz0xO2M8QWMubGVuZ3RoO2MrKyl7dmFyIGQ9QWNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1CYyYmVWMoQmMsYSk7bnVsbCE9PUNjJiZVYyhDYyxhKTtudWxsIT09RGMmJlVjKERjLGEpO0VjLmZvckVhY2goYik7RmMuZm9yRWFjaChiKTtmb3IoYz0wO2M8R2MubGVuZ3RoO2MrKylkPUdjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxHYy5sZW5ndGgmJihjPUdjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KVBjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmR2Muc2hpZnQoKX1cbnZhciBXYz17fSxZYz1uZXcgTWFwLFpjPW5ldyBNYXAsJGM9W1wiYWJvcnRcIixcImFib3J0XCIsWGIsXCJhbmltYXRpb25FbmRcIixZYixcImFuaW1hdGlvbkl0ZXJhdGlvblwiLFpiLFwiYW5pbWF0aW9uU3RhcnRcIixcImNhbnBsYXlcIixcImNhblBsYXlcIixcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiLFwiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCIsXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCIsXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiLFwiZW5kZWRcIixcImVuZGVkXCIsXCJlcnJvclwiLFwiZXJyb3JcIixcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiLFwibG9hZFwiLFwibG9hZFwiLFwibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiLFwibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCIsXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiLFwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFxuXCJzZWVraW5nXCIsXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCIsXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCIsXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCIsJGIsXCJ0cmFuc2l0aW9uRW5kXCIsXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdO2Z1bmN0aW9uIGFkKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKz0yKXt2YXIgZD1hW2NdLGU9YVtjKzFdLGY9XCJvblwiKyhlWzBdLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSk7Zj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZixjYXB0dXJlZDpmK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2RdLGV2ZW50UHJpb3JpdHk6Yn07WmMuc2V0KGQsYik7WWMuc2V0KGQsZik7V2NbZV09Zn19XG5hZChcImJsdXIgYmx1ciBjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1cyBmb2N1cyBpbnB1dCBpbnB1dCBpbnZhbGlkIGludmFsaWQga2V5ZG93biBrZXlEb3duIGtleXByZXNzIGtleVByZXNzIGtleXVwIGtleVVwIG1vdXNlZG93biBtb3VzZURvd24gbW91c2V1cCBtb3VzZVVwIHBhc3RlIHBhc3RlIHBhdXNlIHBhdXNlIHBsYXkgcGxheSBwb2ludGVyY2FuY2VsIHBvaW50ZXJDYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlckRvd24gcG9pbnRlcnVwIHBvaW50ZXJVcCByYXRlY2hhbmdlIHJhdGVDaGFuZ2UgcmVzZXQgcmVzZXQgc2Vla2VkIHNlZWtlZCBzdWJtaXQgc3VibWl0IHRvdWNoY2FuY2VsIHRvdWNoQ2FuY2VsIHRvdWNoZW5kIHRvdWNoRW5kIHRvdWNoc3RhcnQgdG91Y2hTdGFydCB2b2x1bWVjaGFuZ2Ugdm9sdW1lQ2hhbmdlXCIuc3BsaXQoXCIgXCIpLDApO1xuYWQoXCJkcmFnIGRyYWcgZHJhZ2VudGVyIGRyYWdFbnRlciBkcmFnZXhpdCBkcmFnRXhpdCBkcmFnbGVhdmUgZHJhZ0xlYXZlIGRyYWdvdmVyIGRyYWdPdmVyIG1vdXNlbW92ZSBtb3VzZU1vdmUgbW91c2VvdXQgbW91c2VPdXQgbW91c2VvdmVyIG1vdXNlT3ZlciBwb2ludGVybW92ZSBwb2ludGVyTW92ZSBwb2ludGVyb3V0IHBvaW50ZXJPdXQgcG9pbnRlcm92ZXIgcG9pbnRlck92ZXIgc2Nyb2xsIHNjcm9sbCB0b2dnbGUgdG9nZ2xlIHRvdWNobW92ZSB0b3VjaE1vdmUgd2hlZWwgd2hlZWxcIi5zcGxpdChcIiBcIiksMSk7YWQoJGMsMik7Zm9yKHZhciBiZD1cImNoYW5nZSBzZWxlY3Rpb25jaGFuZ2UgdGV4dElucHV0IGNvbXBvc2l0aW9uc3RhcnQgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb251cGRhdGVcIi5zcGxpdChcIiBcIiksY2Q9MDtjZDxiZC5sZW5ndGg7Y2QrKylaYy5zZXQoYmRbY2RdLDApO1xudmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gRihhLGIpe3ZjKGIsYSwhMSl9ZnVuY3Rpb24gdmMoYSxiLGMpe3ZhciBkPVpjLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZD8yOmQpe2Nhc2UgMDpkPWdkLmJpbmQobnVsbCxiLDEsYSk7YnJlYWs7Y2FzZSAxOmQ9aGQuYmluZChudWxsLGIsMSxhKTticmVhaztkZWZhdWx0OmQ9aWQuYmluZChudWxsLGIsMSxhKX1jP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITApOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGQsITEpfWZ1bmN0aW9uIGdkKGEsYixjLGQpe0phfHxIYSgpO3ZhciBlPWlkLGY9SmE7SmE9ITA7dHJ5e0dhKGUsYSxiLGMsZCl9ZmluYWxseXsoSmE9Zil8fExhKCl9fWZ1bmN0aW9uIGhkKGEsYixjLGQpe2VkKGRkLGlkLmJpbmQobnVsbCxhLGIsYyxkKSl9XG5mdW5jdGlvbiBpZChhLGIsYyxkKXtpZihmZClpZigwPEFjLmxlbmd0aCYmLTE8SGMuaW5kZXhPZihhKSlhPUtjKG51bGwsYSxiLGMsZCksQWMucHVzaChhKTtlbHNle3ZhciBlPVJjKGEsYixjLGQpO2lmKG51bGw9PT1lKUxjKGEsZCk7ZWxzZSBpZigtMTxIYy5pbmRleE9mKGEpKWE9S2MoZSxhLGIsYyxkKSxBYy5wdXNoKGEpO2Vsc2UgaWYoIU9jKGUsYSxiLGMsZCkpe0xjKGEsZCk7YT1yYyhhLGQsbnVsbCxiKTt0cnl7TWEoc2MsYSl9ZmluYWxseXtxYyhhKX19fX1cbmZ1bmN0aW9uIFJjKGEsYixjLGQpe2M9bmMoZCk7Yz10YyhjKTtpZihudWxsIT09Yyl7dmFyIGU9ZGMoYyk7aWYobnVsbD09PWUpYz1udWxsO2Vsc2V7dmFyIGY9ZS50YWc7aWYoMTM9PT1mKXtjPWVjKGUpO2lmKG51bGwhPT1jKXJldHVybiBjO2M9bnVsbH1lbHNlIGlmKDM9PT1mKXtpZihlLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09ZS50YWc/ZS5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2M9bnVsbH1lbHNlIGUhPT1jJiYoYz1udWxsKX19YT1yYyhhLGQsYyxiKTt0cnl7TWEoc2MsYSl9ZmluYWxseXtxYyhhKX1yZXR1cm4gbnVsbH1cbnZhciBqZD17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxrZD1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMoamQpLmZvckVhY2goZnVuY3Rpb24oYSl7a2QuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtqZFtiXT1qZFthXX0pfSk7ZnVuY3Rpb24gbGQoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGpkLmhhc093blByb3BlcnR5KGEpJiZqZFthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBtZChhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1sZChjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBuZD1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gb2QoYSxiKXtpZihiKXtpZihuZFthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoMTM3LGEsXCJcIikpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IodSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IodSg2MixcIlwiKSk7fX1cbmZ1bmN0aW9uIHBkKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgcWQ9TWIuaHRtbDtmdW5jdGlvbiByZChhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1jYyhhKTtiPXdhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXVjKGJbZF0sYSxjKX1mdW5jdGlvbiBzZCgpe31cbmZ1bmN0aW9uIHRkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiB1ZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9ZnVuY3Rpb24gdmQoYSxiKXt2YXIgYz11ZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz11ZChjKX19XG5mdW5jdGlvbiB3ZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP3dkKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1mdW5jdGlvbiB4ZCgpe2Zvcih2YXIgYT13aW5kb3csYj10ZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj10ZChhLmRvY3VtZW50KX1yZXR1cm4gYn1cbmZ1bmN0aW9uIHlkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9dmFyIHpkPVwiJFwiLEFkPVwiLyRcIixCZD1cIiQ/XCIsQ2Q9XCIkIVwiLERkPW51bGwsRWQ9bnVsbDtmdW5jdGlvbiBGZChhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiBHZChhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIEhkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLElkPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtmdW5jdGlvbiBKZChhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVha31yZXR1cm4gYX1cbmZ1bmN0aW9uIEtkKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PXpkfHxjPT09Q2R8fGM9PT1CZCl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2UgYz09PUFkJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgTGQ9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksTWQ9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitMZCxOZD1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0xkLE9kPVwiX19yZWFjdENvbnRhaW5lcmUkXCIrTGQ7XG5mdW5jdGlvbiB0YyhhKXt2YXIgYj1hW01kXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tPZF18fGNbTWRdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9S2QoYSk7bnVsbCE9PWE7KXtpZihjPWFbTWRdKXJldHVybiBjO2E9S2QoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIE5jKGEpe2E9YVtNZF18fGFbT2RdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiBQZChhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IodSgzMykpO31mdW5jdGlvbiBRZChhKXtyZXR1cm4gYVtOZF18fG51bGx9XG5mdW5jdGlvbiBSZChhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfVxuZnVuY3Rpb24gU2QoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD1sYShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMpdGhyb3cgRXJyb3IodSgyMzEsXG5iLHR5cGVvZiBjKSk7cmV0dXJuIGN9ZnVuY3Rpb24gVGQoYSxiLGMpe2lmKGI9U2QoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz1pYyhjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1pYyhjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1mdW5jdGlvbiBVZChhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPVJkKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylUZChjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKVRkKGNbYl0sXCJidWJibGVkXCIsYSl9fVxuZnVuY3Rpb24gVmQoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9U2QoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPWljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPWljKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBXZChhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlZkKGEuX3RhcmdldEluc3QsbnVsbCxhKX1mdW5jdGlvbiBYZChhKXtqYyhhLFVkKX12YXIgWWQ9bnVsbCxaZD1udWxsLCRkPW51bGw7XG5mdW5jdGlvbiBhZSgpe2lmKCRkKXJldHVybiAkZDt2YXIgYSxiPVpkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIFlkP1lkLnZhbHVlOllkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuICRkPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gYmUoKXtyZXR1cm4hMH1mdW5jdGlvbiBjZSgpe3JldHVybiExfVxuZnVuY3Rpb24gRyhhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/YmU6Y2U7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1jZTtyZXR1cm4gdGhpc31cbm4oRy5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1iZSl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1iZSl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1iZX0saXNQZXJzaXN0ZW50OmNlLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWNlO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7Ry5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5HLmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2RlKGMpO3JldHVybiBjfTtkZShHKTtmdW5jdGlvbiBlZShhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1cbmZ1bmN0aW9uIGZlKGEpe2lmKCEoYSBpbnN0YW5jZW9mIHRoaXMpKXRocm93IEVycm9yKHUoMjc5KSk7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfWZ1bmN0aW9uIGRlKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPWVlO2EucmVsZWFzZT1mZX12YXIgZ2U9Ry5leHRlbmQoe2RhdGE6bnVsbH0pLGhlPUcuZXh0ZW5kKHtkYXRhOm51bGx9KSxpZT1bOSwxMywyNywzMl0samU9eWEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGtlPW51bGw7eWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGtlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgbGU9eWEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFrZSxtZT15YSYmKCFqZXx8a2UmJjg8a2UmJjExPj1rZSksbmU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksb2U9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0scGU9ITE7XG5mdW5jdGlvbiBxZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PWllLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gcmUoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgc2U9ITE7ZnVuY3Rpb24gdGUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHJlKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDtwZT0hMDtyZXR1cm4gbmU7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09bmUmJnBlP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIHVlKGEsYil7aWYoc2UpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IWplJiZxZShhLGIpPyhhPWFlKCksJGQ9WmQ9WWQ9bnVsbCxzZT0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gbWUmJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIHZlPXtldmVudFR5cGVzOm9lLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU7aWYoamUpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6dmFyIGY9b2UuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmY9b2UuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpmPW9lLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9Zj12b2lkIDB9ZWxzZSBzZT9xZShhLGMpJiYoZj1vZS5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihmPW9lLmNvbXBvc2l0aW9uU3RhcnQpO2Y/KG1lJiZcImtvXCIhPT1jLmxvY2FsZSYmKHNlfHxmIT09b2UuY29tcG9zaXRpb25TdGFydD9mPT09b2UuY29tcG9zaXRpb25FbmQmJnNlJiYoZT1hZSgpKTooWWQ9ZCxaZD1cInZhbHVlXCJpbiBZZD9ZZC52YWx1ZTpZZC50ZXh0Q29udGVudCxzZT0hMCkpLGY9Z2UuZ2V0UG9vbGVkKGYsXG5iLGMsZCksZT9mLmRhdGE9ZTooZT1yZShjKSxudWxsIT09ZSYmKGYuZGF0YT1lKSksWGQoZiksZT1mKTplPW51bGw7KGE9bGU/dGUoYSxjKTp1ZShhLGMpKT8oYj1oZS5nZXRQb29sZWQob2UuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFhkKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1lP2I6bnVsbD09PWI/ZTpbZSxiXX19LHdlPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIHhlKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhd2VbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxudmFyIHllPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIHplKGEsYixjKXthPUcuZ2V0UG9vbGVkKHllLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7RGEoYyk7WGQoYSk7cmV0dXJuIGF9dmFyIEFlPW51bGwsQmU9bnVsbDtmdW5jdGlvbiBDZShhKXttYyhhKX1mdW5jdGlvbiBEZShhKXt2YXIgYj1QZChhKTtpZih5YihiKSlyZXR1cm4gYX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBGZT0hMTt5YSYmKEZlPW9jKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO1xuZnVuY3Rpb24gR2UoKXtBZSYmKEFlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEhlKSxCZT1BZT1udWxsKX1mdW5jdGlvbiBIZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmRGUoQmUpKWlmKGE9emUoQmUsYSxuYyhhKSksSmEpbWMoYSk7ZWxzZXtKYT0hMDt0cnl7RmEoQ2UsYSl9ZmluYWxseXtKYT0hMSxMYSgpfX19ZnVuY3Rpb24gSWUoYSxiLGMpe1wiZm9jdXNcIj09PWE/KEdlKCksQWU9YixCZT1jLEFlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEhlKSk6XCJibHVyXCI9PT1hJiZHZSgpfWZ1bmN0aW9uIEplKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIERlKEJlKX1mdW5jdGlvbiBLZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIERlKGIpfWZ1bmN0aW9uIExlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIERlKGIpfVxudmFyIE1lPXtldmVudFR5cGVzOnllLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6RmUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP1BkKGIpOndpbmRvdyxmPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09Znx8XCJpbnB1dFwiPT09ZiYmXCJmaWxlXCI9PT1lLnR5cGUpdmFyIGc9RWU7ZWxzZSBpZih4ZShlKSlpZihGZSlnPUxlO2Vsc2V7Zz1KZTt2YXIgaD1JZX1lbHNlKGY9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWYudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGc9S2UpO2lmKGcmJihnPWcoYSxiKSkpcmV0dXJuIHplKGcsYyxkKTtoJiZoKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRGIoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sTmU9Ry5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFxuT2U9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBlKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2VbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBRZSgpe3JldHVybiBQZX1cbnZhciBSZT0wLFNlPTAsVGU9ITEsVWU9ITEsVmU9TmUuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPVJlO1JlPWEuc2NyZWVuWDtyZXR1cm4gVGU/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihUZT0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPVNlO1NlPWEuc2NyZWVuWTtyZXR1cm4gVWU/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihVZT0hMCwwKX19KSxXZT1WZS5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksWGU9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LFllPXtldmVudFR5cGVzOlhlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxnPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihmJiYwPT09KGUmMzIpJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWcmJiFmKXJldHVybiBudWxsO2Y9ZC53aW5kb3c9PT1kP2Q6KGY9ZC5vd25lckRvY3VtZW50KT9mLmRlZmF1bHRWaWV3fHxmLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoZyl7aWYoZz1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/dGMoYik6bnVsbCxudWxsIT09Yil7dmFyIGg9ZGMoYik7aWYoYiE9PWh8fDUhPT1iLnRhZyYmNiE9PWIudGFnKWI9bnVsbH19ZWxzZSBnPW51bGw7aWYoZz09PWIpcmV0dXJuIG51bGw7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PVxuYSl7dmFyIGs9VmU7dmFyIGw9WGUubW91c2VMZWF2ZTt2YXIgbT1YZS5tb3VzZUVudGVyO3ZhciBwPVwibW91c2VcIn1lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlrPVdlLGw9WGUucG9pbnRlckxlYXZlLG09WGUucG9pbnRlckVudGVyLHA9XCJwb2ludGVyXCI7YT1udWxsPT1nP2Y6UGQoZyk7Zj1udWxsPT1iP2Y6UGQoYik7bD1rLmdldFBvb2xlZChsLGcsYyxkKTtsLnR5cGU9cCtcImxlYXZlXCI7bC50YXJnZXQ9YTtsLnJlbGF0ZWRUYXJnZXQ9ZjtjPWsuZ2V0UG9vbGVkKG0sYixjLGQpO2MudHlwZT1wK1wiZW50ZXJcIjtjLnRhcmdldD1mO2MucmVsYXRlZFRhcmdldD1hO2Q9ZztwPWI7aWYoZCYmcClhOntrPWQ7bT1wO2c9MDtmb3IoYT1rO2E7YT1SZChhKSlnKys7YT0wO2ZvcihiPW07YjtiPVJkKGIpKWErKztmb3IoOzA8Zy1hOylrPVJkKGspLGctLTtmb3IoOzA8YS1nOyltPVJkKG0pLGEtLTtmb3IoO2ctLTspe2lmKGs9PT1tfHxrPT09bS5hbHRlcm5hdGUpYnJlYWsgYTtcbms9UmQoayk7bT1SZChtKX1rPW51bGx9ZWxzZSBrPW51bGw7bT1rO2ZvcihrPVtdO2QmJmQhPT1tOyl7Zz1kLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PW0pYnJlYWs7ay5wdXNoKGQpO2Q9UmQoZCl9Zm9yKGQ9W107cCYmcCE9PW07KXtnPXAuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09bSlicmVhaztkLnB1c2gocCk7cD1SZChwKX1mb3IocD0wO3A8ay5sZW5ndGg7cCsrKVZkKGtbcF0sXCJidWJibGVkXCIsbCk7Zm9yKHA9ZC5sZW5ndGg7MDxwLS07KVZkKGRbcF0sXCJjYXB0dXJlZFwiLGMpO3JldHVybiAwPT09KGUmNjQpP1tsXTpbbCxjXX19O2Z1bmN0aW9uIFplKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgJGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6WmUsYWY9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIGJmKGEsYil7aWYoJGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFhZi5jYWxsKGIsY1tkXSl8fCEkZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfVxudmFyIGNmPXlhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsZGY9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LGVmPW51bGwsZmY9bnVsbCxnZj1udWxsLGhmPSExO1xuZnVuY3Rpb24gamYoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZihoZnx8bnVsbD09ZWZ8fGVmIT09dGQoYykpcmV0dXJuIG51bGw7Yz1lZjtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZ5ZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBnZiYmYmYoZ2YsYyk/bnVsbDooZ2Y9YyxhPUcuZ2V0UG9vbGVkKGRmLnNlbGVjdCxmZixhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PWVmLFhkKGEpLGEpfVxudmFyIGtmPXtldmVudFR5cGVzOmRmLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCxlLGYpe2U9Znx8KGQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50KTtpZighKGY9IWUpKXthOntlPWNjKGUpO2Y9d2Eub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspaWYoIWUuaGFzKGZbZ10pKXtlPSExO2JyZWFrIGF9ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP1BkKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoeGUoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpZWY9ZSxmZj1iLGdmPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpnZj1mZj1lZj1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpoZj0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuIGhmPSExLGpmKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKGNmKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gamYoYyxkKX1yZXR1cm4gbnVsbH19LGxmPUcuZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxtZj1HLmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLG5mPU5lLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7ZnVuY3Rpb24gb2YoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgcGY9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LHFmPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxyZj1OZS5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9cGZbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9b2YoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP3FmW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZSxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZihhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZihhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHNmPVZlLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSx0Zj1OZS5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZX0pLHVmPUcuZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHZmPVZlLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksd2Y9e2V2ZW50VHlwZXM6V2MsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1ZYy5nZXQoYSk7aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZihjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9cmY7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPW5mO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9XG5WZTticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPXNmO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9dGY7YnJlYWs7Y2FzZSBYYjpjYXNlIFliOmNhc2UgWmI6YT1sZjticmVhaztjYXNlICRiOmE9dWY7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9TmU7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT12ZjticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPW1mO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9XG5XZTticmVhaztkZWZhdWx0OmE9R31iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1hkKGIpO3JldHVybiBifX07aWYocGEpdGhyb3cgRXJyb3IodSgxMDEpKTtwYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTtyYSgpO3ZhciB4Zj1OYztsYT1RZDttYT14ZjtuYT1QZDt4YSh7U2ltcGxlRXZlbnRQbHVnaW46d2YsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOlllLENoYW5nZUV2ZW50UGx1Z2luOk1lLFNlbGVjdEV2ZW50UGx1Z2luOmtmLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46dmV9KTt2YXIgeWY9W10semY9LTE7ZnVuY3Rpb24gSChhKXswPnpmfHwoYS5jdXJyZW50PXlmW3pmXSx5Zlt6Zl09bnVsbCx6Zi0tKX1cbmZ1bmN0aW9uIEkoYSxiKXt6ZisrO3lmW3pmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEFmPXt9LEo9e2N1cnJlbnQ6QWZ9LEs9e2N1cnJlbnQ6ITF9LEJmPUFmO2Z1bmN0aW9uIENmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQWY7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gTChhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfVxuZnVuY3Rpb24gRGYoKXtIKEspO0goSil9ZnVuY3Rpb24gRWYoYSxiLGMpe2lmKEouY3VycmVudCE9PUFmKXRocm93IEVycm9yKHUoMTY4KSk7SShKLGIpO0koSyxjKX1mdW5jdGlvbiBGZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpaWYoIShlIGluIGEpKXRocm93IEVycm9yKHUoMTA4LHBiKGIpfHxcIlVua25vd25cIixlKSk7cmV0dXJuIG4oe30sYyx7fSxkKX1mdW5jdGlvbiBHZihhKXthPShhPWEuc3RhdGVOb2RlKSYmYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8QWY7QmY9Si5jdXJyZW50O0koSixhKTtJKEssSy5jdXJyZW50KTtyZXR1cm4hMH1cbmZ1bmN0aW9uIEhmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih1KDE2OSkpO2M/KGE9RmYoYSxiLEJmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsSChLKSxIKEopLEkoSixhKSk6SChLKTtJKEssYyl9XG52YXIgSWY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksSmY9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLEtmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssTGY9ci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsTWY9ci51bnN0YWJsZV9ub3csTmY9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxPZj1yLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFBmPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksUWY9ci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxSZj1yLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFNmPXIudW5zdGFibGVfSWRsZVByaW9yaXR5LFRmPXt9LFVmPXIudW5zdGFibGVfc2hvdWxkWWllbGQsVmY9dm9pZCAwIT09TGY/TGY6ZnVuY3Rpb24oKXt9LFdmPW51bGwsWGY9bnVsbCxZZj0hMSxaZj1NZigpLCRmPTFFND5aZj9NZjpmdW5jdGlvbigpe3JldHVybiBNZigpLVpmfTtcbmZ1bmN0aW9uIGFnKCl7c3dpdGNoKE5mKCkpe2Nhc2UgT2Y6cmV0dXJuIDk5O2Nhc2UgUGY6cmV0dXJuIDk4O2Nhc2UgUWY6cmV0dXJuIDk3O2Nhc2UgUmY6cmV0dXJuIDk2O2Nhc2UgU2Y6cmV0dXJuIDk1O2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGJnKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiBPZjtjYXNlIDk4OnJldHVybiBQZjtjYXNlIDk3OnJldHVybiBRZjtjYXNlIDk2OnJldHVybiBSZjtjYXNlIDk1OnJldHVybiBTZjtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBjZyhhLGIpe2E9YmcoYSk7cmV0dXJuIElmKGEsYil9ZnVuY3Rpb24gZGcoYSxiLGMpe2E9YmcoYSk7cmV0dXJuIEpmKGEsYixjKX1mdW5jdGlvbiBlZyhhKXtudWxsPT09V2Y/KFdmPVthXSxYZj1KZihPZixmZykpOldmLnB1c2goYSk7cmV0dXJuIFRmfWZ1bmN0aW9uIGdnKCl7aWYobnVsbCE9PVhmKXt2YXIgYT1YZjtYZj1udWxsO0tmKGEpfWZnKCl9XG5mdW5jdGlvbiBmZygpe2lmKCFZZiYmbnVsbCE9PVdmKXtZZj0hMDt2YXIgYT0wO3RyeXt2YXIgYj1XZjtjZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7V2Y9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09V2YmJihXZj1XZi5zbGljZShhKzEpKSxKZihPZixnZyksYzt9ZmluYWxseXtZZj0hMX19fWZ1bmN0aW9uIGhnKGEsYixjKXtjLz0xMDtyZXR1cm4gMTA3Mzc0MTgyMS0oKCgxMDczNzQxODIxLWErYi8xMCkvY3wwKSsxKSpjfWZ1bmN0aW9uIGlnKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bih7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pfXJldHVybiBifXZhciBqZz17Y3VycmVudDpudWxsfSxrZz1udWxsLGxnPW51bGwsbWc9bnVsbDtmdW5jdGlvbiBuZygpe21nPWxnPWtnPW51bGx9XG5mdW5jdGlvbiBvZyhhKXt2YXIgYj1qZy5jdXJyZW50O0goamcpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gcGcoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5hbHRlcm5hdGU7aWYoYS5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYS5jaGlsZEV4cGlyYXRpb25UaW1lPWIsbnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2Vsc2UgaWYobnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWMuY2hpbGRFeHBpcmF0aW9uVGltZT1iO2Vsc2UgYnJlYWs7YT1hLnJldHVybn19ZnVuY3Rpb24gcWcoYSxiKXtrZz1hO21nPWxnPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoYS5leHBpcmF0aW9uVGltZT49YiYmKHJnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1cbmZ1bmN0aW9uIHNnKGEsYil7aWYobWchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKW1nPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1sZyl7aWYobnVsbD09PWtnKXRocm93IEVycm9yKHUoMzA4KSk7bGc9YjtrZy5kZXBlbmRlbmNpZXM9e2V4cGlyYXRpb25UaW1lOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIGxnPWxnLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciB0Zz0hMTtmdW5jdGlvbiB1ZyhhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGJhc2VRdWV1ZTpudWxsLHNoYXJlZDp7cGVuZGluZzpudWxsfSxlZmZlY3RzOm51bGx9fVxuZnVuY3Rpb24gdmcoYSxiKXthPWEudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT09PWEmJihiLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5iYXNlU3RhdGUsYmFzZVF1ZXVlOmEuYmFzZVF1ZXVlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHdnKGEsYil7YT17ZXhwaXJhdGlvblRpbWU6YSxzdXNwZW5zZUNvbmZpZzpiLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbH07cmV0dXJuIGEubmV4dD1hfWZ1bmN0aW9uIHhnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24geWcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmdmcoYyxhKTthPWEudXBkYXRlUXVldWU7Yz1hLmJhc2VRdWV1ZTtudWxsPT09Yz8oYS5iYXNlUXVldWU9Yi5uZXh0PWIsYi5uZXh0PWIpOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKX1cbmZ1bmN0aW9uIHpnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7dGc9ITE7dmFyIGY9ZS5iYXNlUXVldWUsZz1lLnNoYXJlZC5wZW5kaW5nO2lmKG51bGwhPT1nKXtpZihudWxsIT09Zil7dmFyIGg9Zi5uZXh0O2YubmV4dD1nLm5leHQ7Zy5uZXh0PWh9Zj1nO2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDtoPWEuYWx0ZXJuYXRlO251bGwhPT1oJiYoaD1oLnVwZGF0ZVF1ZXVlLG51bGwhPT1oJiYoaC5iYXNlUXVldWU9ZykpfWlmKG51bGwhPT1mKXtoPWYubmV4dDt2YXIgaz1lLmJhc2VTdGF0ZSxsPTAsbT1udWxsLHA9bnVsbCx4PW51bGw7aWYobnVsbCE9PWgpe3ZhciB6PWg7ZG97Zz16LmV4cGlyYXRpb25UaW1lO2lmKGc8ZCl7dmFyIGNhPXtleHBpcmF0aW9uVGltZTp6LmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOnouc3VzcGVuc2VDb25maWcsdGFnOnoudGFnLHBheWxvYWQ6ei5wYXlsb2FkLGNhbGxiYWNrOnouY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09eD8ocD14PVxuY2EsbT1rKTp4PXgubmV4dD1jYTtnPmwmJihsPWcpfWVsc2V7bnVsbCE9PXgmJih4PXgubmV4dD17ZXhwaXJhdGlvblRpbWU6MTA3Mzc0MTgyMyxzdXNwZW5zZUNvbmZpZzp6LnN1c3BlbnNlQ29uZmlnLHRhZzp6LnRhZyxwYXlsb2FkOnoucGF5bG9hZCxjYWxsYmFjazp6LmNhbGxiYWNrLG5leHQ6bnVsbH0pO0FnKGcsei5zdXNwZW5zZUNvbmZpZyk7YTp7dmFyIEQ9YSx0PXo7Zz1iO2NhPWM7c3dpdGNoKHQudGFnKXtjYXNlIDE6RD10LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEQpe2s9RC5jYWxsKGNhLGssZyk7YnJlYWsgYX1rPUQ7YnJlYWsgYTtjYXNlIDM6RC5lZmZlY3RUYWc9RC5lZmZlY3RUYWcmLTQwOTd8NjQ7Y2FzZSAwOkQ9dC5wYXlsb2FkO2c9XCJmdW5jdGlvblwiPT09dHlwZW9mIEQ/RC5jYWxsKGNhLGssZyk6RDtpZihudWxsPT09Z3x8dm9pZCAwPT09ZylicmVhayBhO2s9bih7fSxrLGcpO2JyZWFrIGE7Y2FzZSAyOnRnPSEwfX1udWxsIT09ei5jYWxsYmFjayYmXG4oYS5lZmZlY3RUYWd8PTMyLGc9ZS5lZmZlY3RzLG51bGw9PT1nP2UuZWZmZWN0cz1bel06Zy5wdXNoKHopKX16PXoubmV4dDtpZihudWxsPT09enx8ej09PWgpaWYoZz1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1nKWJyZWFrO2Vsc2Ugej1mLm5leHQ9Zy5uZXh0LGcubmV4dD1oLGUuYmFzZVF1ZXVlPWY9ZyxlLnNoYXJlZC5wZW5kaW5nPW51bGx9d2hpbGUoMSl9bnVsbD09PXg/bT1rOngubmV4dD1wO2UuYmFzZVN0YXRlPW07ZS5iYXNlUXVldWU9eDtCZyhsKTthLmV4cGlyYXRpb25UaW1lPWw7YS5tZW1vaXplZFN0YXRlPWt9fVxuZnVuY3Rpb24gQ2coYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1lO2U9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCl0aHJvdyBFcnJvcih1KDE5MSxkKSk7ZC5jYWxsKGUpfX19dmFyIERnPVdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLEVnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO2Z1bmN0aW9uIEZnKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpuKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7MD09PWEuZXhwaXJhdGlvblRpbWUmJihhLnVwZGF0ZVF1ZXVlLmJhc2VTdGF0ZT1jKX1cbnZhciBKZz17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/ZGMoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXdnKGQsZSk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3hnKGEsZSk7SWcoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9d2coZCxlKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTt4ZyhhLGUpO0lnKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPUdnKCksZD1EZy5zdXNwZW5zZTtcbmM9SGcoYyxhLGQpO2Q9d2coYyxkKTtkLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTt4ZyhhLGQpO0lnKGEsYyl9fTtmdW5jdGlvbiBLZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFiZihjLGQpfHwhYmYoZSxmKTohMH1cbmZ1bmN0aW9uIExnKGEsYixjKXt2YXIgZD0hMSxlPUFmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXNnKGYpOihlPUwoYik/QmY6Si5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/Q2YoYSxlKTpBZik7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPUpnO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE1nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZKZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9RWc7dWcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1zZyhmKTooZj1MKGIpP0JmOkouY3VycmVudCxlLmNvbnRleHQ9Q2YoYSxmKSk7emcoYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKEZnKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxuKGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJkpnLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLHpnKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgT2c9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFBnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih1KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1FZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih1KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih1KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUWcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IodSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIikpO31cbmZ1bmN0aW9uIFJnKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVNnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVRnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVBnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1VZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1QZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVZnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1XZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHAoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVRnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBjPVVnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVBnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSAkYTpyZXR1cm4gYj1WZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoT2coYil8fFxubmIoYikpcmV0dXJuIGI9V2coYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UWcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09YWI/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlICRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKE9nKGMpfHxuYihjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7UWcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB6KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PWFiP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlICRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKE9nKGQpfHxuYihkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7UWcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBjYShlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCx0PW51bGwsbT1nLHk9Zz0wLEE9bnVsbDtudWxsIT09bSYmeTxoLmxlbmd0aDt5Kyspe20uaW5kZXg+eT8oQT1tLG09bnVsbCk6QT1tLnNpYmxpbmc7dmFyIHE9eChlLG0saFt5XSxrKTtpZihudWxsPT09cSl7bnVsbD09PW0mJihtPUEpO2JyZWFrfWEmJlxubSYmbnVsbD09PXEuYWx0ZXJuYXRlJiZiKGUsbSk7Zz1mKHEsZyx5KTtudWxsPT09dD9sPXE6dC5zaWJsaW5nPXE7dD1xO209QX1pZih5PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxtKSxsO2lmKG51bGw9PT1tKXtmb3IoO3k8aC5sZW5ndGg7eSsrKW09cChlLGhbeV0sayksbnVsbCE9PW0mJihnPWYobSxnLHkpLG51bGw9PT10P2w9bTp0LnNpYmxpbmc9bSx0PW0pO3JldHVybiBsfWZvcihtPWQoZSxtKTt5PGgubGVuZ3RoO3krKylBPXoobSxlLHksaFt5XSxrKSxudWxsIT09QSYmKGEmJm51bGwhPT1BLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PUEua2V5P3k6QS5rZXkpLGc9ZihBLGcseSksbnVsbD09PXQ/bD1BOnQuc2libGluZz1BLHQ9QSk7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBEKGUsZyxoLGwpe3ZhciBrPW5iKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBrKXRocm93IEVycm9yKHUoMTUwKSk7aD1rLmNhbGwoaCk7XG5pZihudWxsPT1oKXRocm93IEVycm9yKHUoMTUxKSk7Zm9yKHZhciBtPWs9bnVsbCx0PWcseT1nPTAsQT1udWxsLHE9aC5uZXh0KCk7bnVsbCE9PXQmJiFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpe3QuaW5kZXg+eT8oQT10LHQ9bnVsbCk6QT10LnNpYmxpbmc7dmFyIEQ9eChlLHQscS52YWx1ZSxsKTtpZihudWxsPT09RCl7bnVsbD09PXQmJih0PUEpO2JyZWFrfWEmJnQmJm51bGw9PT1ELmFsdGVybmF0ZSYmYihlLHQpO2c9ZihELGcseSk7bnVsbD09PW0/az1EOm0uc2libGluZz1EO209RDt0PUF9aWYocS5kb25lKXJldHVybiBjKGUsdCksaztpZihudWxsPT09dCl7Zm9yKDshcS5kb25lO3krKyxxPWgubmV4dCgpKXE9cChlLHEudmFsdWUsbCksbnVsbCE9PXEmJihnPWYocSxnLHkpLG51bGw9PT1tP2s9cTptLnNpYmxpbmc9cSxtPXEpO3JldHVybiBrfWZvcih0PWQoZSx0KTshcS5kb25lO3krKyxxPWgubmV4dCgpKXE9eih0LGUseSxxLnZhbHVlLGwpLG51bGwhPT1xJiYoYSYmbnVsbCE9PVxucS5hbHRlcm5hdGUmJnQuZGVsZXRlKG51bGw9PT1xLmtleT95OnEua2V5KSxnPWYocSxnLHkpLG51bGw9PT1tP2s9cTptLnNpYmxpbmc9cSxtPXEpO2EmJnQuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGt9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PWFiJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFphOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bCl7c3dpdGNoKGsudGFnKXtjYXNlIDc6aWYoZi50eXBlPT09YWIpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YnJlYWs7ZGVmYXVsdDppZihrLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsXG5rLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMpO2QucmVmPVBnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1jKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09YWI/KGQ9V2coZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVVnKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVBnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSAkYTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1cbmQuc2libGluZ31kPVZnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPVRnKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKE9nKGYpKXJldHVybiBjYShhLGQsZixoKTtpZihuYihmKSlyZXR1cm4gRChhLGQsZixoKTtsJiZRZyhhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOnRocm93IGE9YS50eXBlLEVycm9yKHUoMTUyLGEuZGlzcGxheU5hbWV8fGEubmFtZXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgWGc9UmcoITApLFlnPVJnKCExKSxaZz17fSwkZz17Y3VycmVudDpaZ30sYWg9e2N1cnJlbnQ6Wmd9LGJoPXtjdXJyZW50OlpnfTtcbmZ1bmN0aW9uIGNoKGEpe2lmKGE9PT1aZyl0aHJvdyBFcnJvcih1KDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIGRoKGEsYil7SShiaCxiKTtJKGFoLGEpO0koJGcsWmcpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6T2IobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPU9iKGIsYSl9SCgkZyk7SSgkZyxiKX1mdW5jdGlvbiBlaCgpe0goJGcpO0goYWgpO0goYmgpfWZ1bmN0aW9uIGZoKGEpe2NoKGJoLmN1cnJlbnQpO3ZhciBiPWNoKCRnLmN1cnJlbnQpO3ZhciBjPU9iKGIsYS50eXBlKTtiIT09YyYmKEkoYWgsYSksSSgkZyxjKSl9ZnVuY3Rpb24gZ2goYSl7YWguY3VycmVudD09PWEmJihIKCRnKSxIKGFoKSl9dmFyIE09e2N1cnJlbnQ6MH07XG5mdW5jdGlvbiBoaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxjLmRhdGE9PT1CZHx8Yy5kYXRhPT09Q2QpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9ZnVuY3Rpb24gaWgoYSxiKXtyZXR1cm57cmVzcG9uZGVyOmEscHJvcHM6Yn19XG52YXIgamg9V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixraD1XYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxsaD0wLE49bnVsbCxPPW51bGwsUD1udWxsLG1oPSExO2Z1bmN0aW9uIFEoKXt0aHJvdyBFcnJvcih1KDMyMSkpO31mdW5jdGlvbiBuaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCEkZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gb2goYSxiLGMsZCxlLGYpe2xoPWY7Tj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmV4cGlyYXRpb25UaW1lPTA7amguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9waDpxaDthPWMoZCxlKTtpZihiLmV4cGlyYXRpb25UaW1lPT09bGgpe2Y9MDtkb3tiLmV4cGlyYXRpb25UaW1lPTA7aWYoISgyNT5mKSl0aHJvdyBFcnJvcih1KDMwMSkpO2YrPTE7UD1PPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2poLmN1cnJlbnQ9cmg7YT1jKGQsZSl9d2hpbGUoYi5leHBpcmF0aW9uVGltZT09PWxoKX1qaC5jdXJyZW50PXNoO2I9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7bGg9MDtQPU89Tj1udWxsO21oPSExO2lmKGIpdGhyb3cgRXJyb3IodSgzMDApKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIHRoKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hO3JldHVybiBQfWZ1bmN0aW9uIHVoKCl7aWYobnVsbD09PU8pe3ZhciBhPU4uYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPU8ubmV4dDt2YXIgYj1udWxsPT09UD9OLm1lbW9pemVkU3RhdGU6UC5uZXh0O2lmKG51bGwhPT1iKVA9YixPPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMxMCkpO089YTthPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUsYmFzZVF1ZXVlOk8uYmFzZVF1ZXVlLHF1ZXVlOk8ucXVldWUsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWF9cmV0dXJuIFB9XG5mdW5jdGlvbiB2aChhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIHdoKGEpe3ZhciBiPXVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9TyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtlPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9Zj1udWxsLGs9ZTtkb3t2YXIgbD1rLmV4cGlyYXRpb25UaW1lO2lmKGw8bGgpe3ZhciBtPXtleHBpcmF0aW9uVGltZTprLmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOmsuc3VzcGVuc2VDb25maWcsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bSxmPWQpOmg9aC5uZXh0PW07bD5OLmV4cGlyYXRpb25UaW1lJiZcbihOLmV4cGlyYXRpb25UaW1lPWwsQmcobCkpfWVsc2UgbnVsbCE9PWgmJihoPWgubmV4dD17ZXhwaXJhdGlvblRpbWU6MTA3Mzc0MTgyMyxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksQWcobCxrLnN1c3BlbnNlQ29uZmlnKSxkPWsuZWFnZXJSZWR1Y2VyPT09YT9rLmVhZ2VyU3RhdGU6YShkLGsuYWN0aW9uKTtrPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZzskZShkLGIubWVtb2l6ZWRTdGF0ZSl8fChyZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24geGgoYSl7dmFyIGI9dWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpOyRlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHJnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiB5aChhKXt2YXIgYj10aCgpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjp2aCxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9emguYmluZChudWxsLE4sYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX1mdW5jdGlvbiBBaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1OLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LE4udXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBCaCgpe3JldHVybiB1aCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gQ2goYSxiLGMsZCl7dmFyIGU9dGgoKTtOLmVmZmVjdFRhZ3w9YTtlLm1lbW9pemVkU3RhdGU9QWgoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1mdW5jdGlvbiBEaChhLGIsYyxkKXt2YXIgZT11aCgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJm5oKGQsZy5kZXBzKSl7QWgoYixjLGYsZCk7cmV0dXJufX1OLmVmZmVjdFRhZ3w9YTtlLm1lbW9pemVkU3RhdGU9QWgoMXxiLGMsZixkKX1mdW5jdGlvbiBFaChhLGIpe3JldHVybiBDaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIEZoKGEsYil7cmV0dXJuIERoKDUxNiw0LGEsYil9ZnVuY3Rpb24gR2goYSxiKXtyZXR1cm4gRGgoNCwyLGEsYil9XG5mdW5jdGlvbiBIaChhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uIEloKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gRGgoNCwyLEhoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIEpoKCl7fWZ1bmN0aW9uIEtoKGEsYil7dGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX1mdW5jdGlvbiBMaChhLGIpe3ZhciBjPXVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIE1oKGEsYil7dmFyIGM9dWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5oKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIE5oKGEsYixjKXt2YXIgZD1hZygpO2NnKDk4PmQ/OTg6ZCxmdW5jdGlvbigpe2EoITApfSk7Y2coOTc8ZD85NzpkLGZ1bmN0aW9uKCl7dmFyIGQ9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2EoITEpLGMoKX1maW5hbGx5e2toLnN1c3BlbnNlPWR9fSl9XG5mdW5jdGlvbiB6aChhLGIsYyl7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9e2V4cGlyYXRpb25UaW1lOmQsc3VzcGVuc2VDb25maWc6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfTt2YXIgZj1iLnBlbmRpbmc7bnVsbD09PWY/ZS5uZXh0PWU6KGUubmV4dD1mLm5leHQsZi5uZXh0PWUpO2IucGVuZGluZz1lO2Y9YS5hbHRlcm5hdGU7aWYoYT09PU58fG51bGwhPT1mJiZmPT09TiltaD0hMCxlLmV4cGlyYXRpb25UaW1lPWxoLE4uZXhwaXJhdGlvblRpbWU9bGg7ZWxzZXtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1mfHwwPT09Zi5leHBpcmF0aW9uVGltZSkmJihmPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZikpdHJ5e3ZhciBnPWIubGFzdFJlbmRlcmVkU3RhdGUsaD1mKGcsYyk7ZS5lYWdlclJlZHVjZXI9ZjtlLmVhZ2VyU3RhdGU9aDtpZigkZShoLGcpKXJldHVybn1jYXRjaChrKXt9ZmluYWxseXt9SWcoYSxcbmQpfX1cbnZhciBzaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6USx1c2VDb250ZXh0OlEsdXNlRWZmZWN0OlEsdXNlSW1wZXJhdGl2ZUhhbmRsZTpRLHVzZUxheW91dEVmZmVjdDpRLHVzZU1lbW86USx1c2VSZWR1Y2VyOlEsdXNlUmVmOlEsdXNlU3RhdGU6USx1c2VEZWJ1Z1ZhbHVlOlEsdXNlUmVzcG9uZGVyOlEsdXNlRGVmZXJyZWRWYWx1ZTpRLHVzZVRyYW5zaXRpb246UX0scGg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOktoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkVoLHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBDaCg0LDIsSGguYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBDaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPXRoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsXG5iXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGgoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD16aC5iaW5kKG51bGwsTixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9dGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6eWgsdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXloKGEpLGQ9Y1swXSxlPWNbMV07RWgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPVxuY319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj15aCghMSksYz1iWzBdO2I9YlsxXTtyZXR1cm5bS2goTmguYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0scWg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOkxoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkZoLHVzZUltcGVyYXRpdmVIYW5kbGU6SWgsdXNlTGF5b3V0RWZmZWN0OkdoLHVzZU1lbW86TWgsdXNlUmVkdWNlcjp3aCx1c2VSZWY6QmgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gd2godmgpfSx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9d2godmgpLGQ9Y1swXSxlPWNbMV07RmgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9XG53aCh2aCksYz1iWzBdO2I9YlsxXTtyZXR1cm5bTGgoTmguYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0scmg9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOkxoLHVzZUNvbnRleHQ6c2csdXNlRWZmZWN0OkZoLHVzZUltcGVyYXRpdmVIYW5kbGU6SWgsdXNlTGF5b3V0RWZmZWN0OkdoLHVzZU1lbW86TWgsdXNlUmVkdWNlcjp4aCx1c2VSZWY6QmgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4geGgodmgpfSx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9eGgodmgpLGQ9Y1swXSxlPWNbMV07RmgoZnVuY3Rpb24oKXt2YXIgYz1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e2toLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9eGgodmgpLGM9YlswXTtiPWJbMV07cmV0dXJuW0xoKE5oLmJpbmQobnVsbCxcbmIsYSksW2IsYV0pLGNdfX0sT2g9bnVsbCxQaD1udWxsLFFoPSExO2Z1bmN0aW9uIFJoKGEsYil7dmFyIGM9U2goNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31cbmZ1bmN0aW9uIFRoKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBVaChhKXtpZihRaCl7dmFyIGI9UGg7aWYoYil7dmFyIGM9YjtpZighVGgoYSxiKSl7Yj1KZChjLm5leHRTaWJsaW5nKTtpZighYnx8IVRoKGEsYikpe2EuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDI7UWg9ITE7T2g9YTtyZXR1cm59UmgoT2gsYyl9T2g9YTtQaD1KZChiLmZpcnN0Q2hpbGQpfWVsc2UgYS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MixRaD0hMSxPaD1hfX1mdW5jdGlvbiBWaChhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47T2g9YX1cbmZ1bmN0aW9uIFdoKGEpe2lmKGEhPT1PaClyZXR1cm4hMTtpZighUWgpcmV0dXJuIFZoKGEpLFFoPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhR2QoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPVBoO2I7KVJoKGEsYiksYj1KZChiLm5leHRTaWJsaW5nKTtWaChhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHUoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoYz09PUFkKXtpZigwPT09Yil7UGg9SmQoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZSBjIT09emQmJmMhPT1DZCYmYyE9PUJkfHxiKyt9YT1hLm5leHRTaWJsaW5nfVBoPW51bGx9fWVsc2UgUGg9T2g/SmQoYS5zdGF0ZU5vZGUubmV4dFNpYmxpbmcpOm51bGw7cmV0dXJuITB9XG5mdW5jdGlvbiBYaCgpe1BoPU9oPW51bGw7UWg9ITF9dmFyIFloPVdhLlJlYWN0Q3VycmVudE93bmVyLHJnPSExO2Z1bmN0aW9uIFIoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9ZZyhiLG51bGwsYyxkKTpYZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBaaChhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7cWcoYixlKTtkPW9oKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXJnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksJGgoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBhaShhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIWJpKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLGNpKGEsYixnLGQsZSxmKTthPVVnKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6YmYsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gJGgoYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9U2coZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBjaShhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZiZihhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihyZz0hMSxlPGYpPyhiLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWUsJGgoYSxiLGYpKTpkaShhLGIsYyxkLGYpfWZ1bmN0aW9uIGVpKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gZGkoYSxiLGMsZCxlKXt2YXIgZj1MKGMpP0JmOkouY3VycmVudDtmPUNmKGIsZik7cWcoYixlKTtjPW9oKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXJnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksJGgoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2lmKEwoYykpe3ZhciBmPSEwO0dmKGIpfWVsc2UgZj0hMTtxZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksTGcoYixjLGQpLE5nKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnKGwpOihsPUwoYyk/QmY6Si5jdXJyZW50LGw9Q2YoYixsKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk1nKGIsZyxkLGwpO3RnPSExO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXg7emcoYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHghPT1rfHxLLmN1cnJlbnR8fHRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKEZnKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD10Z3x8S2coYixjLGgsZCx4LGssbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGc9Yi5zdGF0ZU5vZGUsdmcoYSxiKSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDppZyhiLnR5cGUsaCksaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlLFwib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZyhsKToobD1MKGMpP0JmOkouY3VycmVudCxsPUNmKGIsbCkpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk1nKGIsZyxkLGwpLHRnPSExLGs9Yi5tZW1vaXplZFN0YXRlLGcuc3RhdGU9ayx6ZyhiLGQsZyxlKSx4PWIubWVtb2l6ZWRTdGF0ZSxoIT09ZHx8ayE9PXh8fEsuY3VycmVudHx8dGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRmcoYixjLG0sZCkseD1iLm1lbW9pemVkU3RhdGUpLChtPXRnfHxLZyhiLGMsaCxkLGsseCxsKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxsKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9bCxkPW0pOlxuKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiBnaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBnaShhLGIsYyxkLGUsZil7ZWkoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJkhmKGIsYywhMSksJGgoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7WWguY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9WGcoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1YZyhiLG51bGwsaCxmKSk6UihhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZIZihiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIGhpKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/RWYoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmRWYoYSxiLmNvbnRleHQsITEpO2RoKGEsYi5jb250YWluZXJJbmZvKX1cbnZhciBpaT17ZGVoeWRyYXRlZDpudWxsLHJldHJ5VGltZTowfTtcbmZ1bmN0aW9uIGppKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPU0uY3VycmVudCxnPSExLGg7KGg9MCE9PShiLmVmZmVjdFRhZyY2NCkpfHwoaD0wIT09KGYmMikmJihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSkpO2g/KGc9ITAsYi5lZmZlY3RUYWcmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWUuZmFsbGJhY2t8fCEwPT09ZS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGZ8PTEpO0koTSxmJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1lLmZhbGxiYWNrJiZVaChiKTtpZihnKXtnPWUuZmFsbGJhY2s7ZT1XZyhudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPVdnKGcsZCxjLG51bGwpO2MucmV0dXJuPVxuYjtlLnNpYmxpbmc9YztiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1lO3JldHVybiBjfWQ9ZS5jaGlsZHJlbjtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1ZZyhiLG51bGwsZCxjKX1pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXthPWEuY2hpbGQ7ZD1hLnNpYmxpbmc7aWYoZyl7ZT1lLmZhbGxiYWNrO2M9U2coYSxhLnBlbmRpbmdQcm9wcyk7Yy5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSYmKGc9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWEuY2hpbGQpKWZvcihjLmNoaWxkPWc7bnVsbCE9PWc7KWcucmV0dXJuPWMsZz1nLnNpYmxpbmc7ZD1TZyhkLGUpO2QucmV0dXJuPWI7Yy5zaWJsaW5nPWQ7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9YztyZXR1cm4gZH1jPVhnKGIsYS5jaGlsZCxlLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVxuY31hPWEuY2hpbGQ7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9V2cobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtlLmNoaWxkPWE7bnVsbCE9PWEmJihhLnJldHVybj1lKTtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1XZyhnLGQsYyxudWxsKTtjLnJldHVybj1iO2Uuc2libGluZz1jO2MuZWZmZWN0VGFnfD0yO2UuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWU7cmV0dXJuIGN9Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9WGcoYixhLGUuY2hpbGRyZW4sYyl9XG5mdW5jdGlvbiBraShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7cGcoYS5yZXR1cm4sYil9ZnVuY3Rpb24gbGkoYSxiLGMsZCxlLGYpe3ZhciBnPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zz9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsRXhwaXJhdGlvbjowLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxFeHBpcmF0aW9uPTAsZy50YWlsTW9kZT1lLGcubGFzdEVmZmVjdD1mKX1cbmZ1bmN0aW9uIG1pKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7UihhLGIsZC5jaGlsZHJlbixjKTtkPU0uY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmVmZmVjdFRhZ3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyY2NCkpYTpmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7aWYoMTM9PT1hLnRhZyludWxsIT09YS5tZW1vaXplZFN0YXRlJiZraShhLGMpO2Vsc2UgaWYoMTk9PT1hLnRhZylraShhLGMpO2Vsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1iKWJyZWFrIGE7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWIpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9ZCY9MX1JKE0sZCk7aWYoMD09PShiLm1vZGUmMikpYi5tZW1vaXplZFN0YXRlPVxubnVsbDtlbHNlIHN3aXRjaChlKXtjYXNlIFwiZm9yd2FyZHNcIjpjPWIuY2hpbGQ7Zm9yKGU9bnVsbDtudWxsIT09YzspYT1jLmFsdGVybmF0ZSxudWxsIT09YSYmbnVsbD09PWhoKGEpJiYoZT1jKSxjPWMuc2libGluZztjPWU7bnVsbD09PWM/KGU9Yi5jaGlsZCxiLmNoaWxkPW51bGwpOihlPWMuc2libGluZyxjLnNpYmxpbmc9bnVsbCk7bGkoYiwhMSxlLGMsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJiYWNrd2FyZHNcIjpjPW51bGw7ZT1iLmNoaWxkO2ZvcihiLmNoaWxkPW51bGw7bnVsbCE9PWU7KXthPWUuYWx0ZXJuYXRlO2lmKG51bGwhPT1hJiZudWxsPT09aGgoYSkpe2IuY2hpbGQ9ZTticmVha31hPWUuc2libGluZztlLnNpYmxpbmc9YztjPWU7ZT1hfWxpKGIsITAsYyxudWxsLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwidG9nZXRoZXJcIjpsaShiLCExLG51bGwsbnVsbCx2b2lkIDAsYi5sYXN0RWZmZWN0KTticmVhaztkZWZhdWx0OmIubWVtb2l6ZWRTdGF0ZT1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gJGgoYSxiLGMpe251bGwhPT1hJiYoYi5kZXBlbmRlbmNpZXM9YS5kZXBlbmRlbmNpZXMpO3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7MCE9PWQmJkJnKGQpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcih1KDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1TZyhhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9U2coYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH12YXIgbmksb2kscGkscWk7XG5uaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07b2k9ZnVuY3Rpb24oKXt9O1xucGk9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO2NoKCRnLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj16YihnLGYpO2Q9emIoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPUdiKGcsZik7ZD1HYihnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPUliKGcsZik7ZD1JYihnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXNkKX1vZChjLGQpO3ZhciBoLGs7Yz1udWxsO2ZvcihoIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoaCkmJmYuaGFzT3duUHJvcGVydHkoaCkmJm51bGwhPWZbaF0paWYoXCJzdHlsZVwiPT09XG5oKWZvcihrIGluIGc9ZltoXSxnKWcuaGFzT3duUHJvcGVydHkoaykmJihjfHwoYz17fSksY1trXT1cIlwiKTtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09aCYmXCJjaGlsZHJlblwiIT09aCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiZcImF1dG9Gb2N1c1wiIT09aCYmKHZhLmhhc093blByb3BlcnR5KGgpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChoLG51bGwpKTtmb3IoaCBpbiBkKXt2YXIgbD1kW2hdO2c9bnVsbCE9Zj9mW2hdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGgpJiZsIT09ZyYmKG51bGwhPWx8fG51bGwhPWcpKWlmKFwic3R5bGVcIj09PWgpaWYoZyl7Zm9yKGsgaW4gZykhZy5oYXNPd25Qcm9wZXJ0eShrKXx8bCYmbC5oYXNPd25Qcm9wZXJ0eShrKXx8KGN8fChjPXt9KSxjW2tdPVwiXCIpO2ZvcihrIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShrKSYmZ1trXSE9PWxba10mJihjfHwoYz17fSksXG5jW2tdPWxba10pfWVsc2UgY3x8KGF8fChhPVtdKSxhLnB1c2goaCxjKSksYz1sO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1oPyhsPWw/bC5fX2h0bWw6dm9pZCAwLGc9Zz9nLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmZyE9PWwmJihhPWF8fFtdKS5wdXNoKGgsbCkpOlwiY2hpbGRyZW5cIj09PWg/Zz09PWx8fFwic3RyaW5nXCIhPT10eXBlb2YgbCYmXCJudW1iZXJcIiE9PXR5cGVvZiBsfHwoYT1hfHxbXSkucHVzaChoLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWgmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1oJiYodmEuaGFzT3duUHJvcGVydHkoaCk/KG51bGwhPWwmJnJkKGUsaCksYXx8Zz09PWx8fChhPVtdKSk6KGE9YXx8W10pLnB1c2goaCxsKSl9YyYmKGE9YXx8W10pLnB1c2goXCJzdHlsZVwiLGMpO2U9YTtpZihiLnVwZGF0ZVF1ZXVlPWUpYi5lZmZlY3RUYWd8PTR9fTtcbnFpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5lZmZlY3RUYWd8PTQpfTtmdW5jdGlvbiByaShhLGIpe3N3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBzaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEwoYi50eXBlKSYmRGYoKSxudWxsO2Nhc2UgMzpyZXR1cm4gZWgoKSxIKEspLEgoSiksYz1iLnN0YXRlTm9kZSxjLnBlbmRpbmdDb250ZXh0JiYoYy5jb250ZXh0PWMucGVuZGluZ0NvbnRleHQsYy5wZW5kaW5nQ29udGV4dD1udWxsKSxudWxsIT09YSYmbnVsbCE9PWEuY2hpbGR8fCFXaChiKXx8KGIuZWZmZWN0VGFnfD00KSxvaShiKSxudWxsO2Nhc2UgNTpnaChiKTtjPWNoKGJoLmN1cnJlbnQpO3ZhciBlPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpcGkoYSxiLGUsZCxjKSxhLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7XG5yZXR1cm4gbnVsbH1hPWNoKCRnLmN1cnJlbnQpO2lmKFdoKGIpKXtkPWIuc3RhdGVOb2RlO2U9Yi50eXBlO3ZhciBmPWIubWVtb2l6ZWRQcm9wcztkW01kXT1iO2RbTmRdPWY7c3dpdGNoKGUpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8YWMubGVuZ3RoO2ErKylGKGFjW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixkKTtGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsZCk7RihcInN1Ym1pdFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFiKGQsZik7RihcImludmFsaWRcIixkKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0YoXCJpbnZhbGlkXCIsZCk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkpiKGQsZiksRihcImludmFsaWRcIixkKSxyZChjLFwib25DaGFuZ2VcIil9b2QoZSxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpaWYoZi5oYXNPd25Qcm9wZXJ0eShnKSl7dmFyIGg9ZltnXTtcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgaD9kLnRleHRDb250ZW50IT09aCYmKGE9W1wiY2hpbGRyZW5cIixoXSk6XCJudW1iZXJcIj09PXR5cGVvZiBoJiZkLnRleHRDb250ZW50IT09XCJcIitoJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIraF0pOnZhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1oJiZyZChjLGcpfXN3aXRjaChlKXtjYXNlIFwiaW5wdXRcIjp4YihkKTtFYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnhiKGQpO0xiKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiZcbihkLm9uY2xpY2s9c2QpfWM9YTtiLnVwZGF0ZVF1ZXVlPWM7bnVsbCE9PWMmJihiLmVmZmVjdFRhZ3w9NCl9ZWxzZXtnPTk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O2E9PT1xZCYmKGE9TmIoZSkpO2E9PT1xZD9cInNjcmlwdFwiPT09ZT8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGUse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoZSksXCJzZWxlY3RcIj09PWUmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGUpO2FbTWRdPWI7YVtOZF09ZDtuaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz1wZChlLGQpO3N3aXRjaChlKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsXG5hKTtoPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGFjLmxlbmd0aDtoKyspRihhY1toXSxhKTtoPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGEpO2g9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpGKFwiZXJyb3JcIixhKTtGKFwibG9hZFwiLGEpO2g9ZDticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGEpO0YoXCJzdWJtaXRcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkFiKGEsZCk7aD16YihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPUdiKGEsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtoPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmIoYSxcbmQpO2g9SWIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9ZH1vZChlLGgpO3ZhciBrPWg7Zm9yKGYgaW4gaylpZihrLmhhc093blByb3BlcnR5KGYpKXt2YXIgbD1rW2ZdO1wic3R5bGVcIj09PWY/bWQoYSxsKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhsPWw/bC5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJlFiKGEsbCkpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBsPyhcInRleHRhcmVhXCIhPT1lfHxcIlwiIT09bCkmJlJiKGEsbCk6XCJudW1iZXJcIj09PXR5cGVvZiBsJiZSYihhLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKHZhLmhhc093blByb3BlcnR5KGYpP251bGwhPWwmJnJkKGMsZik6bnVsbCE9bCYmWGEoYSxmLGwsZykpfXN3aXRjaChlKXtjYXNlIFwiaW5wdXRcIjp4YihhKTtFYihhLGQsITEpO1xuYnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eGIoYSk7TGIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3JiKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Yz1kLnZhbHVlO251bGwhPWM/SGIoYSwhIWQubXVsdGlwbGUsYywhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJkhiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm9uQ2xpY2smJihhLm9uY2xpY2s9c2QpfUZkKGUsZCkmJihiLmVmZmVjdFRhZ3w9NCl9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKXFpKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO1xuYz1jaChiaC5jdXJyZW50KTtjaCgkZy5jdXJyZW50KTtXaChiKT8oYz1iLnN0YXRlTm9kZSxkPWIubWVtb2l6ZWRQcm9wcyxjW01kXT1iLGMubm9kZVZhbHVlIT09ZCYmKGIuZWZmZWN0VGFnfD00KSk6KGM9KDk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShkKSxjW01kXT1iLGIuc3RhdGVOb2RlPWMpfXJldHVybiBudWxsO2Nhc2UgMTM6SChNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSlyZXR1cm4gYi5leHBpcmF0aW9uVGltZT1jLGI7Yz1udWxsIT09ZDtkPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmV2goYik6KGU9YS5tZW1vaXplZFN0YXRlLGQ9bnVsbCE9PWUsY3x8bnVsbD09PWV8fChlPWEuY2hpbGQuc2libGluZyxudWxsIT09ZSYmKGY9Yi5maXJzdEVmZmVjdCxudWxsIT09Zj8oYi5maXJzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1mKTooYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9XG5lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSkpO2lmKGMmJiFkJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oTS5jdXJyZW50JjEpKVM9PT10aSYmKFM9dWkpO2Vsc2V7aWYoUz09PXRpfHxTPT09dWkpUz12aTswIT09d2kmJm51bGwhPT1UJiYoeGkoVCxVKSx5aShULHdpKSl9aWYoY3x8ZCliLmVmZmVjdFRhZ3w9NDtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIGVoKCksb2koYiksbnVsbDtjYXNlIDEwOnJldHVybiBvZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEwoYi50eXBlKSYmRGYoKSxudWxsO2Nhc2UgMTk6SChNKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtlPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2Y9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWYpaWYoZSlyaShkLCExKTtlbHNle2lmKFMhPT10aXx8bnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmXG42NCkpZm9yKGY9Yi5jaGlsZDtudWxsIT09Zjspe2E9aGgoZik7aWYobnVsbCE9PWEpe2IuZWZmZWN0VGFnfD02NDtyaShkLCExKTtlPWEudXBkYXRlUXVldWU7bnVsbCE9PWUmJihiLnVwZGF0ZVF1ZXVlPWUsYi5lZmZlY3RUYWd8PTQpO251bGw9PT1kLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3Q7Zm9yKGQ9Yi5jaGlsZDtudWxsIT09ZDspZT1kLGY9YyxlLmVmZmVjdFRhZyY9MixlLm5leHRFZmZlY3Q9bnVsbCxlLmZpcnN0RWZmZWN0PW51bGwsZS5sYXN0RWZmZWN0PW51bGwsYT1lLmFsdGVybmF0ZSxudWxsPT09YT8oZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsZS5leHBpcmF0aW9uVGltZT1mLGUuY2hpbGQ9bnVsbCxlLm1lbW9pemVkUHJvcHM9bnVsbCxlLm1lbW9pemVkU3RhdGU9bnVsbCxlLnVwZGF0ZVF1ZXVlPW51bGwsZS5kZXBlbmRlbmNpZXM9bnVsbCk6KGUuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWUsXG5lLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWUsZS5jaGlsZD1hLmNoaWxkLGUubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHMsZS5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxlLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsZj1hLmRlcGVuZGVuY2llcyxlLmRlcGVuZGVuY2llcz1udWxsPT09Zj9udWxsOntleHBpcmF0aW9uVGltZTpmLmV4cGlyYXRpb25UaW1lLGZpcnN0Q29udGV4dDpmLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmYucmVzcG9uZGVyc30pLGQ9ZC5zaWJsaW5nO0koTSxNLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1mPWYuc2libGluZ319ZWxzZXtpZighZSlpZihhPWhoKGYpLG51bGwhPT1hKXtpZihiLmVmZmVjdFRhZ3w9NjQsZT0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5lZmZlY3RUYWd8PTQpLHJpKGQsITApLG51bGw9PT1kLnRhaWwmJlwiaGlkZGVuXCI9PT1kLnRhaWxNb2RlJiYhZi5hbHRlcm5hdGUpcmV0dXJuIGI9XG5iLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0LG51bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpLG51bGx9ZWxzZSAyKiRmKCktZC5yZW5kZXJpbmdTdGFydFRpbWU+ZC50YWlsRXhwaXJhdGlvbiYmMTxjJiYoYi5lZmZlY3RUYWd8PTY0LGU9ITAscmkoZCwhMSksYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9Yy0xKTtkLmlzQmFja3dhcmRzPyhmLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWYpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZjpiLmNoaWxkPWYsZC5sYXN0PWYpfXJldHVybiBudWxsIT09ZC50YWlsPygwPT09ZC50YWlsRXhwaXJhdGlvbiYmKGQudGFpbEV4cGlyYXRpb249JGYoKSs1MDApLGM9ZC50YWlsLGQucmVuZGVyaW5nPWMsZC50YWlsPWMuc2libGluZyxkLmxhc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0LGQucmVuZGVyaW5nU3RhcnRUaW1lPSRmKCksYy5zaWJsaW5nPW51bGwsYj1NLmN1cnJlbnQsSShNLGU/YiYxfDI6YiYxKSxjKTpudWxsfXRocm93IEVycm9yKHUoMTU2LFxuYi50YWcpKTt9ZnVuY3Rpb24gemkoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6TChhLnR5cGUpJiZEZigpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZWgoKTtIKEspO0goSik7Yj1hLmVmZmVjdFRhZztpZigwIT09KGImNjQpKXRocm93IEVycm9yKHUoMjg1KSk7YS5lZmZlY3RUYWc9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGdoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChNKSxiPWEuZWZmZWN0VGFnLGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEgoTSksbnVsbDtjYXNlIDQ6cmV0dXJuIGVoKCksbnVsbDtjYXNlIDEwOnJldHVybiBvZyhhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fWZ1bmN0aW9uIEFpKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6cWIoYil9fVxudmFyIEJpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O2Z1bmN0aW9uIENpKGEsYil7dmFyIGM9Yi5zb3VyY2UsZD1iLnN0YWNrO251bGw9PT1kJiZudWxsIT09YyYmKGQ9cWIoYykpO251bGwhPT1jJiZwYihjLnR5cGUpO2I9Yi52YWx1ZTtudWxsIT09YSYmMT09PWEudGFnJiZwYihhLnR5cGUpO3RyeXtjb25zb2xlLmVycm9yKGIpfWNhdGNoKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBlO30pfX1mdW5jdGlvbiBEaShhLGIpe3RyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goYyl7RWkoYSxjKX19ZnVuY3Rpb24gRmkoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7RWkoYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gR2koYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6aWcoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1yZXR1cm47Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fVxuZnVuY3Rpb24gSGkoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5kZXN0cm95O2MuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZCYmZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19ZnVuY3Rpb24gSWkoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5jcmVhdGU7Yy5kZXN0cm95PWQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fVxuZnVuY3Rpb24gSmkoYSxiLGMpe3N3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOklpKDMsYyk7cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2lmKGMuZWZmZWN0VGFnJjQpaWYobnVsbD09PWIpYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6aWcoYy50eXBlLGIubWVtb2l6ZWRQcm9wcyk7YS5jb21wb25lbnREaWRVcGRhdGUoZCxiLm1lbW9pemVkU3RhdGUsYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZDZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUNnKGMsYixhKX1yZXR1cm47XG5jYXNlIDU6YT1jLnN0YXRlTm9kZTtudWxsPT09YiYmYy5lZmZlY3RUYWcmNCYmRmQoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZWYyhjKSkpKTtyZXR1cm47Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9XG5mdW5jdGlvbiBLaShhLGIsYyl7XCJmdW5jdGlvblwiPT09dHlwZW9mIExpJiZMaShiKTtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGQ9YS5uZXh0O2NnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBhPWQ7ZG97dmFyIGM9YS5kZXN0cm95O2lmKHZvaWQgMCE9PWMpe3ZhciBnPWI7dHJ5e2MoKX1jYXRjaChoKXtFaShnLGgpfX1hPWEubmV4dH13aGlsZShhIT09ZCl9KX1icmVhaztjYXNlIDE6RmkoYik7Yz1iLnN0YXRlTm9kZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5jb21wb25lbnRXaWxsVW5tb3VudCYmRGkoYixjKTticmVhaztjYXNlIDU6RmkoYik7YnJlYWs7Y2FzZSA0Ok1pKGEsYixjKX19XG5mdW5jdGlvbiBOaShhKXt2YXIgYj1hLmFsdGVybmF0ZTthLnJldHVybj1udWxsO2EuY2hpbGQ9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmFsdGVybmF0ZT1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2Euc3RhdGVOb2RlPW51bGw7bnVsbCE9PWImJk5pKGIpfWZ1bmN0aW9uIE9pKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gUGkoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoT2koYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufXRocm93IEVycm9yKHUoMTYwKSk7fWI9Yy5zdGF0ZU5vZGU7c3dpdGNoKGMudGFnKXtjYXNlIDU6dmFyIGQ9ITE7YnJlYWs7Y2FzZSAzOmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDE2MSkpO31jLmVmZmVjdFRhZyYxNiYmKFJiKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxPaShjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/UWkoYSxjLGIpOlJpKGEsYyxiKX1cbmZ1bmN0aW9uIFFpKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiPzg9PT1jLm5vZGVUeXBlP2MucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSxiKTpjLmluc2VydEJlZm9yZShhLGIpOig4PT09Yy5ub2RlVHlwZT8oYj1jLnBhcmVudE5vZGUsYi5pbnNlcnRCZWZvcmUoYSxjKSk6KGI9YyxiLmFwcGVuZENoaWxkKGEpKSxjPWMuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09YyYmdm9pZCAwIT09Y3x8bnVsbCE9PWIub25jbGlja3x8KGIub25jbGljaz1zZCkpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihRaShhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVFpKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIFJpKGEsYixjKXt2YXIgZD1hLnRhZyxlPTU9PT1kfHw2PT09ZDtpZihlKWE9ZT9hLnN0YXRlTm9kZTphLnN0YXRlTm9kZS5pbnN0YW5jZSxiP2MuaW5zZXJ0QmVmb3JlKGEsYik6Yy5hcHBlbmRDaGlsZChhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUmkoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylSaShhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBNaShhLGIsYyl7Zm9yKHZhciBkPWIsZT0hMSxmLGc7Oyl7aWYoIWUpe2U9ZC5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1lKXRocm93IEVycm9yKHUoMTYwKSk7Zj1lLnN0YXRlTm9kZTtzd2l0Y2goZS50YWcpe2Nhc2UgNTpnPSExO2JyZWFrIGE7Y2FzZSAzOmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYTtjYXNlIDQ6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhfWU9ZS5yZXR1cm59ZT0hMH1pZig1PT09ZC50YWd8fDY9PT1kLnRhZyl7YTpmb3IodmFyIGg9YSxrPWQsbD1jLG09azs7KWlmKEtpKGgsbSxsKSxudWxsIT09bS5jaGlsZCYmNCE9PW0udGFnKW0uY2hpbGQucmV0dXJuPW0sbT1tLmNoaWxkO2Vsc2V7aWYobT09PWspYnJlYWsgYTtmb3IoO251bGw9PT1tLnNpYmxpbmc7KXtpZihudWxsPT09bS5yZXR1cm58fG0ucmV0dXJuPT09aylicmVhayBhO209bS5yZXR1cm59bS5zaWJsaW5nLnJldHVybj1tLnJldHVybjttPW0uc2libGluZ31nPyhoPVxuZixrPWQuc3RhdGVOb2RlLDg9PT1oLm5vZGVUeXBlP2gucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChrKTpoLnJlbW92ZUNoaWxkKGspKTpmLnJlbW92ZUNoaWxkKGQuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1kLnRhZyl7aWYobnVsbCE9PWQuY2hpbGQpe2Y9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztnPSEwO2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKEtpKGEsZCxjKSxudWxsIT09ZC5jaGlsZCl7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9aWYoZD09PWIpYnJlYWs7Zm9yKDtudWxsPT09ZC5zaWJsaW5nOyl7aWYobnVsbD09PWQucmV0dXJufHxkLnJldHVybj09PWIpcmV0dXJuO2Q9ZC5yZXR1cm47ND09PWQudGFnJiYoZT0hMSl9ZC5zaWJsaW5nLnJldHVybj1kLnJldHVybjtkPWQuc2libGluZ319XG5mdW5jdGlvbiBTaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6SGkoMyxiKTtyZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzLGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbTmRdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJkJiKGMsZCk7cGQoYSxlKTtiPXBkKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPTIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz9tZChjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/UWIoYyxoKTpcImNoaWxkcmVuXCI9PT1nP1JiKGMsaCk6WGEoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOkNiKGMsZCk7YnJlYWs7XG5jYXNlIFwidGV4dGFyZWFcIjpLYihjLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGE9ZC52YWx1ZSxudWxsIT1hP0hiKGMsISFkLm11bHRpcGxlLGEsITEpOmIhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9IYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6SGIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7cmV0dXJuO2Nhc2UgMzpiPWIuc3RhdGVOb2RlO2IuaHlkcmF0ZSYmKGIuaHlkcmF0ZT0hMSxWYyhiLmNvbnRhaW5lckluZm8pKTtyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpjPWI7bnVsbD09PWIubWVtb2l6ZWRTdGF0ZT9cbmQ9ITE6KGQ9ITAsYz1iLmNoaWxkLFRpPSRmKCkpO2lmKG51bGwhPT1jKWE6Zm9yKGE9Yzs7KXtpZig1PT09YS50YWcpZj1hLnN0YXRlTm9kZSxkPyhmPWYuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuc2V0UHJvcGVydHk/Zi5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpmLmRpc3BsYXk9XCJub25lXCIpOihmPWEuc3RhdGVOb2RlLGU9YS5tZW1vaXplZFByb3BzLnN0eWxlLGU9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsLGYuc3R5bGUuZGlzcGxheT1sZChcImRpc3BsYXlcIixlKSk7ZWxzZSBpZig2PT09YS50YWcpYS5zdGF0ZU5vZGUubm9kZVZhbHVlPWQ/XCJcIjphLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWEudGFnJiZudWxsIT09YS5tZW1vaXplZFN0YXRlJiZudWxsPT09YS5tZW1vaXplZFN0YXRlLmRlaHlkcmF0ZWQpe2Y9YS5jaGlsZC5zaWJsaW5nO2YucmV0dXJuPWE7YT1cbmY7Y29udGludWV9ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWMpYnJlYWs7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxhLnJldHVybj09PWMpYnJlYWsgYTthPWEucmV0dXJufWEuc2libGluZy5yZXR1cm49YS5yZXR1cm47YT1hLnNpYmxpbmd9VWkoYik7cmV0dXJuO2Nhc2UgMTk6VWkoYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fWZ1bmN0aW9uIFVpKGEpe3ZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2EudXBkYXRlUXVldWU9bnVsbDt2YXIgYz1hLnN0YXRlTm9kZTtudWxsPT09YyYmKGM9YS5zdGF0ZU5vZGU9bmV3IEJpKTtiLmZvckVhY2goZnVuY3Rpb24oYil7dmFyIGQ9VmkuYmluZChudWxsLGEsYik7Yy5oYXMoYil8fChjLmFkZChiKSxiLnRoZW4oZCxkKSl9KX19XG52YXIgV2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gWGkoYSxiLGMpe2M9d2coYyxudWxsKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtZaXx8KFlpPSEwLFppPWQpO0NpKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gJGkoYSxiLGMpe2M9d2coYyxudWxsKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7Q2koYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PWFqP2FqPW5ldyBTZXQoW3RoaXNdKTphai5hZGQodGhpcyksQ2koYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9XG52YXIgYmo9TWF0aC5jZWlsLGNqPVdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZGo9V2EuUmVhY3RDdXJyZW50T3duZXIsVj0wLGVqPTgsZmo9MTYsZ2o9MzIsdGk9MCxoaj0xLGlqPTIsdWk9Myx2aT00LGpqPTUsVz1WLFQ9bnVsbCxYPW51bGwsVT0wLFM9dGksa2o9bnVsbCxsaj0xMDczNzQxODIzLG1qPTEwNzM3NDE4MjMsbmo9bnVsbCx3aT0wLG9qPSExLFRpPTAscGo9NTAwLFk9bnVsbCxZaT0hMSxaaT1udWxsLGFqPW51bGwscWo9ITEscmo9bnVsbCxzaj05MCx0aj1udWxsLHVqPTAsdmo9bnVsbCx3aj0wO2Z1bmN0aW9uIEdnKCl7cmV0dXJuKFcmKGZqfGdqKSkhPT1WPzEwNzM3NDE4MjEtKCRmKCkvMTB8MCk6MCE9PXdqP3dqOndqPTEwNzM3NDE4MjEtKCRmKCkvMTB8MCl9XG5mdW5jdGlvbiBIZyhhLGIsYyl7Yj1iLm1vZGU7aWYoMD09PShiJjIpKXJldHVybiAxMDczNzQxODIzO3ZhciBkPWFnKCk7aWYoMD09PShiJjQpKXJldHVybiA5OT09PWQ/MTA3Mzc0MTgyMzoxMDczNzQxODIyO2lmKChXJmZqKSE9PVYpcmV0dXJuIFU7aWYobnVsbCE9PWMpYT1oZyhhLGMudGltZW91dE1zfDB8fDVFMywyNTApO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgOTk6YT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgOTg6YT1oZyhhLDE1MCwxMDApO2JyZWFrO2Nhc2UgOTc6Y2FzZSA5NjphPWhnKGEsNUUzLDI1MCk7YnJlYWs7Y2FzZSA5NTphPTI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyNikpO31udWxsIT09VCYmYT09PVUmJi0tYTtyZXR1cm4gYX1cbmZ1bmN0aW9uIElnKGEsYil7aWYoNTA8dWopdGhyb3cgdWo9MCx2aj1udWxsLEVycm9yKHUoMTg1KSk7YT14aihhLGIpO2lmKG51bGwhPT1hKXt2YXIgYz1hZygpOzEwNzM3NDE4MjM9PT1iPyhXJmVqKSE9PVYmJihXJihmanxnaikpPT09Vj95aihhKTooWihhKSxXPT09ViYmZ2coKSk6WihhKTsoVyY0KT09PVZ8fDk4IT09YyYmOTkhPT1jfHwobnVsbD09PXRqP3RqPW5ldyBNYXAoW1thLGJdXSk6KGM9dGouZ2V0KGEpLCh2b2lkIDA9PT1jfHxjPmIpJiZ0ai5zZXQoYSxiKSkpfX1cbmZ1bmN0aW9uIHhqKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59bnVsbCE9PWUmJihUPT09ZSYmKEJnKGIpLFM9PT12aSYmeGkoZSxVKSkseWkoZSxiKSk7cmV0dXJuIGV9XG5mdW5jdGlvbiB6aihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtpZigwIT09YilyZXR1cm4gYjtiPWEuZmlyc3RQZW5kaW5nVGltZTtpZighQWooYSxiKSlyZXR1cm4gYjt2YXIgYz1hLmxhc3RQaW5nZWRUaW1lO2E9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw7YT1jPmE/YzphO3JldHVybiAyPj1hJiZiIT09YT8wOmF9XG5mdW5jdGlvbiBaKGEpe2lmKDAhPT1hLmxhc3RFeHBpcmVkVGltZSlhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMyxhLmNhbGxiYWNrUHJpb3JpdHk9OTksYS5jYWxsYmFja05vZGU9ZWcoeWouYmluZChudWxsLGEpKTtlbHNle3ZhciBiPXpqKGEpLGM9YS5jYWxsYmFja05vZGU7aWYoMD09PWIpbnVsbCE9PWMmJihhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wLGEuY2FsbGJhY2tQcmlvcml0eT05MCk7ZWxzZXt2YXIgZD1HZygpOzEwNzM3NDE4MjM9PT1iP2Q9OTk6MT09PWJ8fDI9PT1iP2Q9OTU6KGQ9MTAqKDEwNzM3NDE4MjEtYiktMTAqKDEwNzM3NDE4MjEtZCksZD0wPj1kPzk5OjI1MD49ZD85ODo1MjUwPj1kPzk3Ojk1KTtpZihudWxsIT09Yyl7dmFyIGU9YS5jYWxsYmFja1ByaW9yaXR5O2lmKGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT09PWImJmU+PWQpcmV0dXJuO2MhPT1UZiYmS2YoYyl9YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPVxuYjthLmNhbGxiYWNrUHJpb3JpdHk9ZDtiPTEwNzM3NDE4MjM9PT1iP2VnKHlqLmJpbmQobnVsbCxhKSk6ZGcoZCxCai5iaW5kKG51bGwsYSkse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjEtYiktJGYoKX0pO2EuY2FsbGJhY2tOb2RlPWJ9fX1cbmZ1bmN0aW9uIEJqKGEsYil7d2o9MDtpZihiKXJldHVybiBiPUdnKCksQ2ooYSxiKSxaKGEpLG51bGw7dmFyIGM9emooYSk7aWYoMCE9PWMpe2I9YS5jYWxsYmFja05vZGU7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7RGooKTthPT09VCYmYz09PVV8fEVqKGEsYyk7aWYobnVsbCE9PVgpe3ZhciBkPVc7V3w9Zmo7dmFyIGU9RmooKTtkbyB0cnl7R2ooKTticmVha31jYXRjaChoKXtIaihhLGgpfXdoaWxlKDEpO25nKCk7Vz1kO2NqLmN1cnJlbnQ9ZTtpZihTPT09aGopdGhyb3cgYj1raixFaihhLGMpLHhpKGEsYyksWihhKSxiO2lmKG51bGw9PT1YKXN3aXRjaChlPWEuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGUsYS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWMsZD1TLFQ9bnVsbCxkKXtjYXNlIHRpOmNhc2UgaGo6dGhyb3cgRXJyb3IodSgzNDUpKTtjYXNlIGlqOkNqKGEsMjxjPzI6Yyk7YnJlYWs7Y2FzZSB1aTp4aShhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtcbmM9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9SWooZSkpO2lmKDEwNzM3NDE4MjM9PT1saiYmKGU9VGkrcGotJGYoKSwxMDxlKSl7aWYob2ope3ZhciBmPWEubGFzdFBpbmdlZFRpbWU7aWYoMD09PWZ8fGY+PWMpe2EubGFzdFBpbmdlZFRpbWU9YztFaihhLGMpO2JyZWFrfX1mPXpqKGEpO2lmKDAhPT1mJiZmIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9ZDticmVha31hLnRpbWVvdXRIYW5kbGU9SGQoSmouYmluZChudWxsLGEpLGUpO2JyZWFrfUpqKGEpO2JyZWFrO2Nhc2Ugdmk6eGkoYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7Yz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1JaihlKSk7aWYob2omJihlPWEubGFzdFBpbmdlZFRpbWUsMD09PWV8fGU+PWMpKXthLmxhc3RQaW5nZWRUaW1lPWM7RWooYSxjKTticmVha31lPXpqKGEpO2lmKDAhPT1lJiZlIT09YylicmVhaztpZigwIT09ZCYmZCE9PWMpe2EubGFzdFBpbmdlZFRpbWU9XG5kO2JyZWFrfTEwNzM3NDE4MjMhPT1taj9kPTEwKigxMDczNzQxODIxLW1qKS0kZigpOjEwNzM3NDE4MjM9PT1saj9kPTA6KGQ9MTAqKDEwNzM3NDE4MjEtbGopLTVFMyxlPSRmKCksYz0xMCooMTA3Mzc0MTgyMS1jKS1lLGQ9ZS1kLDA+ZCYmKGQ9MCksZD0oMTIwPmQ/MTIwOjQ4MD5kPzQ4MDoxMDgwPmQ/MTA4MDoxOTIwPmQ/MTkyMDozRTM+ZD8zRTM6NDMyMD5kPzQzMjA6MTk2MCpiaihkLzE5NjApKS1kLGM8ZCYmKGQ9YykpO2lmKDEwPGQpe2EudGltZW91dEhhbmRsZT1IZChKai5iaW5kKG51bGwsYSksZCk7YnJlYWt9SmooYSk7YnJlYWs7Y2FzZSBqajppZigxMDczNzQxODIzIT09bGomJm51bGwhPT1uail7Zj1sajt2YXIgZz1uajtkPWcuYnVzeU1pbkR1cmF0aW9uTXN8MDswPj1kP2Q9MDooZT1nLmJ1c3lEZWxheU1zfDAsZj0kZigpLSgxMCooMTA3Mzc0MTgyMS1mKS0oZy50aW1lb3V0TXN8MHx8NUUzKSksZD1mPD1lPzA6ZStkLWYpO2lmKDEwPGQpe3hpKGEsYyk7YS50aW1lb3V0SGFuZGxlPVxuSGQoSmouYmluZChudWxsLGEpLGQpO2JyZWFrfX1KaihhKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI5KSk7fVooYSk7aWYoYS5jYWxsYmFja05vZGU9PT1iKXJldHVybiBCai5iaW5kKG51bGwsYSl9fXJldHVybiBudWxsfVxuZnVuY3Rpb24geWooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7Yj0wIT09Yj9iOjEwNzM3NDE4MjM7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7RGooKTthPT09VCYmYj09PVV8fEVqKGEsYik7aWYobnVsbCE9PVgpe3ZhciBjPVc7V3w9Zmo7dmFyIGQ9RmooKTtkbyB0cnl7S2ooKTticmVha31jYXRjaChlKXtIaihhLGUpfXdoaWxlKDEpO25nKCk7Vz1jO2NqLmN1cnJlbnQ9ZDtpZihTPT09aGopdGhyb3cgYz1raixFaihhLGIpLHhpKGEsYiksWihhKSxjO2lmKG51bGwhPT1YKXRocm93IEVycm9yKHUoMjYxKSk7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YjtUPW51bGw7SmooYSk7WihhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBMaigpe2lmKG51bGwhPT10ail7dmFyIGE9dGo7dGo9bnVsbDthLmZvckVhY2goZnVuY3Rpb24oYSxjKXtDaihjLGEpO1ooYyl9KTtnZygpfX1cbmZ1bmN0aW9uIE1qKGEsYil7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19ZnVuY3Rpb24gTmooYSxiKXt2YXIgYz1XO1cmPS0yO1d8PWVqO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19XG5mdW5jdGlvbiBFaihhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxJZChjKSk7aWYobnVsbCE9PVgpZm9yKGM9WC5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiZEZigpO2JyZWFrO2Nhc2UgMzplaCgpO0goSyk7SChKKTticmVhaztjYXNlIDU6Z2goZCk7YnJlYWs7Y2FzZSA0OmVoKCk7YnJlYWs7Y2FzZSAxMzpIKE0pO2JyZWFrO2Nhc2UgMTk6SChNKTticmVhaztjYXNlIDEwOm9nKGQpfWM9Yy5yZXR1cm59VD1hO1g9U2coYS5jdXJyZW50LG51bGwpO1U9YjtTPXRpO2tqPW51bGw7bWo9bGo9MTA3Mzc0MTgyMztuaj1udWxsO3dpPTA7b2o9ITF9XG5mdW5jdGlvbiBIaihhLGIpe2Rve3RyeXtuZygpO2poLmN1cnJlbnQ9c2g7aWYobWgpZm9yKHZhciBjPU4ubWVtb2l6ZWRTdGF0ZTtudWxsIT09Yzspe3ZhciBkPWMucXVldWU7bnVsbCE9PWQmJihkLnBlbmRpbmc9bnVsbCk7Yz1jLm5leHR9bGg9MDtQPU89Tj1udWxsO21oPSExO2lmKG51bGw9PT1YfHxudWxsPT09WC5yZXR1cm4pcmV0dXJuIFM9aGosa2o9YixYPW51bGw7YTp7dmFyIGU9YSxmPVgucmV0dXJuLGc9WCxoPWI7Yj1VO2cuZWZmZWN0VGFnfD0yMDQ4O2cuZmlyc3RFZmZlY3Q9Zy5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWgmJlwib2JqZWN0XCI9PT10eXBlb2YgaCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGgudGhlbil7dmFyIGs9aDtpZigwPT09KGcubW9kZSYyKSl7dmFyIGw9Zy5hbHRlcm5hdGU7bD8oZy51cGRhdGVRdWV1ZT1sLnVwZGF0ZVF1ZXVlLGcubWVtb2l6ZWRTdGF0ZT1sLm1lbW9pemVkU3RhdGUsZy5leHBpcmF0aW9uVGltZT1sLmV4cGlyYXRpb25UaW1lKTooZy51cGRhdGVRdWV1ZT1cbm51bGwsZy5tZW1vaXplZFN0YXRlPW51bGwpfXZhciBtPTAhPT0oTS5jdXJyZW50JjEpLHA9Zjtkb3t2YXIgeDtpZih4PTEzPT09cC50YWcpe3ZhciB6PXAubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eil4PW51bGwhPT16LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgY2E9cC5tZW1vaXplZFByb3BzO3g9dm9pZCAwPT09Y2EuZmFsbGJhY2s/ITE6ITAhPT1jYS51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDptPyExOiEwfX1pZih4KXt2YXIgRD1wLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1EKXt2YXIgdD1uZXcgU2V0O3QuYWRkKGspO3AudXBkYXRlUXVldWU9dH1lbHNlIEQuYWRkKGspO2lmKDA9PT0ocC5tb2RlJjIpKXtwLmVmZmVjdFRhZ3w9NjQ7Zy5lZmZlY3RUYWcmPS0yOTgxO2lmKDE9PT1nLnRhZylpZihudWxsPT09Zy5hbHRlcm5hdGUpZy50YWc9MTc7ZWxzZXt2YXIgeT13ZygxMDczNzQxODIzLG51bGwpO3kudGFnPTI7eGcoZyx5KX1nLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7XG5icmVhayBhfWg9dm9pZCAwO2c9Yjt2YXIgQT1lLnBpbmdDYWNoZTtudWxsPT09QT8oQT1lLnBpbmdDYWNoZT1uZXcgV2ksaD1uZXcgU2V0LEEuc2V0KGssaCkpOihoPUEuZ2V0KGspLHZvaWQgMD09PWgmJihoPW5ldyBTZXQsQS5zZXQoayxoKSkpO2lmKCFoLmhhcyhnKSl7aC5hZGQoZyk7dmFyIHE9T2ouYmluZChudWxsLGUsayxnKTtrLnRoZW4ocSxxKX1wLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtoPUVycm9yKChwYihnLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIrcWIoZykpfVMhPT1cbmpqJiYoUz1paik7aD1BaShoLGcpO3A9Zjtkb3tzd2l0Y2gocC50YWcpe2Nhc2UgMzprPWg7cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO3ZhciBCPVhpKHAsayxiKTt5ZyhwLEIpO2JyZWFrIGE7Y2FzZSAxOms9aDt2YXIgdz1wLnR5cGUsdWI9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT11YiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHViLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKHViKSkpKXtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIHZiPSRpKHAsayxiKTt5ZyhwLHZiKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1YPVBqKFgpfWNhdGNoKFhjKXtiPVhjO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gRmooKXt2YXIgYT1jai5jdXJyZW50O2NqLmN1cnJlbnQ9c2g7cmV0dXJuIG51bGw9PT1hP3NoOmF9ZnVuY3Rpb24gQWcoYSxiKXthPGxqJiYyPGEmJihsaj1hKTtudWxsIT09YiYmYTxtaiYmMjxhJiYobWo9YSxuaj1iKX1mdW5jdGlvbiBCZyhhKXthPndpJiYod2k9YSl9ZnVuY3Rpb24gS2ooKXtmb3IoO251bGwhPT1YOylYPVFqKFgpfWZ1bmN0aW9uIEdqKCl7Zm9yKDtudWxsIT09WCYmIVVmKCk7KVg9UWooWCl9ZnVuY3Rpb24gUWooYSl7dmFyIGI9UmooYS5hbHRlcm5hdGUsYSxVKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPVBqKGEpKTtkai5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBQaihhKXtYPWE7ZG97dmFyIGI9WC5hbHRlcm5hdGU7YT1YLnJldHVybjtpZigwPT09KFguZWZmZWN0VGFnJjIwNDgpKXtiPXNpKGIsWCxVKTtpZigxPT09VXx8MSE9PVguY2hpbGRFeHBpcmF0aW9uVGltZSl7Zm9yKHZhciBjPTAsZD1YLmNoaWxkO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZSxmPWQuY2hpbGRFeHBpcmF0aW9uVGltZTtlPmMmJihjPWUpO2Y+YyYmKGM9Zik7ZD1kLnNpYmxpbmd9WC5jaGlsZEV4cGlyYXRpb25UaW1lPWN9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWEmJjA9PT0oYS5lZmZlY3RUYWcmMjA0OCkmJihudWxsPT09YS5maXJzdEVmZmVjdCYmKGEuZmlyc3RFZmZlY3Q9WC5maXJzdEVmZmVjdCksbnVsbCE9PVgubGFzdEVmZmVjdCYmKG51bGwhPT1hLmxhc3RFZmZlY3QmJihhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxhLmxhc3RFZmZlY3Q9WC5sYXN0RWZmZWN0KSwxPFguZWZmZWN0VGFnJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVg6YS5maXJzdEVmZmVjdD1YLGEubGFzdEVmZmVjdD1YKSl9ZWxzZXtiPXppKFgpO2lmKG51bGwhPT1iKXJldHVybiBiLmVmZmVjdFRhZyY9MjA0NyxiO251bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmVmZmVjdFRhZ3w9MjA0OCl9Yj1YLnNpYmxpbmc7aWYobnVsbCE9PWIpcmV0dXJuIGI7WD1hfXdoaWxlKG51bGwhPT1YKTtTPT09dGkmJihTPWpqKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBJaihhKXt2YXIgYj1hLmV4cGlyYXRpb25UaW1lO2E9YS5jaGlsZEV4cGlyYXRpb25UaW1lO3JldHVybiBiPmE/YjphfWZ1bmN0aW9uIEpqKGEpe3ZhciBiPWFnKCk7Y2coOTksU2ouYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gU2ooYSxiKXtkbyBEaigpO3doaWxlKG51bGwhPT1yaik7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcmssZD1hLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHUoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MDthLmNhbGxiYWNrUHJpb3JpdHk9OTA7YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDt2YXIgZT1JaihjKTthLmZpcnN0UGVuZGluZ1RpbWU9ZTtkPD1hLmxhc3RTdXNwZW5kZWRUaW1lP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpkPD1hLmZpcnN0U3VzcGVuZGVkVGltZSYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPVxuZC0xKTtkPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtkPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApO2E9PT1UJiYoWD1UPW51bGwsVT0wKTsxPGMuZWZmZWN0VGFnP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZT1jLmZpcnN0RWZmZWN0KTplPWM6ZT1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1lKXt2YXIgZj1XO1d8PWdqO2RqLmN1cnJlbnQ9bnVsbDtEZD1mZDt2YXIgZz14ZCgpO2lmKHlkKGcpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBnKXZhciBoPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgaz1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKTtpZihrJiYwIT09ay5yYW5nZUNvdW50KXtoPWsuYW5jaG9yTm9kZTt2YXIgbD1rLmFuY2hvck9mZnNldCxcbm09ay5mb2N1c05vZGU7az1rLmZvY3VzT2Zmc2V0O3RyeXtoLm5vZGVUeXBlLG0ubm9kZVR5cGV9Y2F0Y2god2Ipe2g9bnVsbDticmVhayBhfXZhciBwPTAseD0tMSx6PS0xLGNhPTAsRD0wLHQ9Zyx5PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgQTs7KXt0IT09aHx8MCE9PWwmJjMhPT10Lm5vZGVUeXBlfHwoeD1wK2wpO3QhPT1tfHwwIT09ayYmMyE9PXQubm9kZVR5cGV8fCh6PXArayk7Mz09PXQubm9kZVR5cGUmJihwKz10Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oQT10LmZpcnN0Q2hpbGQpKWJyZWFrO3k9dDt0PUF9Zm9yKDs7KXtpZih0PT09ZylicmVhayBiO3k9PT1oJiYrK2NhPT09bCYmKHg9cCk7eT09PW0mJisrRD09PWsmJih6PXApO2lmKG51bGwhPT0oQT10Lm5leHRTaWJsaW5nKSlicmVhazt0PXk7eT10LnBhcmVudE5vZGV9dD1BfWg9LTE9PT14fHwtMT09PXo/bnVsbDp7c3RhcnQ6eCxlbmQ6en19ZWxzZSBoPW51bGx9aD1ofHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBoPVxubnVsbDtFZD17YWN0aXZlRWxlbWVudERldGFjaGVkOm51bGwsZm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtZPWU7ZG8gdHJ5e1RqKCl9Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9ZTtkbyB0cnl7Zm9yKGc9YSxoPWI7bnVsbCE9PVk7KXt2YXIgcT1ZLmVmZmVjdFRhZztxJjE2JiZSYihZLnN0YXRlTm9kZSxcIlwiKTtpZihxJjEyOCl7dmFyIEI9WS5hbHRlcm5hdGU7aWYobnVsbCE9PUIpe3ZhciB3PUIucmVmO251bGwhPT13JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHc/dyhudWxsKTp3LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChxJjEwMzgpe2Nhc2UgMjpQaShZKTtZLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OlBpKFkpO1kuZWZmZWN0VGFnJj0tMztTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDEwMjQ6WS5lZmZlY3RUYWcmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpZLmVmZmVjdFRhZyY9XG4tMTAyNTtTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDQ6U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA4Omw9WSxNaShnLGwsaCksTmkobCl9WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTt3PUVkO0I9eGQoKTtxPXcuZm9jdXNlZEVsZW07aD13LnNlbGVjdGlvblJhbmdlO2lmKEIhPT1xJiZxJiZxLm93bmVyRG9jdW1lbnQmJndkKHEub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscSkpe251bGwhPT1oJiZ5ZChxKSYmKEI9aC5zdGFydCx3PWguZW5kLHZvaWQgMD09PXcmJih3PUIpLFwic2VsZWN0aW9uU3RhcnRcImluIHE/KHEuc2VsZWN0aW9uU3RhcnQ9QixxLnNlbGVjdGlvbkVuZD1NYXRoLm1pbih3LHEudmFsdWUubGVuZ3RoKSk6KHc9KEI9cS5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJkIuZGVmYXVsdFZpZXd8fHdpbmRvdyx3LmdldFNlbGVjdGlvbiYmXG4odz13LmdldFNlbGVjdGlvbigpLGw9cS50ZXh0Q29udGVudC5sZW5ndGgsZz1NYXRoLm1pbihoLnN0YXJ0LGwpLGg9dm9pZCAwPT09aC5lbmQ/ZzpNYXRoLm1pbihoLmVuZCxsKSwhdy5leHRlbmQmJmc+aCYmKGw9aCxoPWcsZz1sKSxsPXZkKHEsZyksbT12ZChxLGgpLGwmJm0mJigxIT09dy5yYW5nZUNvdW50fHx3LmFuY2hvck5vZGUhPT1sLm5vZGV8fHcuYW5jaG9yT2Zmc2V0IT09bC5vZmZzZXR8fHcuZm9jdXNOb2RlIT09bS5ub2RlfHx3LmZvY3VzT2Zmc2V0IT09bS5vZmZzZXQpJiYoQj1CLmNyZWF0ZVJhbmdlKCksQi5zZXRTdGFydChsLm5vZGUsbC5vZmZzZXQpLHcucmVtb3ZlQWxsUmFuZ2VzKCksZz5oPyh3LmFkZFJhbmdlKEIpLHcuZXh0ZW5kKG0ubm9kZSxtLm9mZnNldCkpOihCLnNldEVuZChtLm5vZGUsbS5vZmZzZXQpLHcuYWRkUmFuZ2UoQikpKSkpKTtCPVtdO2Zvcih3PXE7dz13LnBhcmVudE5vZGU7KTE9PT13Lm5vZGVUeXBlJiZCLnB1c2goe2VsZW1lbnQ6dyxsZWZ0Oncuc2Nyb2xsTGVmdCxcbnRvcDp3LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBxLmZvY3VzJiZxLmZvY3VzKCk7Zm9yKHE9MDtxPEIubGVuZ3RoO3ErKyl3PUJbcV0sdy5lbGVtZW50LnNjcm9sbExlZnQ9dy5sZWZ0LHcuZWxlbWVudC5zY3JvbGxUb3A9dy50b3B9ZmQ9ISFEZDtFZD1EZD1udWxsO2EuY3VycmVudD1jO1k9ZTtkbyB0cnl7Zm9yKHE9YTtudWxsIT09WTspe3ZhciB1Yj1ZLmVmZmVjdFRhZzt1YiYzNiYmSmkocSxZLmFsdGVybmF0ZSxZKTtpZih1YiYxMjgpe0I9dm9pZCAwO3ZhciB2Yj1ZLnJlZjtpZihudWxsIT09dmIpe3ZhciBYYz1ZLnN0YXRlTm9kZTtzd2l0Y2goWS50YWcpe2Nhc2UgNTpCPVhjO2JyZWFrO2RlZmF1bHQ6Qj1YY31cImZ1bmN0aW9uXCI9PT10eXBlb2YgdmI/dmIoQik6dmIuY3VycmVudD1CfX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO1k9XG5udWxsO1ZmKCk7Vz1mfWVsc2UgYS5jdXJyZW50PWM7aWYocWopcWo9ITEscmo9YSxzaj1iO2Vsc2UgZm9yKFk9ZTtudWxsIT09WTspYj1ZLm5leHRFZmZlY3QsWS5uZXh0RWZmZWN0PW51bGwsWT1iO2I9YS5maXJzdFBlbmRpbmdUaW1lOzA9PT1iJiYoYWo9bnVsbCk7MTA3Mzc0MTgyMz09PWI/YT09PXZqP3VqKys6KHVqPTAsdmo9YSk6dWo9MDtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVWomJlVqKGMuc3RhdGVOb2RlLGQpO1ooYSk7aWYoWWkpdGhyb3cgWWk9ITEsYT1aaSxaaT1udWxsLGE7aWYoKFcmZWopIT09VilyZXR1cm4gbnVsbDtnZygpO3JldHVybiBudWxsfWZ1bmN0aW9uIFRqKCl7Zm9yKDtudWxsIT09WTspe3ZhciBhPVkuZWZmZWN0VGFnOzAhPT0oYSYyNTYpJiZHaShZLmFsdGVybmF0ZSxZKTswPT09KGEmNTEyKXx8cWp8fChxaj0hMCxkZyg5NyxmdW5jdGlvbigpe0RqKCk7cmV0dXJuIG51bGx9KSk7WT1ZLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gRGooKXtpZig5MCE9PXNqKXt2YXIgYT05Nzxzaj85Nzpzajtzaj05MDtyZXR1cm4gY2coYSxWail9fWZ1bmN0aW9uIFZqKCl7aWYobnVsbD09PXJqKXJldHVybiExO3ZhciBhPXJqO3JqPW51bGw7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMzMxKSk7dmFyIGI9VztXfD1najtmb3IoYT1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWE7KXt0cnl7dmFyIGM9YTtpZigwIT09KGMuZWZmZWN0VGFnJjUxMikpc3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SGkoNSxjKSxJaSg1LGMpfX1jYXRjaChkKXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKGEsZCl9Yz1hLm5leHRFZmZlY3Q7YS5uZXh0RWZmZWN0PW51bGw7YT1jfVc9YjtnZygpO3JldHVybiEwfVxuZnVuY3Rpb24gV2ooYSxiLGMpe2I9QWkoYyxiKTtiPVhpKGEsYiwxMDczNzQxODIzKTt4ZyhhLGIpO2E9eGooYSwxMDczNzQxODIzKTtudWxsIT09YSYmWihhKX1mdW5jdGlvbiBFaShhLGIpe2lmKDM9PT1hLnRhZylXaihhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe1dqKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWFqfHwhYWouaGFzKGQpKSl7YT1BaShiLGEpO2E9JGkoYyxhLDEwNzM3NDE4MjMpO3hnKGMsYSk7Yz14aihjLDEwNzM3NDE4MjMpO251bGwhPT1jJiZaKGMpO2JyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIE9qKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7VD09PWEmJlU9PT1jP1M9PT12aXx8Uz09PXVpJiYxMDczNzQxODIzPT09bGomJiRmKCktVGk8cGo/RWooYSxVKTpvaj0hMDpBaihhLGMpJiYoYj1hLmxhc3RQaW5nZWRUaW1lLDAhPT1iJiZiPGN8fChhLmxhc3RQaW5nZWRUaW1lPWMsWihhKSkpfWZ1bmN0aW9uIFZpKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9MDswPT09YiYmKGI9R2coKSxiPUhnKGIsYSxudWxsKSk7YT14aihhLGIpO251bGwhPT1hJiZaKGEpfXZhciBSajtcblJqPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKXt2YXIgZT1iLnBlbmRpbmdQcm9wcztpZihhLm1lbW9pemVkUHJvcHMhPT1lfHxLLmN1cnJlbnQpcmc9ITA7ZWxzZXtpZihkPGMpe3JnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOmhpKGIpO1hoKCk7YnJlYWs7Y2FzZSA1OmZoKGIpO2lmKGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4pcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsbnVsbDticmVhaztjYXNlIDE6TChiLnR5cGUpJiZHZihiKTticmVhaztjYXNlIDQ6ZGgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOmQ9Yi5tZW1vaXplZFByb3BzLnZhbHVlO2U9Yi50eXBlLl9jb250ZXh0O0koamcsZS5fY3VycmVudFZhbHVlKTtlLl9jdXJyZW50VmFsdWU9ZDticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO1xuaWYoMCE9PWQmJmQ+PWMpcmV0dXJuIGppKGEsYixjKTtJKE0sTS5jdXJyZW50JjEpO2I9JGgoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH1JKE0sTS5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD1iLmNoaWxkRXhwaXJhdGlvblRpbWU+PWM7aWYoMCE9PShhLmVmZmVjdFRhZyY2NCkpe2lmKGQpcmV0dXJuIG1pKGEsYixjKTtiLmVmZmVjdFRhZ3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsKTtJKE0sTS5jdXJyZW50KTtpZighZClyZXR1cm4gbnVsbH1yZXR1cm4gJGgoYSxiLGMpfXJnPSExfX1lbHNlIHJnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUNmKGIsSi5jdXJyZW50KTtxZyhiLGMpO2U9b2gobnVsbCxcbmIsZCxhLGUsYyk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtpZihMKGQpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt1ZyhiKTt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmRmcoYixkLGcsYSk7ZS51cGRhdGVyPUpnO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7TmcoYixkLGEsYyk7Yj1naShudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxSKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmE6e2U9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPVxubnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO29iKGUpO2lmKDEhPT1lLl9zdGF0dXMpdGhyb3cgZS5fcmVzdWx0O2U9ZS5fcmVzdWx0O2IudHlwZT1lO2Y9Yi50YWc9WGooZSk7YT1pZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1kaShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9ZmkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1aaChudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWFpKG51bGwsYixlLGlnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxkaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxmaShhLGIsZCxlLGMpO1xuY2FzZSAzOmhpKGIpO2Q9Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09YXx8bnVsbD09PWQpdGhyb3cgRXJyb3IodSgyODIpKTtkPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7dmcoYSxiKTt6ZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKVhoKCksYj0kaChhLGIsYyk7ZWxzZXtpZihlPWIuc3RhdGVOb2RlLmh5ZHJhdGUpUGg9SmQoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mby5maXJzdENoaWxkKSxPaD1iLGU9UWg9ITA7aWYoZSlmb3IoYz1ZZyhiLG51bGwsZCxjKSxiLmNoaWxkPWM7YzspYy5lZmZlY3RUYWc9Yy5lZmZlY3RUYWcmLTN8MTAyNCxjPWMuc2libGluZztlbHNlIFIoYSxiLGQsYyksWGgoKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBmaChiKSxudWxsPT09YSYmVWgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpcbm51bGwsZz1lLmNoaWxkcmVuLEdkKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZHZChkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxlaShhLGIpLGIubW9kZSY0JiYxIT09YyYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUihhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmVWgoYiksbnVsbDtjYXNlIDEzOnJldHVybiBqaShhLGIsYyk7Y2FzZSA0OnJldHVybiBkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1YZyhiLG51bGwsZCxjKTpSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxaaChhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFIoYSxcbmIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0koamcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj0kZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhSy5jdXJyZW50KXtiPSRoKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1cbmspe2c9aC5jaGlsZDtmb3IodmFyIGw9ay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXdnKGMsbnVsbCksbC50YWc9Mix4ZyhoLGwpKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJmwuZXhwaXJhdGlvblRpbWU8YyYmKGwuZXhwaXJhdGlvblRpbWU9Yyk7cGcoaC5yZXR1cm4sYyk7ay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1cbmd9UihhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixxZyhiLGMpLGU9c2coZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPWlnKGUsYi5wZW5kaW5nUHJvcHMpLGY9aWcoZS50eXBlLGYpLGFpKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBjaShhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6aWcoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxMKGQpPyhhPSEwLEdmKGIpKTphPSExLHFnKGIsYyksTGcoYixkLGUpLE5nKGIsZCxlLGMpLGdpKG51bGwsXG5iLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBtaShhLGIsYyl9dGhyb3cgRXJyb3IodSgxNTYsYi50YWcpKTt9O3ZhciBVaj1udWxsLExpPW51bGw7ZnVuY3Rpb24gWWooYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7VWo9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclJvb3QoYyxhLHZvaWQgMCw2ND09PShhLmN1cnJlbnQuZWZmZWN0VGFnJjY0KSl9Y2F0Y2goZSl7fX07TGk9ZnVuY3Rpb24oYSl7dHJ5e2Iub25Db21taXRGaWJlclVubW91bnQoYyxhKX1jYXRjaChlKXt9fX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBaaihhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lPXRoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIFNoKGEsYixjLGQpe3JldHVybiBuZXcgWmooYSxiLGMsZCl9XG5mdW5jdGlvbiBiaShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFhqKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBiaShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Z2IpcmV0dXJuIDExO2lmKGE9PT1qYilyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBTZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPVNoKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2V4cGlyYXRpb25UaW1lOmIuZXhwaXJhdGlvblRpbWUsXG5maXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHQscmVzcG9uZGVyczpiLnJlc3BvbmRlcnN9O2Muc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gVWcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWJpKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIGFiOnJldHVybiBXZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIGZiOmc9ODtlfD03O2JyZWFrO2Nhc2UgYmI6Zz04O2V8PTE7YnJlYWs7Y2FzZSBjYjpyZXR1cm4gYT1TaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPWNiLGEudHlwZT1jYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGhiOnJldHVybiBhPVNoKDEzLGMsYixlKSxhLnR5cGU9aGIsYS5lbGVtZW50VHlwZT1oYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGliOnJldHVybiBhPVNoKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPWliLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBkYjpnPVxuMTA7YnJlYWsgYTtjYXNlIGViOmc9OTticmVhayBhO2Nhc2UgZ2I6Zz0xMTticmVhayBhO2Nhc2UgamI6Zz0xNDticmVhayBhO2Nhc2Uga2I6Zz0xNjtkPW51bGw7YnJlYWsgYTtjYXNlIGxiOmc9MjI7YnJlYWsgYX10aHJvdyBFcnJvcih1KDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPVNoKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gV2coYSxiLGMsZCl7YT1TaCg3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gVGcoYSxiLGMpe2E9U2goNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gVmcoYSxiLGMpe2I9U2goNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBhayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmN1cnJlbnQ9bnVsbDt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLnBpbmdDYWNoZT10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3RoaXMuZmluaXNoZWRXb3JrPW51bGw7dGhpcy50aW1lb3V0SGFuZGxlPS0xO3RoaXMucGVuZGluZ0NvbnRleHQ9dGhpcy5jb250ZXh0PW51bGw7dGhpcy5oeWRyYXRlPWM7dGhpcy5jYWxsYmFja05vZGU9bnVsbDt0aGlzLmNhbGxiYWNrUHJpb3JpdHk9OTA7dGhpcy5sYXN0RXhwaXJlZFRpbWU9dGhpcy5sYXN0UGluZ2VkVGltZT10aGlzLm5leHRLbm93blBlbmRpbmdMZXZlbD10aGlzLmxhc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RTdXNwZW5kZWRUaW1lPXRoaXMuZmlyc3RQZW5kaW5nVGltZT0wfVxuZnVuY3Rpb24gQWooYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTthPWEubGFzdFN1c3BlbmRlZFRpbWU7cmV0dXJuIDAhPT1jJiZjPj1iJiZhPD1ifWZ1bmN0aW9uIHhpKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWUsZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M8YiYmKGEuZmlyc3RTdXNwZW5kZWRUaW1lPWIpO2lmKGQ+Ynx8MD09PWMpYS5sYXN0U3VzcGVuZGVkVGltZT1iO2I8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2I8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCl9XG5mdW5jdGlvbiB5aShhLGIpe2I+YS5maXJzdFBlbmRpbmdUaW1lJiYoYS5maXJzdFBlbmRpbmdUaW1lPWIpO3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lOzAhPT1jJiYoYj49Yz9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6Yj49YS5sYXN0U3VzcGVuZGVkVGltZSYmKGEubGFzdFN1c3BlbmRlZFRpbWU9YisxKSxiPmEubmV4dEtub3duUGVuZGluZ0xldmVsJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9YikpfWZ1bmN0aW9uIENqKGEsYil7dmFyIGM9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMD09PWN8fGM+YilhLmxhc3RFeHBpcmVkVGltZT1ifVxuZnVuY3Rpb24gYmsoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9R2coKSxnPURnLnN1c3BlbnNlO2Y9SGcoZixlLGcpO2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7aWYoZGMoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihMKGgudHlwZSkpe2g9aC5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19aD1oLnJldHVybn13aGlsZShudWxsIT09aCk7dGhyb3cgRXJyb3IodSgxNzEpKTt9aWYoMT09PWMudGFnKXt2YXIgaz1jLnR5cGU7aWYoTChrKSl7Yz1GZihjLGssaCk7YnJlYWsgYX19Yz1ofWVsc2UgYz1BZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXdnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09XG5kP251bGw6ZDtudWxsIT09ZCYmKGIuY2FsbGJhY2s9ZCk7eGcoZSxiKTtJZyhlLGYpO3JldHVybiBmfWZ1bmN0aW9uIGNrKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gZGsoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCYmYS5yZXRyeVRpbWU8YiYmKGEucmV0cnlUaW1lPWIpfWZ1bmN0aW9uIGVrKGEsYil7ZGsoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJmRrKGEsYil9XG5mdW5jdGlvbiBmayhhLGIsYyl7Yz1udWxsIT1jJiYhMD09PWMuaHlkcmF0ZTt2YXIgZD1uZXcgYWsoYSxiLGMpLGU9U2goMyxudWxsLG51bGwsMj09PWI/NzoxPT09Yj8zOjApO2QuY3VycmVudD1lO2Uuc3RhdGVOb2RlPWQ7dWcoZSk7YVtPZF09ZC5jdXJyZW50O2MmJjAhPT1iJiZKYyhhLDk9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50KTt0aGlzLl9pbnRlcm5hbFJvb3Q9ZH1may5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2JrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O2ZrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2JrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltPZF09bnVsbH0pfTtcbmZ1bmN0aW9uIGdrKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1mdW5jdGlvbiBoayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IGZrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gaWsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtoLmNhbGwoYSl9fWJrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9aGsoYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9Y2soZyk7ay5jYWxsKGEpfX1OaihmdW5jdGlvbigpe2JrKGIsZyxhLGUpfSl9cmV0dXJuIGNrKGcpfWZ1bmN0aW9uIGprKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6JGEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG53Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1oZyhHZygpLDE1MCwxMDApO0lnKGEsYik7ZWsoYSxiKX19O3hjPWZ1bmN0aW9uKGEpezEzPT09YS50YWcmJihJZyhhLDMpLGVrKGEsMykpfTt5Yz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1HZygpO2I9SGcoYixhLG51bGwpO0lnKGEsYik7ZWsoYSxiKX19O1xuemE9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpDYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9UWQoZCk7aWYoIWUpdGhyb3cgRXJyb3IodSg5MCkpO3liKGQpO0NiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpLYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmSGIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtGYT1NajtcbkdhPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9VztXfD00O3RyeXtyZXR1cm4gY2coOTgsYS5iaW5kKG51bGwsYixjLGQsZSkpfWZpbmFsbHl7Vz1mLFc9PT1WJiZnZygpfX07SGE9ZnVuY3Rpb24oKXsoVyYoMXxmanxnaikpPT09ViYmKExqKCksRGooKSl9O0lhPWZ1bmN0aW9uKGEsYil7dmFyIGM9VztXfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmZ2coKX19O2Z1bmN0aW9uIGtrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGprKGEsYixudWxsLGMpfXZhciBsaz17RXZlbnRzOltOYyxQZCxRZCx4YSx0YSxYZCxmdW5jdGlvbihhKXtqYyhhLFdkKX0sRGEsRWEsaWQsbWMsRGose2N1cnJlbnQ6ITF9XX07XG4oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gWWoobih7fSxhLHtvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOldhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1oYyhhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfSxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfSkpfSkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOnRjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuMTMuMVwiLFxucmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1saztleHBvcnRzLmNyZWF0ZVBvcnRhbD1raztleHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO2lmKHZvaWQgMD09PWIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcil0aHJvdyBFcnJvcih1KDE4OCkpO3Rocm93IEVycm9yKHUoMjY4LE9iamVjdC5rZXlzKGEpKSk7fWE9aGMoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtcbmV4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEsYil7aWYoKFcmKGZqfGdqKSkhPT1WKXRocm93IEVycm9yKHUoMTg3KSk7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gY2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7Vz1jLGdnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMCxjKX07ZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBpayhudWxsLGEsYiwhMSxjKX07XG5leHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIWdrKGEpKXRocm93IEVycm9yKHUoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhOaihmdW5jdGlvbigpe2lrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtPZF09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPU1qO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGtrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighZ2soYykpdGhyb3cgRXJyb3IodSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXIpdGhyb3cgRXJyb3IodSgzOCkpO3JldHVybiBpayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTMuMVwiO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkXCIpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgUmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xuXG52YXIgX0JhcnNPdXRsaW5lZCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBhbnQtZGVzaWduL2ljb25zLXN2Zy9saWIvYXNuL0JhcnNPdXRsaW5lZFwiKSk7XG5cbnZhciBfQW50ZEljb24gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9jb21wb25lbnRzL0FudGRJY29uXCIpKTtcblxuLy8gR0VORVJBVEUgQlkgLi9zY3JpcHRzL2dlbmVyYXRlLnRzXG4vLyBET04gTk9UIEVESVQgSVQgTUFOVUFMTFlcbnZhciBCYXJzT3V0bGluZWQgPSBmdW5jdGlvbiBCYXJzT3V0bGluZWQocHJvcHMsIHJlZikge1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChfQW50ZEljb24uZGVmYXVsdCwgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMsIHtcbiAgICByZWY6IHJlZixcbiAgICBpY29uOiBfQmFyc091dGxpbmVkLmRlZmF1bHRcbiAgfSkpO1xufTtcblxuQmFyc091dGxpbmVkLmRpc3BsYXlOYW1lID0gJ0JhcnNPdXRsaW5lZCc7XG5cbnZhciBfZGVmYXVsdCA9IFJlYWN0LmZvcndhcmRSZWYoQmFyc091dGxpbmVkKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==